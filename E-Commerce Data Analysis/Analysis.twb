<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.21.1217.2252                               -->
<workbook original-version='18.1' source-build='2021.4.2 (20214.21.1217.2252)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Order Details (Worksheet in E-Commerce _Command Center (2))' inline='true' name='federated.0cu7vt70fwvmu21dbxuv41mvh34n' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Worksheet in E-Commerce _Command Center (2)' name='excel-direct.043xq9n1q1w8jb144phq40arbjrf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Sanjay/Desktop/riya/Worksheet in E-Commerce _Command Center (2).xlsm' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Worksheet in E-Commerce _Command Center (3)' name='excel-direct.1dhvqey0y9f7vc15ijjvn0a510yf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Sanjay/Desktop/riya/Worksheet in E-Commerce _Command Center (3).xlsm' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.043xq9n1q1w8jb144phq40arbjrf' name='Order Details' table='[&apos;Order Details$&apos;]' type='table'>
          <columns gridOrigin='A1:F1501:no:A1:F1501:0' header='yes' outcome='6'>
            <column datatype='string' name='Order ID' ordinal='0' />
            <column datatype='integer' name='Amount' ordinal='1' />
            <column datatype='integer' name='Profit' ordinal='2' />
            <column datatype='integer' name='Quantity' ordinal='3' />
            <column datatype='string' name='Category' ordinal='4' />
            <column datatype='string' name='Sub-Category' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.043xq9n1q1w8jb144phq40arbjrf' name='Order Details' table='[&apos;Order Details$&apos;]' type='table'>
            <columns gridOrigin='A1:F1501:no:A1:F1501:0' header='yes' outcome='6'>
              <column datatype='string' name='Order ID' ordinal='0' />
              <column datatype='integer' name='Amount' ordinal='1' />
              <column datatype='integer' name='Profit' ordinal='2' />
              <column datatype='integer' name='Quantity' ordinal='3' />
              <column datatype='string' name='Category' ordinal='4' />
              <column datatype='string' name='Sub-Category' ordinal='5' />
            </columns>
          </relation>
          <relation connection='excel-direct.1dhvqey0y9f7vc15ijjvn0a510yf' name='Sales target' table='[&apos;Sales target$&apos;]' type='table'>
            <columns gridOrigin='A1:C37:no:A1:C37:0' header='yes' outcome='6'>
              <column datatype='date' name='Month of Order Date' ordinal='0' />
              <column datatype='string' name='Category' ordinal='1' />
              <column datatype='integer' name='Target' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Amount]' value='[Order Details].[Amount]' />
          <map key='[Category (Sales target)]' value='[Sales target].[Category]' />
          <map key='[Category]' value='[Order Details].[Category]' />
          <map key='[Month of Order Date]' value='[Sales target].[Month of Order Date]' />
          <map key='[Order ID]' value='[Order Details].[Order ID]' />
          <map key='[Profit]' value='[Order Details].[Profit]' />
          <map key='[Quantity]' value='[Order Details].[Quantity]' />
          <map key='[Sub-Category]' value='[Order Details].[Sub-Category]' />
          <map key='[Target]' value='[Sales target].[Target]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Order Details]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F1501:no:A1:F1501:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sales target]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C37:no:A1:C37:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Order Details]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Order Details_6623593DB6824B08B3C780940585BBD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Amount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Amount]</local-name>
            <parent-name>[Order Details]</parent-name>
            <remote-alias>Amount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Order Details_6623593DB6824B08B3C780940585BBD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Order Details]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Order Details_6623593DB6824B08B3C780940585BBD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Order Details]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Order Details_6623593DB6824B08B3C780940585BBD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Order Details]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Order Details_6623593DB6824B08B3C780940585BBD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Order Details]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Order Details_6623593DB6824B08B3C780940585BBD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month of Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Month of Order Date]</local-name>
            <parent-name>[Sales target]</parent-name>
            <remote-alias>Month of Order Date</remote-alias>
            <ordinal>6</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales target_1CD99718C84F4ED4B45DCB22FA3391A7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category (Sales target)]</local-name>
            <parent-name>[Sales target]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales target_1CD99718C84F4ED4B45DCB22FA3391A7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Target</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Target]</local-name>
            <parent-name>[Sales target]</parent-name>
            <remote-alias>Target</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales target_1CD99718C84F4ED4B45DCB22FA3391A7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Amount]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Target]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Order Details' datatype='table' name='[__tableau_internal_object_id__].[Order Details_6623593DB6824B08B3C780940585BBD2]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sales target' datatype='table' name='[__tableau_internal_object_id__].[Sales target_1CD99718C84F4ED4B45DCB22FA3391A7]' role='measure' type='quantitative' />
      <column-instance column='[Amount]' derivation='Sum' name='[sum:Amount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Target]' derivation='Sum' name='[sum:Target:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0cu7vt70fwvmu21dbxuv41mvh34n].[sum:Amount:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0cu7vt70fwvmu21dbxuv41mvh34n].[sum:Quantity:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0cu7vt70fwvmu21dbxuv41mvh34n].[sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0cu7vt70fwvmu21dbxuv41mvh34n].[sum:Target:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Order Details' id='Order Details_6623593DB6824B08B3C780940585BBD2'>
            <properties context=''>
              <relation connection='excel-direct.043xq9n1q1w8jb144phq40arbjrf' name='Order Details' table='[&apos;Order Details$&apos;]' type='table'>
                <columns gridOrigin='A1:F1501:no:A1:F1501:0' header='yes' outcome='6'>
                  <column datatype='string' name='Order ID' ordinal='0' />
                  <column datatype='integer' name='Amount' ordinal='1' />
                  <column datatype='integer' name='Profit' ordinal='2' />
                  <column datatype='integer' name='Quantity' ordinal='3' />
                  <column datatype='string' name='Category' ordinal='4' />
                  <column datatype='string' name='Sub-Category' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Sales target' id='Sales target_1CD99718C84F4ED4B45DCB22FA3391A7'>
            <properties context=''>
              <relation connection='excel-direct.1dhvqey0y9f7vc15ijjvn0a510yf' name='Sales target' table='[&apos;Sales target$&apos;]' type='table'>
                <columns gridOrigin='A1:C37:no:A1:C37:0' header='yes' outcome='6'>
                  <column datatype='date' name='Month of Order Date' ordinal='0' />
                  <column datatype='string' name='Category' ordinal='1' />
                  <column datatype='integer' name='Target' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Category]' />
              <expression op='[Category (Sales target)]' />
            </expression>
            <first-end-point object-id='Order Details_6623593DB6824B08B3C780940585BBD2' />
            <second-end-point object-id='Sales target_1CD99718C84F4ED4B45DCB22FA3391A7' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource inline='true' name='clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection name='hyper_0'>
            <connection access_mode='readwrite' authentication='auth-username-password' author-locale='en_US' class='hyper' database-persistence='' dbname='C:/Users/Sanjay/Documents/My Tableau Prep Repository/Datasources/clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b.hyper' default-settings='yes' output-to-hyper-file='yes' prep-protocol-role=':prep-protocol-writer' schema='Extract' sslmode='' tablename='Extract' username='tableau_internal_user' />
          </named-connection>
          <named-connection caption='Worksheet in E-Commerce _Command Center (1)' name='excel-direct.0ogz6ce01w0rdg1a7zsbg1kfu65x'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Sanjay/Desktop/riya/Worksheet in E-Commerce _Command Center (1).xlsm' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Worksheet in E-Commerce _Command Center (3)' name='excel-direct.0gupz200y72zdf12zesg40v3sbiy'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Sanjay/Desktop/riya/Worksheet in E-Commerce _Command Center (3).xlsm' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[List of Orders].[Order ID]' />
              <expression op='[Extract].[Order ID]' />
            </expression>
          </clause>
          <relation connection='excel-direct.0ogz6ce01w0rdg1a7zsbg1kfu65x' name='List of Orders' table='[&apos;List of Orders$&apos;]' type='table'>
            <columns gridOrigin='A1:E501:no:A1:E501:0' header='yes' outcome='2'>
              <column datatype='string' name='Order ID' ordinal='0' />
              <column datatype='date' date-parse-format='dd-MM-yyyy' name='Order Date' ordinal='1' />
              <column datatype='string' name='CustomerName' ordinal='2' />
              <column datatype='string' name='State' ordinal='3' />
              <column datatype='string' name='City' ordinal='4' />
            </columns>
          </relation>
          <relation connection='hyper_0' name='Extract' table='[Extract].[Extract]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[List of Orders].[Order ID]' />
                <expression op='[Extract].[Order ID]' />
              </expression>
            </clause>
            <relation connection='excel-direct.0ogz6ce01w0rdg1a7zsbg1kfu65x' name='List of Orders' table='[&apos;List of Orders$&apos;]' type='table'>
              <columns gridOrigin='A1:E501:no:A1:E501:0' header='yes' outcome='2'>
                <column datatype='string' name='Order ID' ordinal='0' />
                <column datatype='date' date-parse-format='dd-MM-yyyy' name='Order Date' ordinal='1' />
                <column datatype='string' name='CustomerName' ordinal='2' />
                <column datatype='string' name='State' ordinal='3' />
                <column datatype='string' name='City' ordinal='4' />
              </columns>
            </relation>
            <relation connection='hyper_0' name='Extract' table='[Extract].[Extract]' type='table' />
          </relation>
          <relation connection='excel-direct.0gupz200y72zdf12zesg40v3sbiy' name='Sales target' table='[&apos;Sales target$&apos;]' type='table'>
            <columns gridOrigin='A1:C37:no:A1:C37:0' header='yes' outcome='6'>
              <column datatype='date' name='Month of Order Date' ordinal='0' />
              <column datatype='string' name='Category' ordinal='1' />
              <column datatype='integer' name='Target' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Amount]' value='[Extract].[Amount]' />
          <map key='[Category]' value='[Sales target].[Category]' />
          <map key='[City]' value='[List of Orders].[City]' />
          <map key='[CustomerName]' value='[List of Orders].[CustomerName]' />
          <map key='[Month of Order Date]' value='[Sales target].[Month of Order Date]' />
          <map key='[Order Date]' value='[List of Orders].[Order Date]' />
          <map key='[Order ID (Extract)]' value='[Extract].[Order ID]' />
          <map key='[Order ID]' value='[List of Orders].[Order ID]' />
          <map key='[Profit]' value='[Extract].[Profit]' />
          <map key='[Quantity]' value='[Extract].[Quantity]' />
          <map key='[State]' value='[List of Orders].[State]' />
          <map key='[Target]' value='[Sales target].[Target]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[List of Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E501:no:A1:E501:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sales target]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C37:no:A1:C37:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[List of Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[List of Orders_C47BB033F7394A0D84DA11F6AEAE9323]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[List of Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[List of Orders_C47BB033F7394A0D84DA11F6AEAE9323]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CustomerName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CustomerName]</local-name>
            <parent-name>[List of Orders]</parent-name>
            <remote-alias>CustomerName</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[List of Orders_C47BB033F7394A0D84DA11F6AEAE9323]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[List of Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[List of Orders_C47BB033F7394A0D84DA11F6AEAE9323]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[List of Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[List of Orders_C47BB033F7394A0D84DA11F6AEAE9323]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order ID (Extract)]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>500</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[List of Orders_C47BB033F7394A0D84DA11F6AEAE9323]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>337</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[List of Orders_C47BB033F7394A0D84DA11F6AEAE9323]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>45</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[List of Orders_C47BB033F7394A0D84DA11F6AEAE9323]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Amount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Amount]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Amount</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>408</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[List of Orders_C47BB033F7394A0D84DA11F6AEAE9323]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month of Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Month of Order Date]</local-name>
            <parent-name>[Sales target]</parent-name>
            <remote-alias>Month of Order Date</remote-alias>
            <ordinal>9</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales target_D4BAE787048648439E034CE4405748E5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Sales target]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales target_D4BAE787048648439E034CE4405748E5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Target</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Target]</local-name>
            <parent-name>[Sales target]</parent-name>
            <remote-alias>Target</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales target_D4BAE787048648439E034CE4405748E5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Customer Name' datatype='string' name='[CustomerName]' role='dimension' type='nominal' />
      <column datatype='date' name='[Month of Order Date]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Order ID (Extract)]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='List of Orders' datatype='table' name='[__tableau_internal_object_id__].[List of Orders_C47BB033F7394A0D84DA11F6AEAE9323]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sales target' datatype='table' name='[__tableau_internal_object_id__].[Sales target_D4BAE787048648439E034CE4405748E5]' role='measure' type='quantitative' />
      <column-instance column='[Month of Order Date]' derivation='Month' name='[mn:Month of Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Order ID (Extract)]' derivation='None' name='[none:Order ID (Extract):nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='State, City'>
          <field>[State]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Order ID (Extract):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;B-25607&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;B-25629&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;B-25649&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;B-25669&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;B-25689&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;B-25709&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;B-25729&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;B-25749&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;B-25769&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;B-25789&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;B-25809&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;B-25829&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;B-25849&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;B-25869&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;B-25889&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;B-25909&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;B-25929&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;B-25949&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;B-25969&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;B-25989&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;B-26009&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;B-26029&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;B-26049&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;B-26069&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;B-26089&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;B-25602&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;B-25621&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;B-25641&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;B-25661&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;B-25681&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;B-25701&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;B-25721&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;B-25741&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;B-25773&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;B-25781&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;B-25801&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;B-25821&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;B-25841&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;B-25861&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;B-25881&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;B-25901&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;B-25921&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;B-25941&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;B-25961&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;B-25981&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;B-26001&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;B-26021&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;B-26041&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;B-26061&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;B-26081&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;B-25625&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;B-25645&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;B-25665&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;B-25685&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;B-25705&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;B-25725&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;B-25745&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;B-25765&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;B-25785&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;B-25805&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;B-25825&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;B-25845&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;B-25855&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;B-25865&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;B-25885&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;B-25905&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;B-25925&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;B-25945&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;B-25965&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;B-25985&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;B-26005&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;B-26025&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;B-26045&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;B-26065&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;B-26085&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;B-25853&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;B-25610&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;B-25613&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;B-25633&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;B-25653&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;B-25673&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;B-25693&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;B-25713&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;B-25733&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;B-25753&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;B-25793&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;B-25813&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;B-25833&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;B-25854&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;B-25873&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;B-25893&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;B-25913&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;B-25933&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;B-25953&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;B-25977&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;B-25993&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;B-26013&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;B-26033&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;B-26053&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;B-26079&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;B-26100&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;B-25608&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;B-25630&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;B-25650&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;B-25670&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;B-25690&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;B-25710&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;B-25730&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;B-25750&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;B-25770&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;B-25790&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;B-25810&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;B-25830&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;B-25850&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;B-25870&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;B-25890&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;B-25910&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;B-25930&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;B-25950&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;B-25970&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;B-25990&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;B-26010&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;B-26030&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;B-26050&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;B-26070&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;B-26090&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;B-25604&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;B-25626&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;B-25646&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;B-25666&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;B-25686&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;B-25706&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;B-25726&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;B-25746&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;B-25766&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;B-25786&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;B-25806&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;B-25826&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;B-25846&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;B-25866&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;B-25886&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;B-25906&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;B-25926&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;B-25946&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;B-25966&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;B-25986&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;B-26006&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;B-26026&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;B-26046&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;B-26066&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;B-26086&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;B-26073&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;B-25619&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;B-25639&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;B-25659&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;B-25679&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;B-25699&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;B-25719&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;B-25739&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;B-25759&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;B-25779&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;B-25799&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;B-25819&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;B-25839&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;B-25859&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;B-25879&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;B-25899&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;B-25919&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;B-25939&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;B-25959&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;B-25979&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;B-25999&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;B-26019&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;B-26039&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;B-26059&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;B-26099&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;B-25601&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;B-25622&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;B-25642&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;B-25662&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;B-25682&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;B-25702&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;B-25722&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;B-25742&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;B-25762&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;B-25782&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;B-25802&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;B-25822&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;B-25842&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;B-25862&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;B-25882&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;B-25902&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;B-25922&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;B-25942&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;B-25962&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;B-25982&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;B-26002&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;B-26022&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;B-26042&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;B-26062&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;B-26082&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;B-25617&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;B-25637&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;B-25657&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;B-25677&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;B-25697&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;B-25717&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;B-25737&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;B-25757&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;B-25777&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;B-25797&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;B-25817&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;B-25837&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;B-25857&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;B-25877&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;B-25897&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;B-25917&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;B-25937&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;B-25957&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;B-25973&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;B-25997&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;B-26017&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;B-26037&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;B-26057&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;B-26077&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;B-26097&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;B-25605&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;B-25627&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;B-25647&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;B-25667&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;B-25687&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;B-25707&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;B-25727&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;B-25747&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;B-25767&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;B-25787&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;B-25807&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;B-25827&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;B-25847&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;B-25867&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;B-25887&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;B-25907&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;B-25927&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;B-25947&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;B-25967&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;B-25987&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;B-26007&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;B-26027&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;B-26047&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;B-26067&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;B-26087&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;B-25614&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;B-25634&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;B-25654&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;B-25674&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;B-25694&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;B-25714&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;B-25734&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;B-25754&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;B-25774&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;B-25794&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;B-25814&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;B-25834&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;B-25874&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;B-25894&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;B-25914&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;B-25934&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;B-25954&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;B-25974&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;B-25994&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;B-26014&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;B-26034&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;B-26054&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;B-26074&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;B-26093&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;B-26094&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;B-25611&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;B-25615&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;B-25635&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;B-25655&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;B-25675&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;B-25695&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;B-25715&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;B-25735&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;B-25755&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;B-25775&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;B-25795&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;B-25815&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;B-25835&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;B-25875&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;B-25895&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;B-25915&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;B-25935&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;B-25955&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;B-25975&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;B-25995&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;B-26015&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;B-26035&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;B-26055&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;B-26075&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;B-26095&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;B-25618&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;B-25638&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;B-25658&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;B-25678&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;B-25698&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;B-25718&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;B-25738&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;B-25758&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;B-25778&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;B-25798&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;B-25818&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;B-25838&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;B-25858&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;B-25878&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;B-25898&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;B-25918&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;B-25938&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;B-25958&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;B-25978&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;B-25998&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;B-26018&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;B-26038&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;B-26078&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;B-26098&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;B-25620&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;B-25640&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;B-25660&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;B-25680&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;B-25700&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;B-25720&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;B-25740&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;B-25760&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;B-25780&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;B-25800&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;B-25820&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;B-25840&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;B-25860&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;B-25880&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;B-25900&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;B-25920&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;B-25940&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;B-25960&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;B-25980&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;B-26000&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;B-26020&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;B-26040&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;B-26060&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;B-26080&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;B-25631&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;B-25651&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;B-25671&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;B-25691&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;B-25711&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;B-25731&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;B-25751&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;B-25761&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;B-25771&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;B-25791&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;B-25811&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;B-25831&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;B-25851&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;B-25871&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;B-25891&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;B-25911&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;B-25931&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;B-25951&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;B-25971&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;B-25991&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;B-26011&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;B-26031&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;B-26058&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;B-26071&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;B-26091&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;B-25923&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;B-25606&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;B-25628&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;B-25648&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;B-25668&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;B-25688&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;B-25708&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;B-25728&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;B-25748&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;B-25768&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;B-25788&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;B-25808&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;B-25828&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;B-25848&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;B-25868&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;B-25888&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;B-25908&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;B-25928&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;B-25948&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;B-25968&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;B-25988&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;B-26008&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;B-26028&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;B-26048&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;B-26068&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;B-26088&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;B-25623&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;B-25643&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;B-25656&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;B-25663&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;B-25683&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;B-25703&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;B-25723&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;B-25743&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;B-25763&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;B-25783&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;B-25803&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;B-25823&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;B-25843&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;B-25863&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;B-25883&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;B-25903&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;B-25936&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;B-25943&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;B-25963&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;B-25983&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;B-26003&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;B-26023&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;B-26043&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;B-26063&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;B-26083&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;B-25616&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;B-25636&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;B-25672&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;B-25676&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;B-25696&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;B-25716&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;B-25736&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;B-25756&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;B-25776&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;B-25796&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;B-25816&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;B-25836&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;B-25856&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;B-25876&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;B-25896&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;B-25916&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;B-25956&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;B-25976&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;B-25996&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;B-26016&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;B-26036&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;B-26056&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;B-26076&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;B-26096&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;B-25609&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;B-25612&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;B-25632&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;B-25652&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;B-25692&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;B-25712&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;B-25732&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;B-25752&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;B-25772&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;B-25792&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;B-25812&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;B-25832&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;B-25852&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;B-25872&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;B-25892&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;B-25912&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;B-25932&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;B-25952&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;B-25972&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;B-25992&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;B-26012&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;B-26032&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;B-26052&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;B-26072&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;B-26092&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;B-26051&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B-25603&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B-25624&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B-25644&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B-25664&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B-25684&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B-25704&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B-25724&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B-25744&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B-25764&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B-25784&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B-25804&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B-25824&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B-25844&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B-25864&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B-25884&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B-25904&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B-25924&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B-25944&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B-25964&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B-25984&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B-26004&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B-26024&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B-26044&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B-26064&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B-26084&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[mn:Month of Order Date:ok]' type='palette'>
            <map to='#499894'>
              <bucket>9</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5</bucket>
            </map>
            <map to='#79706e'>
              <bucket>%null%</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>6</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>7</bucket>
            </map>
            <map to='#e15759'>
              <bucket>11</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>8</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>12</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>4</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='List of Orders' id='List of Orders_C47BB033F7394A0D84DA11F6AEAE9323'>
            <properties context=''>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[List of Orders].[Order ID]' />
                    <expression op='[Extract].[Order ID]' />
                  </expression>
                </clause>
                <relation connection='excel-direct.0ogz6ce01w0rdg1a7zsbg1kfu65x' name='List of Orders' table='[&apos;List of Orders$&apos;]' type='table'>
                  <columns gridOrigin='A1:E501:no:A1:E501:0' header='yes' outcome='2'>
                    <column datatype='string' name='Order ID' ordinal='0' />
                    <column datatype='date' date-parse-format='dd-MM-yyyy' name='Order Date' ordinal='1' />
                    <column datatype='string' name='CustomerName' ordinal='2' />
                    <column datatype='string' name='State' ordinal='3' />
                    <column datatype='string' name='City' ordinal='4' />
                  </columns>
                </relation>
                <relation connection='hyper_0' name='Extract' table='[Extract].[Extract]' type='table' />
              </relation>
            </properties>
          </object>
          <object caption='Sales target' id='Sales target_D4BAE787048648439E034CE4405748E5'>
            <properties context=''>
              <relation connection='excel-direct.0gupz200y72zdf12zesg40v3sbiy' name='Sales target' table='[&apos;Sales target$&apos;]' type='table'>
                <columns gridOrigin='A1:C37:no:A1:C37:0' header='yes' outcome='6'>
                  <column datatype='date' name='Month of Order Date' ordinal='0' />
                  <column datatype='string' name='Category' ordinal='1' />
                  <column datatype='integer' name='Target' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Order Date]' />
              <expression op='[Month of Order Date]' />
            </expression>
            <first-end-point object-id='List of Orders_C47BB033F7394A0D84DA11F6AEAE9323' />
            <second-end-point object-id='Sales target_D4BAE787048648439E034CE4405748E5' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Order Details+ (Worksheet in E-Commerce _Command Center (2))' inline='true' name='federated.1ulse7p0218xhj1g9y4om0803oor' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Worksheet in E-Commerce _Command Center (2)' name='excel-direct.16j3pkj0t6mdup1feq3nb0zn4kls'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Sanjay/Desktop/riya/Worksheet in E-Commerce _Command Center (2).xlsm' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Order Details].[Order ID]' />
              <expression op='[Order Details1].[Order ID]' />
            </expression>
          </clause>
          <relation connection='excel-direct.16j3pkj0t6mdup1feq3nb0zn4kls' name='Order Details' table='[&apos;Order Details$&apos;]' type='table'>
            <columns gridOrigin='A1:F1501:no:A1:F1501:0' header='yes' outcome='6'>
              <column datatype='string' name='Order ID' ordinal='0' />
              <column datatype='integer' name='Amount' ordinal='1' />
              <column datatype='integer' name='Profit' ordinal='2' />
              <column datatype='integer' name='Quantity' ordinal='3' />
              <column datatype='string' name='Category' ordinal='4' />
              <column datatype='string' name='Sub-Category' ordinal='5' />
            </columns>
          </relation>
          <relation connection='excel-direct.16j3pkj0t6mdup1feq3nb0zn4kls' name='Order Details1' table='[&apos;Order Details$&apos;]' type='table'>
            <columns gridOrigin='A1:F1501:no:A1:F1501:0' header='yes' outcome='6'>
              <column datatype='string' name='Order ID' ordinal='0' />
              <column datatype='integer' name='Amount' ordinal='1' />
              <column datatype='integer' name='Profit' ordinal='2' />
              <column datatype='integer' name='Quantity' ordinal='3' />
              <column datatype='string' name='Category' ordinal='4' />
              <column datatype='string' name='Sub-Category' ordinal='5' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Order Details].[Order ID]' />
              <expression op='[Order Details1].[Order ID]' />
            </expression>
          </clause>
          <relation connection='excel-direct.16j3pkj0t6mdup1feq3nb0zn4kls' name='Order Details' table='[&apos;Order Details$&apos;]' type='table'>
            <columns gridOrigin='A1:F1501:no:A1:F1501:0' header='yes' outcome='6'>
              <column datatype='string' name='Order ID' ordinal='0' />
              <column datatype='integer' name='Amount' ordinal='1' />
              <column datatype='integer' name='Profit' ordinal='2' />
              <column datatype='integer' name='Quantity' ordinal='3' />
              <column datatype='string' name='Category' ordinal='4' />
              <column datatype='string' name='Sub-Category' ordinal='5' />
            </columns>
          </relation>
          <relation connection='excel-direct.16j3pkj0t6mdup1feq3nb0zn4kls' name='Order Details1' table='[&apos;Order Details$&apos;]' type='table'>
            <columns gridOrigin='A1:F1501:no:A1:F1501:0' header='yes' outcome='6'>
              <column datatype='string' name='Order ID' ordinal='0' />
              <column datatype='integer' name='Amount' ordinal='1' />
              <column datatype='integer' name='Profit' ordinal='2' />
              <column datatype='integer' name='Quantity' ordinal='3' />
              <column datatype='string' name='Category' ordinal='4' />
              <column datatype='string' name='Sub-Category' ordinal='5' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Amount (Order Details1)]' value='[Order Details1].[Amount]' />
          <map key='[Amount]' value='[Order Details].[Amount]' />
          <map key='[Category (Order Details1)]' value='[Order Details1].[Category]' />
          <map key='[Category]' value='[Order Details].[Category]' />
          <map key='[Order ID (Order Details1)]' value='[Order Details1].[Order ID]' />
          <map key='[Order ID]' value='[Order Details].[Order ID]' />
          <map key='[Profit (Order Details1)]' value='[Order Details1].[Profit]' />
          <map key='[Profit]' value='[Order Details].[Profit]' />
          <map key='[Quantity (Order Details1)]' value='[Order Details1].[Quantity]' />
          <map key='[Quantity]' value='[Order Details].[Quantity]' />
          <map key='[Sub-Category (Order Details1)]' value='[Order Details1].[Sub-Category]' />
          <map key='[Sub-Category]' value='[Order Details].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Order Details]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F1501:no:A1:F1501:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Order Details1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F1501:no:A1:F1501:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Order Details]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Order Details_69E4F20C469F476582CCECCDEAF08B18]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Amount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Amount]</local-name>
            <parent-name>[Order Details]</parent-name>
            <remote-alias>Amount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Order Details_69E4F20C469F476582CCECCDEAF08B18]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Order Details]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Order Details_69E4F20C469F476582CCECCDEAF08B18]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Order Details]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Order Details_69E4F20C469F476582CCECCDEAF08B18]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Order Details]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Order Details_69E4F20C469F476582CCECCDEAF08B18]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Order Details]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Order Details_69E4F20C469F476582CCECCDEAF08B18]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (Order Details1)]</local-name>
            <parent-name>[Order Details1]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Order Details_69E4F20C469F476582CCECCDEAF08B18]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Amount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Amount (Order Details1)]</local-name>
            <parent-name>[Order Details1]</parent-name>
            <remote-alias>Amount</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Order Details_69E4F20C469F476582CCECCDEAF08B18]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Profit (Order Details1)]</local-name>
            <parent-name>[Order Details1]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Order Details_69E4F20C469F476582CCECCDEAF08B18]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity (Order Details1)]</local-name>
            <parent-name>[Order Details1]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Order Details_69E4F20C469F476582CCECCDEAF08B18]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category (Order Details1)]</local-name>
            <parent-name>[Order Details1]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Order Details_69E4F20C469F476582CCECCDEAF08B18]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category (Order Details1)]</local-name>
            <parent-name>[Order Details1]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Order Details_69E4F20C469F476582CCECCDEAF08B18]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Corelation' datatype='real' name='[Calculation_595038141062197248]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CORR({ INCLUDE [Order ID] : SUM([Quantity])},{ INCLUDE [Order ID (Order Details1)] : SUM([Quantity (Order Details1)])})' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Order Details' datatype='table' name='[__tableau_internal_object_id__].[Order Details_69E4F20C469F476582CCECCDEAF08B18]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Order Details' id='Order Details_69E4F20C469F476582CCECCDEAF08B18'>
            <properties context=''>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[Order Details].[Order ID]' />
                    <expression op='[Order Details1].[Order ID]' />
                  </expression>
                </clause>
                <relation connection='excel-direct.16j3pkj0t6mdup1feq3nb0zn4kls' name='Order Details' table='[&apos;Order Details$&apos;]' type='table'>
                  <columns gridOrigin='A1:F1501:no:A1:F1501:0' header='yes' outcome='6'>
                    <column datatype='string' name='Order ID' ordinal='0' />
                    <column datatype='integer' name='Amount' ordinal='1' />
                    <column datatype='integer' name='Profit' ordinal='2' />
                    <column datatype='integer' name='Quantity' ordinal='3' />
                    <column datatype='string' name='Category' ordinal='4' />
                    <column datatype='string' name='Sub-Category' ordinal='5' />
                  </columns>
                </relation>
                <relation connection='excel-direct.16j3pkj0t6mdup1feq3nb0zn4kls' name='Order Details1' table='[&apos;Order Details$&apos;]' type='table'>
                  <columns gridOrigin='A1:F1501:no:A1:F1501:0' header='yes' outcome='6'>
                    <column datatype='string' name='Order ID' ordinal='0' />
                    <column datatype='integer' name='Amount' ordinal='1' />
                    <column datatype='integer' name='Profit' ordinal='2' />
                    <column datatype='integer' name='Quantity' ordinal='3' />
                    <column datatype='string' name='Category' ordinal='4' />
                    <column datatype='string' name='Sub-Category' ordinal='5' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Corelation Matrix based on Sub Category'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Order Details+ (Worksheet in E-Commerce _Command Center (2))' name='federated.1ulse7p0218xhj1g9y4om0803oor' />
          </datasources>
          <datasource-dependencies datasource='federated.1ulse7p0218xhj1g9y4om0803oor'>
            <column caption='Corelation' datatype='real' name='[Calculation_595038141062197248]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CORR({ INCLUDE [Order ID] : SUM([Quantity])},{ INCLUDE [Order ID (Order Details1)] : SUM([Quantity (Order Details1)])})' />
            </column>
            <column datatype='string' name='[Order ID (Order Details1)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Quantity (Order Details1)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category (Order Details1)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category (Order Details1)]' derivation='None' name='[none:Sub-Category (Order Details1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_595038141062197248]' derivation='User' name='[usr:Calculation_595038141062197248:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1ulse7p0218xhj1g9y4om0803oor].[none:Sub-Category:nk]' value='55' />
            <format attr='height' field='[federated.1ulse7p0218xhj1g9y4om0803oor].[none:Sub-Category (Order Details1):nk]' value='30' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1ulse7p0218xhj1g9y4om0803oor].[none:Sub-Category:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1ulse7p0218xhj1g9y4om0803oor].[usr:Calculation_595038141062197248:qk]' />
              <text column='[federated.1ulse7p0218xhj1g9y4om0803oor].[usr:Calculation_595038141062197248:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ulse7p0218xhj1g9y4om0803oor].[none:Sub-Category (Order Details1):nk]</rows>
        <cols>[federated.1ulse7p0218xhj1g9y4om0803oor].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{D4A0B27B-33AE-43C9-B0F6-CBF7AD16A126}' />
    </worksheet>
    <worksheet name='Customers who require attention'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b' />
          </datasources>
          <datasource-dependencies datasource='clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b'>
            <column caption='Customer Name' datatype='string' name='[CustomerName]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[CustomerName]' derivation='None' name='[none:CustomerName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[none:CustomerName:nk]'>
            <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:CustomerName:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[sum:Profit:qk]' included-values='in-range' />
          <slices>
            <column>[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[none:CustomerName:nk]</column>
            <column>[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[sum:Profit:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[sum:Profit:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[sum:Profit:qk]' />
              <text column='[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[none:CustomerName:nk]' />
              <text column='[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[sum:Profit:qk]' />
              <color column='[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[none:CustomerName:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F0960A6A-EC41-4095-BB1C-14B581F8F813}' />
    </worksheet>
    <worksheet name='Monthly Actual Sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b' />
          </datasources>
          <datasource-dependencies datasource='clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b'>
            <column datatype='integer' name='[Amount]' role='measure' type='quantitative' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Amount]' derivation='Sum' name='[sum:Amount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[sum:Amount:qk]' />
              <text column='[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[mn:Order Date:ok]' />
              <text column='[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[sum:Amount:qk]' />
              <color column='[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[mn:Order Date:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{BED5B0FC-FFEE-454B-9B0F-0785588CDD52}' />
    </worksheet>
    <worksheet name='Monthly Profit Analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b' />
          </datasources>
          <datasource-dependencies datasource='clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[mn:Order Date:ok]' />
              <text column='[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[mn:Order Date:ok]</rows>
        <cols>[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{7F6ECEB2-7F3B-4378-8CBB-1EAD2E268CCE}' />
    </worksheet>
    <worksheet name='Monthly Target Sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b' />
          </datasources>
          <datasource-dependencies datasource='clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b'>
            <column datatype='date' name='[Month of Order Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Target]' role='measure' type='quantitative' />
            <column-instance column='[Month of Order Date]' derivation='Month' name='[mn:Month of Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Target]' derivation='Sum' name='[sum:Target:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[sum:Target:qk]' />
              <text column='[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[mn:Month of Order Date:ok]' />
              <text column='[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[sum:Target:qk]' />
              <color column='[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[mn:Month of Order Date:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{5D8B3D23-4F51-4EAB-B7AD-5EF7047310F5}' />
    </worksheet>
    <worksheet name='More Contributing Category'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Order Details (Worksheet in E-Commerce _Command Center (2))' name='federated.0cu7vt70fwvmu21dbxuv41mvh34n' />
          </datasources>
          <datasource-dependencies datasource='federated.0cu7vt70fwvmu21dbxuv41mvh34n'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cu7vt70fwvmu21dbxuv41mvh34n].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cu7vt70fwvmu21dbxuv41mvh34n].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cu7vt70fwvmu21dbxuv41mvh34n].[sum:Quantity:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0cu7vt70fwvmu21dbxuv41mvh34n].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0cu7vt70fwvmu21dbxuv41mvh34n].[:Measure Names]' />
              <text column='[federated.0cu7vt70fwvmu21dbxuv41mvh34n].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cu7vt70fwvmu21dbxuv41mvh34n].[Multiple Values]</rows>
        <cols>([federated.0cu7vt70fwvmu21dbxuv41mvh34n].[none:Category:nk] / [federated.0cu7vt70fwvmu21dbxuv41mvh34n].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{2E8E68B0-81C4-4384-9BB0-24BE8DEF0213}' />
    </worksheet>
    <worksheet name='State based Profit Trend'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b' />
          </datasources>
          <datasource-dependencies datasource='clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b'>
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[none:State:nk]' />
              <text column='[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[none:State:nk]</rows>
        <cols>[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{B63069C0-AEFD-4113-BBFF-9CF72B5736B9}' />
    </worksheet>
    <worksheet name='Target Vs actual sales in category'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Order Details (Worksheet in E-Commerce _Command Center (2))' name='federated.0cu7vt70fwvmu21dbxuv41mvh34n' />
          </datasources>
          <datasource-dependencies datasource='federated.0cu7vt70fwvmu21dbxuv41mvh34n'>
            <column datatype='integer' name='[Amount]' role='measure' type='quantitative' />
            <column datatype='string' name='[Category (Sales target)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Target]' role='measure' type='quantitative' />
            <column-instance column='[Category (Sales target)]' derivation='None' name='[none:Category (Sales target):nk]' pivot='key' type='nominal' />
            <column-instance column='[Amount]' derivation='Sum' name='[sum:Amount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Target]' derivation='Sum' name='[sum:Target:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cu7vt70fwvmu21dbxuv41mvh34n].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cu7vt70fwvmu21dbxuv41mvh34n].[sum:Amount:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0cu7vt70fwvmu21dbxuv41mvh34n].[sum:Target:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0cu7vt70fwvmu21dbxuv41mvh34n].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0cu7vt70fwvmu21dbxuv41mvh34n].[:Measure Names]' />
              <text column='[federated.0cu7vt70fwvmu21dbxuv41mvh34n].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0cu7vt70fwvmu21dbxuv41mvh34n].[Multiple Values]</rows>
        <cols>([federated.0cu7vt70fwvmu21dbxuv41mvh34n].[none:Category (Sales target):nk] / [federated.0cu7vt70fwvmu21dbxuv41mvh34n].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{409E80BF-6ADC-4AEC-BDBC-6CB45D4E32DD}' />
    </worksheet>
    <worksheet name='Top 10 Order ID based on Loss'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b' />
          </datasources>
          <datasource-dependencies datasource='clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b'>
            <column datatype='string' name='[Order ID (Extract)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Order ID (Extract)]' derivation='None' name='[none:Order ID (Extract):nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[none:Order ID (Extract):nk]'>
            <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Order ID (Extract):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[none:Order ID (Extract):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[sum:Profit:qk]' value='63' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[none:Order ID (Extract):nk]' value='20' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[none:Order ID (Extract):nk]' />
              <text column='[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[none:Order ID (Extract):nk]</rows>
        <cols>[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{9991D54E-7750-4226-A06C-BBAE965B6F76}' />
    </worksheet>
    <worksheet name='Top 10 Order ID based on Profit'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Top 10 Order ID based on Profit</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b' />
          </datasources>
          <datasource-dependencies datasource='clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b'>
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Order ID]' derivation='None' name='[none:Order ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[none:Order ID:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Order ID:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[none:Order ID:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[sum:Profit:qk]' value='33' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[none:Order ID:nk]' />
              <text column='[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[none:Order ID:nk]</rows>
        <cols>[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{D5635FF1-28A6-4932-B93F-F3E1AAB63929}' />
    </worksheet>
    <worksheet name='Trend Analysis (2018 - 2019)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource name='clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b' />
          </datasources>
          <datasource-dependencies datasource='clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[yr:Order Date:ok]' />
              <text column='[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[sum:Profit:qk]</rows>
        <cols>([clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[yr:Order Date:ok] / [clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[mn:Order Date:ok])</cols>
      </table>
      <simple-id uuid='{F927EA0E-4F4E-4CCB-8D1B-F190C17D4BDA}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='12' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
            <zone h='97916' id='7' param='horz' type-v2='layout-flow' w='98828' x='586' y='1042'>
              <zone h='97916' id='5' type-v2='layout-basic' w='98828' x='586' y='1042'>
                <zone h='97916' id='3' name='Monthly Target Sales' w='49413' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='97916' id='9' name='Monthly Actual Sales' w='49415' x='49999' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='14' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='13' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone fixed-size='280' h='97916' id='3' is-fixed='true' name='Monthly Target Sales' w='49413' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='97916' id='9' is-fixed='true' name='Monthly Actual Sales' w='49415' x='49999' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{9A0E45FF-445E-4855-BF21-FB4EAEE3B0C1}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='89'>
    <window class='worksheet' name='Top 10 Order ID based on Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[none:Order ID:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[none:Order ID (Extract):nk]</field>
            <field>[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[none:Order ID:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{13330896-87A1-4DA4-B955-890AE3938FAF}' />
    </window>
    <window class='worksheet' name='Top 10 Order ID based on Loss'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='153'>
            <card pane-specification-id='0' param='[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[none:Order ID (Extract):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[none:Order ID (Extract):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0260DE66-600B-4066-8B59-B44DA591E908}' />
    </window>
    <window class='worksheet' name='State based Profit Trend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[none:State:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4E39C57B-6755-42AC-898F-9B3C1AC691FF}' />
    </window>
    <window class='worksheet' name='Monthly Profit Analysis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[mn:Order Date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[mn:Order Date:ok]</field>
            <field>[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[none:Order Date:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D1B5DCEF-FA11-46F7-BD6F-CD4D9746EB65}' />
    </window>
    <window class='worksheet' name='Trend Analysis (2018 - 2019)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[yr:Order Date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[mn:Order Date:ok]</field>
            <field>[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[none:Order ID (Extract):nk]</field>
            <field>[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8D6B16D2-D6F3-4225-936B-33E18FD9DDED}' />
    </window>
    <window class='worksheet' name='Customers who require attention'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[none:CustomerName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[none:CustomerName:nk]</field>
            <field>[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[sum:Profit:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C5A04949-7ECE-442D-96FE-00AE4AA6CDE6}' />
    </window>
    <window class='worksheet' name='More Contributing Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0cu7vt70fwvmu21dbxuv41mvh34n].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0cu7vt70fwvmu21dbxuv41mvh34n].[:Measure Names]</field>
            <field>[federated.0cu7vt70fwvmu21dbxuv41mvh34n].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C69F8F9D-4DC4-4403-B42B-787520CD6E37}' />
    </window>
    <window class='worksheet' name='Target Vs actual sales in category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0cu7vt70fwvmu21dbxuv41mvh34n].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[yr:Order Date:ok]</field>
            <field>[federated.0cu7vt70fwvmu21dbxuv41mvh34n].[:Measure Names]</field>
            <field>[federated.0cu7vt70fwvmu21dbxuv41mvh34n].[none:Category (Sales target):nk]</field>
            <field>[federated.1lehunq1ov8xcf1c4go3x1ida023].[mn:Month of Order Date:ok]</field>
            <field>[federated.1lehunq1ov8xcf1c4go3x1ida023].[yr:Month of Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8B72876A-C502-4CEF-B8F6-5D8380691C7C}' />
    </window>
    <window class='worksheet' name='Monthly Target Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[mn:Month of Order Date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[mn:Month of Order Date:ok]</field>
            <field>[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[yr:Month of Order Date:ok]</field>
            <field>[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CEAF6BED-E837-4E6E-ABC8-A45C6998E586}' />
    </window>
    <window class='worksheet' name='Monthly Actual Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[mn:Order Date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[mn:Order Date:ok]</field>
            <field>[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{50BCCB78-3C78-4CCF-8703-5AC49F0660F8}' />
    </window>
    <window class='worksheet' maximized='true' name='Corelation Matrix based on Sub Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ulse7p0218xhj1g9y4om0803oor].[usr:Calculation_595038141062197248:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ulse7p0218xhj1g9y4om0803oor].[none:Category (Order Details1):nk]</field>
            <field>[federated.1ulse7p0218xhj1g9y4om0803oor].[none:Category:nk]</field>
            <field>[federated.1ulse7p0218xhj1g9y4om0803oor].[none:Sub-Category (Order Details1):nk]</field>
            <field>[federated.1ulse7p0218xhj1g9y4om0803oor].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EFE03177-884D-46E2-9D3B-1928A38369E6}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Monthly Actual Sales'>
          <zoom type='entire-view' />
          <highlight field='[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[mn:Order Date:ok]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Monthly Target Sales'>
          <zoom type='entire-view' />
          <highlight field='[clean_data-node-Clean 2-83887f9a111841f7b5b96a78f911a33b].[mn:Month of Order Date:ok]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{758E46EE-1D83-4EF6-874C-B7A5952E2555}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Corelation Matrix based on Sub Category' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9Z5Ak55nf+cvMyizvTXvfPd093mIAwhCGBM2SXKfl6iKklULS6eLu9EUb
      py+K2IuN0EbcXZxWp5BOUmh3L9ZqHck1IACSIOHNeNsz7aa9qzblbWaluw/V6JlG9wDT1eBC
      GM4/YmK6Kut963mz8nnfxz+Cbds2j/AIP6MQP2sCHuERPks8YoBH+JnGIwZ4hM8PbBtNrVCu
      VLlXcldVFXvbx2wq5RJazfjEKR8xwCN8bqAWVvit3/w3/Oc/+AvKxQLlqspGOst//nf/DwvJ
      FTTDBODaW3/L//nv/gPvXhklm1pjZS3Fa9/5Xc6PLqOpZZZW1rBsm9RaEsdnvKZHeIQHhiS7
      8btFJFHh5tuvUI0c4M13zhFQ87zy3T/C23qa4wdaOX/pOv/Lv/zfafYK/Nnv/Fte/mCK/rBF
      VG3lxg+vky5rHHvsSd599+KjE+ARPj+olQp0HjrN+sR1iqbFtSuXqGg6giTh93kxNJX1jQw9
      Xc1877vf4cbEbW6OJWkNe+nv68bn85JNrZMtaWiFNJIniPDIDPoInxdYZo3x27dxhlvojHkY
      n1rE6fXjVyzWUgWGDx/G6RCxLYPJ0dt4E51o2RV0FNqbY9yZX2WgO874xDw9HTH+4//7Xx8x
      wCP8bMIyNObnlx4xwCP8bOORDvAIP9N4xACP8DONRwzwCLtifWmRyclp9M+akJ8yHjo/wOr8
      NKppcO7mHH//F76C8FkT9JnBJpPJkl1fJtw2QMTv2tNol0PnlZdeovfgILLk5tnnn8EjSz8l
      Wj87PHQMsDw/y+1kjtZYHAOQP2uCPivoaS6ev4la3SCYF3nu7KE9DQ809/I//fN/zORcku6u
      FpzSwyksPHQMcPSxxwmuZIiEfD+7Dz+AFKCYmqXtwBFkt4xt2wjC3s7Dudu3mFivYOkFuoZO
      EvUqPyViPzs8dGw9efMq7168zuTEBJ8cCrULLJ1Ll67xyvf+hB+9e+XTJu/jv9qysG0by7I+
      hcmqWI4gRjnNjfOvc3lydc9TdPR3UUktMT6fJuB6OLeTh44BvD4f5fQSt2ZWGlucAKuzI3jb
      jxGQzU+bvI/FhYvnwTa5ePHy/ieT3MiopDI5Dh45ikvZ2wO8sTDBheuTmLZNpVhEM/9u78Xf
      FR4qESg5M8pCqkjA70VSXFg0wOGCREtTHNPjJeTcm+K4X9iVHH/70kskug5+CrOJNCWibJRr
      RFv7GOyK7Wl0vHOQx70+qtUKtsODuEfx6fOCh4oBEp0DbKRSfPGrv0Dcp9CQzcKqkS1VMWsr
      rFs6gwcGPm0yd8Wl8++RzeVYT5VxR0v7n9Aqo8sxnv3iAC63d8/DbdtmeXqeI194hpAs4nJ8
      NsKCrhZJbuS5fv49Hv/aL5Pwfbqi2EMlAkkOGbcs8J3/9of89cuvN6YDiC4OHTyEqWZ57Ozj
      nzaJ98WZx5/i6PGTHD16hK7Wpv1PaEusLYzx6quvMrmwvufhmZVpLo+N8+YrL/PSy69R0T8b
      EaiSW+ODN96ktbeDybn0pz7/Q3UCALT3DXM4mSfSNtCYFcjSmEsWMNQ8V69d52vPPfFpk3hf
      jE/eoad/GI/fs7+JTI0r127j8rjRTBtR3Lv4Em3r5+RQiqaTj5G8dQXDsOEzMAL5Iq30Dh0g
      4g/ijOzzvuyCh+oEALh97SbHn3yWXHKuMS+m4KCanqVl6HGaw3sXHfYDvZTl/PnzTMws7m8i
      UebQ4aMcPnyQgYEBosHG1tHSGee1v/oe40tZvM7PZq+s5NeZm1/hzuhV/vp7f8XsRuVTnf+h
      Y4Ce/k7e/8lrGIq/wePNxrZMrnzwJsms9ilT9/Ho6u7B4XAQi8W3vW+aBpapU1VrDzaRIOKS
      VS5dmkDTNAyzMbNqLrVK++AJvvbC03xWfjDF5cXQyuRLKsePDmJbew9evnn5It/98z/ilTcv
      7Lj20DFApaJz5FA/6xtpGorztg080TZa480IZvXTJu9jsZQu8Uu/+E2Sc5Pb3r9y8RIfvPUa
      3/3+azyQJG6qvPr9H5POrzA1NUW2UG6IHpc/ysrkVX7447dQjU/BN9EAHC4fXR0thJo66B88
      Sm/T3k8zwagQ6T1NzLvTLPLQ6QCp1WUuz6XobWvGpAEOF50MHTzM4IEqutCY6JBPzrFe1njj
      J2/zc9/+NdojD2ZODTpFfvz62xw6uV35dgkaq6afQ32+B1uP5OLrP/8Nrt2YYXbsArrZWMqH
      2+VEs1ycOtKH8BlFVVWya9juOEcG4wS9zobmCEej5CtuAs6dDPDQnQAtnd08d/YoK5lyY9xt
      qYzcvEM42sT42K2GaNBrVX748ms88eQpStUH10TWV5MEo03YxnZRp7Wjg4DfTyKReHAibJPr
      594i0XuEWrWxk2xlbgnF5WD09ijVz8gK5FAUpm5d5vXXX2c125j8v7KSYnUpydR8cuf8+yXw
      vzcsz80ztpalJRpHpwHDheAi6FJ56W//hoETTzVEg0OWeOLFb3F4qANBfPA9ZvDwMTRLoqZt
      1z1Gx+exJAejoyla2ts/2b9hm2TzOl/51i9gWhb+cPyTRuyK9sEhitYEqq3glv/u90pLy/HB
      pVGwLVRVxWwwefHoyaNsvH2O46ee2XHtoTsBjjz2GI+dOsOJ44cbs9rZBrmiSjjoJ5vJNUSD
      IClceP37/Omf/+UD71q59WXOX7mGqla4MzWz7dqh4R6yqTVCzZ0P5tyzTZIry5x7901+9Npr
      zCxv7H0RgFWrMDO3QL6s4mjAlHrhvff40fe/w+/93u/x6tuX9jxedIZ4+snTJJpixGIxZidG
      0RtQgm9cuoQlCKyt7bwPD90JMHXrBhemMxzsbiIYje5tgbbNuz/5AfOLS0wu5vnaNzv3/P21
      So6ljRKHDx/CEiScDxhDLzvdNCWaiUbjdPZEtl27deMGtiCS3khjwiczgahwcKid61fGGRjo
      JBLYuy6TXp7ih2+ep1QqoYtpaqaFvEdT0GNPfoHpmXle/EY3MzOze6YBoFpIEWk9yECkxJs3
      V5lczHGoK7ynOUy9wkaqQrBJ3XHtoTsB3B43pdQiN+8sNBAHJPD0l7/J4QMHODzYTSS6txsN
      IDmcRMIhjFqVQrH4wCZIbzCCrMh0drYxdmtk2zVZltj7xidTKq6yuLhIobx3HSDa1s+LT53C
      4/M1rP6uzo7y3e98h7/4zndYzjRmifLH2smv3OaNyzOcOjpIc8y/5zlOPfkcPZ3tHB7q23Ht
      oTsBkNz82j/9ZyxO3WnQDKqxUZb4pV/8Jm++d5mD3c17+3rFDZU0d6ZX6etvoqhZPKjq2tUU
      4Qc/eI3hE9u9z4Ls4wtfGEKRnQ/O1ILImWe+zImjQ3shfxvy6Swnn36eiNOB07H3yKqWnoOc
      ODrHF7/8dVwN6hBaOcdaKgeWzlvnrvNLv9S95zmuXbrMgeHDXLxwka++sF0PeOhOAL2c4Y3X
      X+fKrcnGdi7RyXBvjDfefJfjpx5riAZfKMYXnzrGWqqEaw9phLlchkC8BaOU3fZ+POrn3Hvv
      cuHabR7YGm9bvPXKd/nDP/5v3JxafnDi70GouYnxi+/xzvsXt+pu7hWyWeZP/viP+Mn71xoa
      r6tlWnqP8cITwyTiURZXC3ueo601wcX33yPeslOkfehOAG+4hS8OHGc9udLYBLbJ5NgEuYrO
      1OwczeG9hyaLDoEbI2MgOBAf/JElV9EplyYp5JoZHj6w9f7y0grr6QxBW3lwphZknv3yV9At
      m0igsRia9PIS86sZIiGDRv1gDqcLl6Kj642l1/sTPbQuX2Qy6+LpM70ovtCe59D1GuWqRrmy
      Uwx76E6A3PoyoxOT3BwZa1AEsqghc2j4AOVicc/DLaPG0uwCAyee4MUvvUDU/2DOm/XkItFQ
      kLIqMTA0vO1arK2bw/0dOF17yE8QRPyBAF7FZn6lMSuQJxDlqTOHsQWZBoxAgMCxM0/x4osv
      4hQeMIzjI9CKKc5dGKGnxc183oHLsTdC1EqJ5bU8X/zSixwb7Nlx/aFjgOEzT9DilwlHonvY
      e++imM8xdPQYyeVlTp08sefxhlZicSPP+sIU12/cpPiAjrBsao18Rae1tRm9dtcPUMim6Dsw
      gNsTZGho8MF/MEvjxpUrXL05gde7dytQbm2Bkel5NtJ54tEIUgMcUKlWmLszxvXr1/CFGvNF
      WKaBaVR54433ERp4WrPrS8wsLDBy7Spzy2s7rj9UItDqzG3evDDC2vIyj3/1F/e+ONvi3bfe
      plou4Wob4MKF8/zcl3Y6Tz4OWqVIvOsgx4Y6WJ+9wUa+RvQBSpJkyypH212kw4+RvvMBUN+t
      xm+Nc/TMIEXDTWpmiuHBnk9el17k5p00hw4dpfdoY/4Qf6SZp57ycf7STR5/7FRDCTET184z
      m6nhqOWphjsaoAI8oRb+0T/9J2jVLMn83sWo3Poq0bZOmvqOcqxvpznioWIAxeXB7/OQc8qU
      SiVs2LMiXCoVKJZV5NUkbt/ezaBOj5/J139MOdPJytI8z3z9wXSI1bkJZkbylDxJ/B6ZD6OB
      EhEnP/jJVeJ+mbwtPWCWm8nl99+kXMrTMjPFoeOPM7xHa1YhvcI7564yM79EpVrjxa++sOe6
      QJIsk1+6SZ4wZ7r3LpDaepFXXtlMbNJzRAe+xF5tWrl8GbWi884PXsV85kkeO7o9w2+rOK6q
      qg0rKv+9wTRqLC4m6ejp2nNaZDGfo7Zp8XC6vfg8e88L1ipFVtczRBLN+D0PpgOUi3nUzZY+
      stNNwHdXcc1srFJSTVrbWh/QI2uTy2YxN50Hbq8fj2tv54BR08gXN1MzBZFwOLxnPeDj1vRA
      sE0ymdyWLucLhB7YsfghamqF4qYfRHF58Hvd265vMYBpmnweCkWfvz3Pr//Hl/Y1x8+/eJrB
      vtaGx9cMk9/7y3P7osHjcuL7yI+x5zn8fiSp8WptDlkiEtm7Y+lezM0usbqa2tccfxb7HZTG
      ElgBeKfax29nX2ho7JYItJ8b+XcJG4GK1vjNAtAtsBrRqDZhYVGt7TM6UjJxGPvbcCTDbizx
      fxOmALq1vzBnVbep1vaXKyDqFSSh8d/U1lUqDf4euz4Fa0vzDU94LyqFLCX1py9WRYN3j1aH
      JNLfHkMUBfweJx2Jut24JRogcp9c2+zGGpn1u4Wj8pk0G8klysUCU7dvMH9nHNu2KeazVMs7
      bcmCAN3NIZRNb6kgQG9LGJ+7LnZE/G7kTSWy6T5plm7FQWvUt/VaFAW6mwK4FQe9zUH6WkI4
      JJHWiBe3srvqFg+48LnuXmuLeOiIepElka6YD4/TgVMW6Yx52a3KiWUabCzcwdqsAaSrVVZn
      RqlVy5SyGySnbqFVy6SXZ1mbHceydj4jIa+T5sjddYR8LjoTQQSgpzlEIlT/DTriAUK+neKl
      bduMr6tUNpmqZljcTFbJVAwqNYvRNRXTspnP1pjYUHeVWpyyRHdzaEv/cykO2uMBALqagoT9
      LlyKg8GO6C4MYKq8/vJf8vaVKSxd5crFC+QrGiNXLrKRrzA1ep25lRT51AoXLt9A08pcPH+e
      XFljeXaC8ZllchurLC4uMDU+zkq2zJ3b15hPpslvLHPh8s2Gw1p3Q3dzmOdP3VVsTg91IACn
      Bzt4/FAXLVE/fW1RBjvjnDjQhuMjAV16TWNy5BrToyOo1QqGrjNx/TLzk+MYuk60qYXF6Uks
      0+TCT35AcmGGj2KwI4bikDgzVBerhjpiOESBs8NtKA6Jr57pIxrw0BLx8eKp3l1Nikd74gTc
      Cq2bD8/xngRl1UAQIF1UaQ57aY14CXpdHO/daVIMehQSQRfD7XWGFwVoDrnJlWs4ZZGSqnOk
      M8yRzgiabnKofaeCv3DrEoIgsDhWL8xVU8t4AmHmbp5jbWYUf6wZSZLILM/ii8QRPnKKCsDJ
      gRa6EgFCXieCAKcPtBANuOlsCqKbJoe6ExzqjuO6DxPfTKpUdZu3Zkr1dqe6Tcgl8cZ0iTen
      S5iWzfmFCoZls1Y0mMvu3GAfG27H7XQw0B4F4PGD7XQ3hzjSmyAe8nJ6sBW/WyFXUncyQGZp
      Amf3WVbGL/Peay8T7R5m4r1XMGP96Gu3ePW9W7z80ku8/847iKLAnZELrJQsqqkZ3r6ZZHXs
      A95+8w3OjS1gV4vMjJ7nB++P8vJLL/Heu+8iSqB9irkVc6tZNrJ36+iIgsCdpRSyQ6RY0biz
      lKKvLcadpRTr2dKOCmk1TSOaaCbe0opWrVLTVMLxBJ0Dg5SLBXRNo2tgiLGrF2nu6EatVPio
      h83rlJleyaBvKs/5skZ/WwTLsjk92MLcao6AR+FQd5zVbBmnvP3HFwWo1nSmklnCm46zprCH
      vpYgHXE/FVWnVK2hOCQWNwpUd+l/63M5WMlUKFb1TQYT0E2bE71RdMOiO+GnZljUDIv+5gCF
      6u6OqWhbL/ZmaUaXL8jS2FVcviDeUIyFWxfJrMzjcLqYvvI2uro91NvhEMkUVRbWC/g9Tmwb
      JFGgIx4gV1IJ+dz43DLNYR+JsJcT/XctU4Zp8+ZUieWCzrEW15bZ1e8UubWm4pREZElgMa+z
      Vqyvf3RdI+LZKQRqusHkYnrLAFHVdFqifjZyFdrjARySSK6scmKgZScDjI1Pk4gGQS+Dx8vy
      4jyy28f60jw1y0EoHObFLz3PoePHuXP5LVRPDyF9lUvjy9hqnnzVxCnLHDlxEo9TQlbchCNh
      vvzCcxw6dpw7F98kWdifDH8vmsI+WmNB4qH67qgbJqcH26lqOn6Pk2P9rYzPr3G4t5mWmJ9q
      bfuO4XS5WF9eIrkwh6woWJZJajXJ1K0bhOMJluemae3uI9rciqZWKeV35gjkKxrH+5uRRBG/
      RyEWcLOUKqA4JFbSJXwehYDHyXKqSNjvwvOROpuWDW5F5mhPnFShitclky5UyZY0QGCgLcyd
      lSz5isZge2TX3bNQ1elO+Am4FRySiFuRqGgGNcMk7HOSKqq4ZAmXLLGSrRDw7LQKiZLE0sQ1
      JFmhWsxTTK8Sbe+jWshi2zbeYBRdq6K4vchOD7a9XfbXDYtY0M1Ae4RitYbfoyAIAslMifZ4
      ANO0qGoG6UIFtWZsbRgADknguX4f3WGFt2fL1EyLXNVkrWTQGpCp1CwG4078TokDcSfZqklf
      VGG1uPMEUBwSpw60ki1WCXideF0KyXSRgbYIyXR9s2yN+plJZnf2CKuUy7g8XmrVEpLiIpdJ
      E4zEKGbTeIIRaqUcpujELdd3umjYTzqdJRyNY1SL1HDgkUVExQWGhiUqqMUspuTE7bDJl2sk
      4tGGS+29e2OG//nffm/rddDnwutSKFVrGKaJqhlEgx5S+TKK7MDjlMkWq3XmME0qqs7f+7nH
      OXig/e6aSwVsG1weD6ZuYJomhqHjCwSpaSpOV91aY5oGtmVhIfKf/uTdbXRFA25yJRXFIaHq
      BtGAh1K1hlozcEgitm1jWjaKLFHTTdxuJwHfXX1AlkQ8Lpl8WcMlS9QMi5DPSbakIkvSlmk2
      6FWoaAa6YeH1+5Ecd5nB53KgGxambWPb4HU6MEwLzbAIehRKqo5t2/jdCtmyhiRJxGKBrfGW
      ZVHOpfCFYuhaFVFyUMln8AQjWKZBTa3gDcWoFrIIkoTbF2R6aoFk8m6ohdvpQJYkilUNxSEh
      SSIu2UG2VCUa8KDpBsVKjYjfTalao2aYvBT/Dzg3lWDbtlkrGUTcEjXTRnGIrBd1Qu76Tl+u
      WSR8DtIVE8OyafI5eLN6gN/KfHWLBockEvQ6SReqeJwyumnicytkiyrRgLvOfKZF2Ofa6Qjz
      bLrNXZ66LBpP1KuUReN1L5o7crfGpNtbN6E1N9ePMqccYpuKJ9UfHOe2MR/9xv0hX1LJl7Yn
      Omzk6oqqVjPQNsWFfHlnMsSH8PjuPgSStP2WfPjwb12ToKbvPMHShbqt+UPxJJW/Kx7cmxNQ
      u09urW5a5Mv1EAh18zOZYp3m2j07Zb58/5iakrqdrsI9YRiZkrbr3/dCFEX8kfrvrGz+UIF4
      y+ZV59Z7nmBkt+EAVDWD6qZJU9NN0OubDmy/J5ni7jkKgiDQ7K+fkB8edO2hu6eVbzOxPea9
      vw/XMK2t36Oi1b87u3kvP3wfYC3bYN74ZwlFdhAN+z75gx8DraaTyuw90O1DGKaFz7c/G77L
      6cS5R+fURxETcsj7KaVuO7Gs/d3LoFBGkjL7mmPNjuB4sIIvuyIvBJDlxh7lz12b1GS+wrvT
      O4Oa9oLvvHyOsTuNxcgDOBwO/od/+PP7osEwrIYLVn2IX7vzr0io8w2PX3J08h8iv7EvGn4+
      9yd8ofLmvub4R9q/praPdiaSJO0tUvYePHTRoI/wCHvBDgaoqWVWVlbIF3evZmDq6q5muM8K
      pmGQ3VjbMt1ZpklmYw3LskivJdlYWaKmaViWRamQ33UOhyRuM016nDJBb31HCfvduBQHggDx
      kHdX5d22bQrpdUxD3/Zaq5QxDZ3cehLTMNCqZQrp9V2dN3pNo5RNbV0z9Br5jSSmXiO/vkJu
      fRlDr1FIraJVdpZPt23YKBlbDiTLtlnJ6+Sr9RCXtaJOuWZSqVms5PVdabAti1J2Y+teAuia
      ilHTMHSNUmYd27JQS/ldaQAoqCbZ6l2FNlU2WC8Z2LbNalGnpJlkKgYL2RqZyu7PUcjr3ErA
      VxwSiaCHiN+FILD1P3Bfh6AkCoTuaeckwNZrv1tGcYh4XQ5igV2U4MkLbzMvJVi98zq/9g++
      zezMHJ29/dSKaVIlA1/5DterPZzo9OJVBJZTJZrDbhbXcgwM9JGcn8YVasLnMFhOFentamVm
      appEe/fWQ/VpYuTi+8iKQja1Tu/wEcau1Z05a0sL+IMh5ifHGDh6kmIuy/TtG7z4K/9g23hB
      gKeP9VJWa1wcXUASBZ462oMgCozOrtHfFsXhkEjny4iCQE9LhKt3thdYSk6PUylkMfQaQ2ef
      pZzPkFtfIbu6SEvvMDW1wtrcBG5/iHIuQ1P3AIF429Z427aZuvwODlkh1tFLuLmD1OI0NbVK
      JrmANxBmYewaB858kVI2xezNCxx7frsIlizo3FipUNVtfvFIkKpukyzo3NnQGEw4qegW3RGF
      83MVEn4Hq0WdRPf2e7kycRVBlCisL9E6eALbtpi6+Brhlm4kh4KuVUgvTdUtQtUyfWee3zbe
      tGx+NFFEkQSe7/fhdYos5mrMZ3USPgelmkW+avJEl4fVosF6UucbB4Pb5miJ+GiJ1L3XFyaS
      SJKAxyUz2B5hcaOAKAi0Rn1ouklb1MdbN3cWEj7aHavraW6NpVSJwbYwhmUBAgMtQURRYHIl
      R8i7a461RWptBUty8v5rr2A6JF56+RVe/dGbrE1cYmwpx4U3X2E5W+Sll1/D73WTSa1y5a2X
      +MnFq/zgR+9TVav82R//Pm+9+tf85PUf88HNeaoNVif7JAiCyNCJx7aytwy9xsFTZ6mpVVq7
      +/D4/fgCQdRKmUiiecfOZ9twZWJxyybtcsqsZoqMTCc52N3EjekkhYqKx6VweWIJxy4xU5Vi
      lp5jjyFuXvMGIwiCQLi5g1h7D6VsmkTXAPH2Hgxdwx/Z7sm1LQunx0vP8SfIr9dTOeOd/ZRz
      aeKd/UQ7egnGW/BHE1QKOUTxLg22bfP+TImxNZXTHV4innoFCa8iUqlZ6KbNdEojWzEZWVGR
      RJhJa0Q9O3dPyzJpGTiGuVmZLjU/SazjAIIgEmnrpVrMEWxqR6sU0dUyWulufu7omsqNlSpd
      YZmDzS4yVRNREHDLIsmCTmdYZiFbw7ahLSijWzZP9+5UwGMBFzdn1lH1uhe8qhmUqjUmljI4
      ZYlb8ylkSWRqOXvfqnumZXF7MUNw09fRGvXSEvbSGfdxJ5mjpOoUKjUEQdiNASR6DhzEa1RR
      ETadHcLWzQaBzo421jcyW0fRxcvXOXXyKIap8OQTR3jt9XeQPUG+8cu/yvGjJzjW7eWN9z6F
      vle7LdbQWZyawOV2o6lVBFFkYWoCySGzujhHoq0TvaahVsrMjI5QLe88usN+DyGfG9khYVs2
      8ZCPAx1xppZSDLTH8Ltd1HSTgfYY9i6Jli6Pj9WZcUy9hq6prM9PoVXLxNq6mLj0NtG2Lty+
      AGPn36Dr4MktRvkQgiiiVcqs3LmFLxxH11TGPvgxLf2HcLq9LI/foO3AUarFArH2HizrbuSu
      IAg82etjIO5kfE0lu2kfz1QMOsIyXqdIyC3RFVEwLRvDtPlCt4+Z9C6mUNsmm5xFEEWMmgqC
      QGZlhvTSNNOXX6ep9xDeYJy2wZN4gjFcvru798EmF0db3CwXDKbTGn5nnQFFQeBgk4sP5iqc
      7fQgiVDVbcqaRdC1czPJlTX6WsO4lLo/AaArEWBhvYBp2XQlAlg2+D0KPre8FX91L2RJpDvu
      p6zqKA6RbEljo1ClZlh0xPx4XTKCUPeT7LACVQsZZhaThOOtNIU9zMwu0NHTi15KkyqZtMd8
      VCyFWqWI1ymykqkQD8gUyjr+UJjs2jKeSDN+h8FCMkNXZyuL8wskOroJfQoi0EetQHqtxuri
      HG09/RRzWbyBACtzM7T19KNWynh8/q32oOViAa8/sM0KJAoCg51xJFFkbjUL2MgOCZcik0wX
      6EiEyJWqlKs1etuizCUzIIjbrEC2ZbG+ME2kpYOaWgEEMskFnG4vDsVJOZ8hEG3aEpOaugYQ
      Zdc2K5BWKVHMbBBt7aJazFMp5tAqRUJN7YiSA5fXj2nobCxM4Y8k8IVj26xAtr25s3slBARk
      SWA6pRHxSrQGZMbWNDrDMjWzrhscbHKxonRtswJZpkE2OUe4pQetXMDlD2FbJqauU8qsUlMr
      BBNtVApZ3P4wbn9ohxVoraijmzYJn4OqbrNeNrBt6I8pTKzX6Qu5JAwLPEp9//2oFagt6iNd
      rCJLEiW1hltxUNEMREGgPe5nOVWkJeLDrThYy5Upa+Y2K5DiEIkH3SynywTcCn99kjsAACAA
      SURBVCVNJxFws5qrkAi5Kas6as3EIYmPzKCN4JEZ9C4+72bQz50jzLJsVG1/IdaiKKHssW3o
      vXA4HGhaY1UOPoRkGzit/a1DME2sBkufA9ji/nsSq5ZEwdyfQ0+WJR6g4ON9IQhiw+v43DHA
      QjLLf/nT9/Y1x5nHDnLyC2caHq/rOn/+J/vLSvvVxB1+vev6vubIzGTJqo17UNNynmRlZ8nw
      veD/2himkG88uw7gN/7FsU0maAyTcyle+2C6obGPHGGP8DONnQxg2+i1GrphYBg7HRWmYTRQ
      qPWni3stAQKg3LOb3JsAc7/aNqZhbDmxPnxt1DRs28bQa5hG3XGka+p9j9qPzq04pC0r2Yf0
      iKJw3wrLpmWjGdaWdUc3LVS9/vrDOH7btlF1C+t+apskc2/xHEF2gkO5+7cg1P857i+yyB8p
      fyJLIqJQp1txSIhCvVfM/YJ5JVHYcc8/XLPskLbukygI93Uq6jVt6z7bm8+jtZmzXtO0ev66
      ZVHTds8IEz6yjrqjs/7dTllCcYgIQj1zbIcItDZ7iw9Gk/T39zBy6SJfevHLRGJRcqkNZG+A
      mavv03bqGdxWDUGUKBXyhKL3z/D5aePMYCsel8zyRoGplSyPDbchiQI13WRiKc2vPnuIP/rx
      TTriAU4OtPCdt0e3jTcNgxtvfh8BgSNf/Bqiw8HsyEXyG6t0HzrFxtIs5VyazoMnySQXsEyT
      /tNPb5sj7HfzC08f5s9fv05V02mPBznY3UTNMCmrNQIeF6uZIu3xILJD4u3r249r27Z56WYW
      1bD50mCAuF/m6mKFZL5GV8RJqmSwnK9xIO6qe1lt+Lkj2zO6RH8U19ATYFlUrryKoLjxPv6L
      1BZuISguBJcPbBtBEBEUJ9rcCOS3PzzDHRH8HoV8SWNiOUt7zEdLxMfiRpGAR6Et6mMpVSTo
      dWJYNtend/Yf/srZIcDmneszVFSdr5wdxCGKjC9s0NMSQXZIvHp+jC+dHqBY0Th3a7sSv5Fc
      ZnLkBk6Xi9PPPE8+k+bmxQ9wyDJtXT1sJFfo7D/A8twMgiAwePTkLs9ECy6ng5lkjqWNIp2J
      ACcHmrkwtkI86Ka3NczYQoqAZxdH2O3RcZ54+lmODPWgVStMXHmDa9OrXLt4nj/4w78km06x
      tnib/++Pvsf1937Ia+dukyl8Cp3NG4QgwLs3F7bySzXdxOdS0HSTg11xbs9t4JIdhH0ukumd
      EaA1tUK8vYemngHUSglRlGgbOIzi8hCMNxNv7yEQayLW1oXL4yPUtFPezRar3J67a5mKhby8
      e3OWmm4iSxKvX7lDPOQlXShzcWyBxD3RrGsFnfE1lYjXwTcOh5hO1e3zbUGZjaJBa1DhSKub
      mNeBBfid0o4kELntAHJLP+r4B5jlXP0UEEXMchYp0oqt1xBdPjD1egL51R/hiLXzUSiyxKXJ
      1a3NrKc5hG1DIuRhcjlLvqwxncxxY3Zj126NskNiPVvkxp2VrXqkAgLFao3OphCabuBSHAx1
      Jlhaz29LiPkQ6ytLnH3+yyguF7Ztk9lY49jZJ/H4/MxOjGHbNusryyzOTFEuFslndjbPNi2b
      928tEQvUI3Znkjnm1/IsbhSYTua4NbtBqVJDEndxhLU2RZmeX6ZQKOLyBuhsiZFfnCAlRPEr
      wla5wQNHH+PYmac50iZz5eb4DiL+ruCUHcRDHvRNk2LE7+L924s0hb04ZYmhjigD7RE8Lpnh
      rjjej2RjOWSFUi5NMZNCVpyYhsHszYsMnX0WtVIiu75M3/EnWJoYwReJ0dx9YDcy6qLB5omu
      agaJsA+PS8HhEEmEfNQMk4DXRVssSKF81wkVcEu0BmXyVZM76ypxnwPLtpFEgS8PB7m2WOb6
      UoWvHAxxrM1DZ8RJ1Lt9DUZ2FbOQQgq3InoC9Z1edKBNnEcQRBzRNqojbyJ6QwguL454J1Zl
      Z5VlSRQ3c3nrCymUNWbX8jhlCb9boazVxd/6WneKL4ZpEfS5aYrU0zgt2+bi2AKmaXF7dpXx
      +XXKag2HJNLRFOJAR2LHPF5/gLWlBdTN4gMen5+N1RWqpRKBcIS+g4epVkqEojEGj54gn9sZ
      iu1SHDSFvVsxa05ZYmq5XnG7vzXMdDJLtWZw5c7qThFo6PRzTI+PsJ5z8cyzTxP2Kfj73CxO
      jRM4+iX8Cig+H00JCZfbomYpPHnm2K4Pxd8FLo4vM9QZY2Rmnaawl/NjyxzqivPerUXUmsGN
      6TUKFQ3bhpHZdcofqVIhO10kOvuxLAtRclDOZ5CdbqavnaO5dxBD05gduYQ/EmdjYQZdU4m2
      926boynsQ3FIDHYkWEkXmFjc4GhfCxdG56npJod7mzl/a55o0EMk4GEjV+LDpgFuWcQtizze
      42MpW6Mr6iS5GcSWKuk82efn3EyRtyYLnO7yMpvS+OpH4mfsSgGjUkDuPIQ2dRnRF8auVVA6
      D6PNXscqZnD2n6J6620QBOTmPmoz10DefgrcmFlnqCPCyNwGsYCbm7MbDHVEGF1II4kCk8sZ
      JFFguCOCKO4MRrNtm9szq/g8TnKlKrGgl7Dfw9JGjtVMkdODHZy/PV8/MWdX8bmdO2T47gPD
      TI5c59Dps2Q31km0tFEu5Bk+eRp/MMz4jSscOlkvWz83Oc7gsZNML24vJ39tapWe5hCjCykS
      IQ+lqk5xMwd6OplFNywKlRoHu2KfP0fYudElfv2/vLavOc48dpC2tj10XPwIPi0z6P+2XzPo
      nSzmPsygi3I7/3fzr++Lho2NDQr53aNsHxS/8S++9cgM+giP8Fngc+cIUxSZRGzvRWvvhShK
      qPuoLidbKudOfXdfNHxnvY/HL//yvub406cuc8DfWO8tAMHRzin/oX3RcDxUps97/3zrB8F/
      upSmwQY0AORyecqVxqKNP3cMAOyqgO1xhn3T4BD3JzkKApj2fg9gAaGxzhWbNOxvPNR9Gx8t
      NrZX2LbZWDOTrfGNj30kAj3CzzR2nACj7/2QKymLY0NDzN+4wgvf/nuImoqsuMAy0E2b25fP
      0XX8CYJOETZNdjWjXhBLNwxsBBZuX8DV/RhNHhtBcuCQbN74wSuIniBt3YP0tEYwbQFFltB1
      YyugyelUqGkakqyAZWBaoCjKfT2Ph7qiRPwuZlfzLKVKdMT9tEV9zCTztEa9tEZ93JpL0d8a
      pqabvD+2PQrUMk1G3n4ZgMNPfx1BEpm5do5CepWOoeNkVhZILc8yePZ5NhamcChODp7cHkc0
      mqwyslKhPaTwZJ+fxYzG9aUKCNAckFnK1kj4ZeYzGrpp8/dPR3euo6eJvrYYL713G4AvHO4m
      5HdzaybJ4Z4WHA6RC7fnOTPcSamq8da17Upfuljjh9c38CgSv/BYE2XN5PWRFIWqwdn+EGPL
      JWRJpCXs5MZcgX/83M6GFYvj18mtLhNp7aTtwBEyKwuszo4jORSMmookK3QePEFNrTLy1ss8
      /e1//jGPVmMIemSGW4OUNINbi/UiZN1xL80hD7PrRdrCHhbSZaI+Jy5ZYiK5UwE/M9RKxO9m
      ZGaNlXSJx4fbSGxaCJ863MH0SpZiRaMzEdzJAJZpYFkCkuTANAxGL73F+FQSdyCOXU7TPXyM
      21fOowY6uHPuVSJdB6G4gVMRCDS3cvP2GpJV4ERXkHVrgg/m5zlz5gztIZGM6eFUc5CiqnL7
      yjneef8azz57kivzFWrZFaKSTseRU9wencDpjeAoLtM6fJLHz5xCvg8DyJLI+7dXONQVZSlV
      or81RKmqE/AqXJ/ZQBQEDNNidNPz91HTXU0tE23rRnLIqOUi3lCErsOnmLr8LqGmNryhKJ5g
      mFCildWZMbzhuzWOTMtmKVtjOVfjV05GeGOibltvDsrYSxBwSpzs8FKpWfhdEn6nhGHZpEo7
      9Y/bs2vEQ9szpH5yaZJnjvcyt5qhoukc6W/l3RszHOq5W1LQtm2WMxqL6SpfPhpjZKGIZdeL
      ZJ0dCHNlJkd/sxdNt6jUTE70BFnO7C6za+USh575GjPX66Xfw5v5DUZNQy0XUcsFtGqFjYUp
      4p07e+5+GmgKurk0k+ZAcwABcCkSDkmkohl0x31UayYBt0xH1EumrO2aFywAP7kyw7G+ZlbS
      JUzbrodd2FCs1PC5FW5Mr+GQxN1EIAfHH3uCQwP1lpKry8u09R3ixGAnuujlyFAfLW2d9Pd1
      4fCE+cYLT1I2JI72t7GWLtDU3kPEp2DZUM5liHcP0t4URlJcqIUM7f3t3L54g7HZJC1BJ+Ua
      dPYdJJGIMNjdRHI5Sbilj7MnDnPq7Fnm7ozXCyzdB7JDwu9RsDY9k8WKzuhCmpDXSdTvIlvW
      KFZ1In43Ppe85TD7EJJDplrMUy3kkGQZyzKZuX6OvlNPITvdJKdHae4dRtdUDjz2HIX1u90n
      bUAzLCQRUiUDbbPceaVm8eJwkGRe573pIgcSLg63ujnY4qa8yQyfBJfiIOSrV08L+d11T3K+
      TCTgwe38SH1Tw8Ili6znaxSrBqIA+YrO9bk8Xz2e4PZSCQQ4O/DxxgPLNFBLha2k+LW5SRAE
      2gaPkugaoGP4BCt3blFTKyxN3KSc3189oN2g6iYhj4Iii9hAwC3jc8l0x+t5wNNrRXwumXy1
      xtRqkbB3Z1yTU3YQCbi3CooFPE4mlzJEAm7ev72IU5aQJZFY0IP0m7/5m79572DZJTMzOUFR
      tejuaufoyZNsLM0TbO6kt8nLbDLHsaODzM6tMNDXTSQSozniYSZj8tTpIwQDQVqaYySa22nr
      G8JKz1GTvIRDQTqagly/OcXxx88S9ogEm7vp6u4iGgrRFA0Ra2qhZ+goem4ZVzCGqJdxh1vo
      amvaCpxKZsq8M7K0RW++rNHTHGR8KUM04GJhvcBQe4TJ5SySKLKWraDpJkGPk1xZI1fWCEUC
      uN31wqmi5MDQa8hOF95QhEo+SzmXJptcxB9JoLg9eAJhKoUcyxM3aB86jtvt5Ins9xEFgahP
      piWocHm+zOM9PtaLOjYC52ZLnOr0UtIsZtMaLllkJa/Tn3DRGpS5XY5yLt+ytY7jA634PS5q
      uoHHpbC0kae/Pcbl8UVkSarnuc6u0dsaZWopRVmt8StdK8RcOmGfTFPIyfRamYFWL7phU9FM
      ltMaK1kVr0tibr1KtWYyv1ElV9brD4E/ynXnk1s0+CMJliau03X4NMXNKhe51aV6eqRtk00u
      0n/ySZp7hoi2duGPJmhx6USV/VU7Pr9kbwVYFqo67VEvy+kKHqeDdFFjNVdlvaCylK7Q2+Rn
      PlUiXarRHvYws16iWlXJ5++GuRQqGj3NIW7NrtMU9pFMlwj73UwupTnck2BxvUBJrVEoa58/
      R9iVqTX+zZ/urztLd1874Ujgkz94H8hWlX85/T/ui4Y/X+vntxf23oXyXvzF05cYDDZuBl2V
      2vmDwL/aFw0nQmUGfLuXWnxQ/PtzZsN9iAFy2TwL841l+D2yAj3CzzQ+d34Ah8OBLxj85A9+
      DL6+/vscXRv95A/eD5ZNenp/8u+LzdN85Uv7KxXzr68NM19qrAs8gNsXoOf4/tZxdullWq2L
      +5rjt5q6759g8AB4T4rz79cHGxr7uWMAEBDF/R1cLr2M38p+8gfvA9uyyeznzAa8gkHQtb+8
      4oIus6E9WBfK3eCTZbr2md0k6FUc5v5igdxiGWEfv6lX1Bp+Jh6JQI/wM41dSiO+wZW1GqeP
      H2Ogs2W3MQBcOvcuh08/jVsGPZ/kx1eX+PpzZ0jeuUnZ10V/y/7ElAdFf3OAqN/J7HqR9bxK
      X7OfsNfJ/EaJqN9J2OtkbqNIX1MA3bS4PL29padh2vzVSA5ZFPjW4SCWDW/cKbJeMvjqUIB3
      pkv0xRQKqkW6bNAdUTjeur00uiPRjdJ1BCO1QG32Bo7mXpTOQ+hLE0iRFkSXF315EkfrAILk
      oHLlB9vG27bND69vkC7W+PkzzfjdDt4dy7CaUznc4Wd6rUK2rPOVY3H+4oMk/+T5DrzO7aZU
      2SHytceHuX5nmYW1HJIo8NWzQ9QMk1szqxwfaGUjV0I3LFpjAUamk+Sq2603qYUJcquLhFu7
      ibb3Y9s2s1ffwhdtJtZ5gJs/+jMGnvgqqfkJ8uuLDD31zW1PkG3b/NW1DJZl863jEWRJ4Cdj
      eVJFneeHg7w6kuXLwyFEQeBvrqf5X5/b+Xwtpcq8M7JGW8zDF480ky/X+OPXZ/iHL/Tid8v8
      7g8n+dqZdiaXCmi6yQvHd85xpCdOPOjh5uw6qXyVwfYIh7pjvDuyxFBnlEyhSknVaY/5djJA
      Ta1QMwQwNL77t98nKhl4Ag4uT1foDlho/jbKuSxxRWXq6tvcWlU5O9TK3NQYvzs+wjNP9JOp
      2vz4b2/gdmicOXOCsYUNyqUqEbmCM9rH888+jmPf8Tx1uBSJS1MphtqCrOfVLXOpJAqkCipR
      vwvdsLdyUO+1eVV1i0zFYDDhpGZAUTMJuR00+2U2SgY3V6rYsPWg2LAjH1pwenDE2qlcfhnX
      8FP19yQHtmkgyEo9O0sQEVxezOwqtlZB9IVhs4lEzbBQaxYuWeKbp5sYXSpxdiDEFwbDvD2a
      xudy8PzhGD+4tk7IK3Oow7d7cV3D4sbUCtJmXE4i7Gd0bg2PS+FgdxOvX77D6eEOFBl+eGGc
      xw91kZvbnk1VLeboPf0cK2NXoB2K6SSKy4ttWazeuUG4tRuH4qTz6BdYuPkBssvz4TJQdYuy
      ZtIWUgh7HKwVdDojTjrCCusFHa8icbbbj27adEUVuqPb6/jYtk1ZNRhbyPPtZ7p548bqZjcb
      mWO9YSzL5sZslo64F92wuDqVpq/Fj7pLN1PFIfHOyCKHumKk8lUmljIEfS58mz6Fmm5yez6F
      wK4iUN0R1tMWx9ANVE3FNE2OP/kCnbEAfQePIhpVDMMg0nGAqKIxv7xGvK2H1oAb1TIxLYtQ
      vI2OmIfJOwucfPwLCKbK8MFDrM9PU/kUm+Q5RAGXIm0lii+ny1ybTdMW9VKs6sxvlOht9rOU
      KVPWDJzy3SXPZWoUVIuCalHSTByigGnZHEg4CbklbOBEm5uqbpMum7ww4Gft3nREyYHcPgwI
      CC4fwma7IiO9QvXaj3HEOxEVN+roe0ihJkSXF9HtB+Ou7L9RqLGQqlKpmWwUavg2nWRv3Eox
      3OYjEVT48c0Nfu5UYjOZ+/4bx72Modb0zR9dQdv0LSgOabMVk7JrAJltmhiautX7q7C+RCWf
      Ir14h3IuRWZ5hvzaIqmFSaKdA9toWcpqpMsGBdUkXzVwOgQs26Yz4qQzopAq6Vt67m7FCUzL
      ZmSurpflyrUt56co3s20W1gvMZMsMbaQp7vJx6mBKAsbO83AskPE65I3C+LWk+LnVnNUNYPZ
      1RymZSE7RJrC3p0nQFPPAeygG0lW6GuNotkyXR0xBL8P2TWEHXQhHz+GU7JRJBuXN0hndw8t
      uoisRfFHfEQFJxF3GK/YgtPr49bNa+i2BAi09/bj/hQ1j9n1IgPNAcaXc0T9TkRB4EDEy+RK
      ns54vXzeyHyGvqYA1ZqxbccYbqrnnV5cMPEq4laJ8durKl5F5MkeL+/PlukKK7hlgQ/mypzs
      uMfqYhrUpq8gOD04D5xFm71Zz8E1dZwHzqDN3kBQ3Ci9J9AmziPFOhFkBauch0jdK9sWcdEW
      cSE7BObWqzxzMMJiuopu2FyZyTPY6sO04M1baQ62+1nPa1yayvHc4di2++BxyQy0x7GxKVU0
      SpsZUMWKxtRSiscOdjI+v45pWZwabOfC7QVk5/ZdONF7iOTkNZr7j1FMJ2kbPoNRU6lVy3hD
      MUqZNVz+MOXMGt7Q9gK//Ym6WFjSTDTDxu+SWC/ojCWrmLaN1ylxbaGMWxbRjPqGc2W+xKmu
      eviHQxJ5YjiBppu8fj3J8d4IixtlZIfIcqpCtWbyrcc7SBU0FIdIMlNlcrnAF4808cFHDFnT
      KzkOtEe4Pr1GIuShWjPIlTR0wyQe8tQL41LPDvupO8KqhTRXR8boGz5Gc8S/7/luzGX47e+P
      7GuOf6b9PqesxrOxbMsmM914iyUAb0eY4GDzJ3/wY/Dtd04zWWi8xZHP5+PEmZ1VFfaCX9a/
      y1Pm/gqVyV39+7ICvbnWzP8xeryhsT91M6g7EOXJJ5/6aX/NIzxCQ/jchUKMrRT4nbem9jWH
      X1vHaTQeQmDZNqsL+yvQG2+J0Npzfyvbg+Dqgkl5H1EIqqqyMNd4cV2AgYSTttD+aoOKSuO+
      DICSqbBRa6z96OfOESYINNwR8EPkzDimsDMm/0FhWRbJfRYC0+UoDsf+GED25vDtIxDNxqZc
      anwjAFgPhbHs+Cd/8OOwv1AiBEFAVhpLqn/kCHuEn2nsCIeeuXaelBRg5fpbmOF+/B85nWyr
      yms/OUd/X9fHTFvjR6+9Q39fD9XMEjemU7Qm6lYPs7TGd77/Fj19fSiOvfNfqqRxbSG39Xp1
      ZpSlsSsobi9Oj5/00gzL49eoVUuszYyRSc7jDccYffdltHKRQKwF07S3TIa2ZTF79W2yyVmC
      TZ0IokhNLTP61t8QbulmfuQDsiuzGLpGcvI6tm3j9ocp3VMNL+J3cWqgCUWWyBRVXIqDUwNN
      OB0SUb+bA+1hYkEPfrdCZyLAaraM1+chGKobBWzbZm7kIgu3rxJKtOJQnCxPjrA4eg1BFJi+
      +j75jVVCTe1sLEyxNH6dWHsv5bK6lQdh1DRmr75NKbNKINGOIAhU8mmmL79OrHOQ1ekR8utL
      VPMZ1mdvU8mncQZirK6sbq0jFvTytSeGGdusctcWD/LkkR5EUaCrOczR/lYyhQpPHumhtzXK
      3GoGfyCw1Vwd4ERPjM64j7V8BcuGU31xmsMearrJcHuYgx1hTNNmsC2E3y2TKm5PzvE6Hfz/
      7L1XjGRnmqb3nBNxwnsfkd5nVWYZlqEnu8lmz87OzqxGWgjYFaCFgL0RdLOCBtDFSsIC0pUu
      BGihgSBAbkeAMCNN7wy7p3uapmmrWL6ysrIyK72PDO+9OUYXkZXFrEg2yQxODyjWe1WZdc6f
      f5w4//m/873f975Xx/1YTBLZcgOTQccrUyGMkg6H2cBkxIVR0hF2WxgLOciWm8iqduwleizo
      YCripNRo0WyrjIccDAdsFGttXp4MYDLoaMkqr00Fu0OgWinLo4M7tHbmeXnkRa7de0C2ISCW
      D7A5rJj6pkjGdvn1+x8TdkmkCmW8viBzD+YZPzNDIX7A2OxZtlaX+H/TUV557SXSuSof/PJd
      Km2Rcb/AXqY3FYEvo17KM/HiT4iuzOHwhXH4wxSSUUCg3ayjl4yoioKqHArPPpNHbzdrWJwe
      RJ1Es1bGZHOS3HiE2eFBMpkZmHmJvcVblLNJhl94g+0Hn+OOjBwbI+KxcWslxrnhTigwFnZ2
      xGQlHSv7OURRIJGv0pIVzgx0h16apqLIbc68+g6xjSWGZ68SGZ9BFHW0m03kdhtNVZBbDSr5
      DCd1kJezcQKjM5RSUVRFQdTpSO8sY7Q6aVRLKK0mitymb/oy8bUHePsnaD7jLVCqNsgWn4ZE
      QyE3791e4dVzwwjAFwvbXD0zyEGmCBp47McL8XSiQFNWiOWreGwmUsU6Br1IS1Yp19ss7GQ5
      M+BGpxNoy+oxEeMnGPDZuLeZZqrPhQAYD4WPBToKby1ZxSiJ6HUiS/t5Qi4zO+nj0pwWo457
      W2nGQ05KtQImQ8c1R/8lTqHekslVmid7hI2fnWFkIEw+tkusUCN2EKOpCFyYHSeTKxBdfwxm
      Nw/n59AZLNgtEpKrjxfHHIieMWYnh3H4wgyG7JQrNSq1DHNza7jcHsLhEOPT57qo/NNCVZVD
      ZedD1WGdntD4DJVciomrb+MbnKCQ2Ofc23985G74ZQiCiCK3UeRW5+lfr1ItZMhGNygk99lf
      us3w+deITF4kunQH4QRFCQ0NSadDPCR4ZEVjeT+HzSQhCgI2s4FSrUXrKwroBARUWabdbKDT
      dZ5J0dWH6CSJ0Og059/6QyxON5sPblIvF4mtLx5TswYQRN3RTS4IApVckmatQnpnmfjaAxrV
      EtnoBvKhj5nB0p0+bT2jTdJRWdYdKT4b9HrasoJR0mM06LscbjStk8+XdOIRMXl3I81BtkrY
      Y2EoYGc3XcFhNrCZKGI8IQJQNA1JL6ITBTSg0mjzxXIcl9WI1ahnM1HEYtQfqU6fpJT9RIX7
      yS6/clAgXWpgM0lcX05gN0moauc50hUCqYqM3RvEbhRxegPUajUifREiIT+BYBBRsjAyNo1D
      32JmZppUoUY4HMZudzA4PE4pvkaxLeJ22An4vTjcXkxmL0MhM6pkpT8SRDTaCXpO99b+bAik
      00vEVueJTF6gWsxSyafJ7G/g7Rshe7BDJZsgMDLN3uJdJKMJT2QYRXkqQy7q9FRyCTRVxe4N
      IbebhCcuYHF4MJislDNxGpUCeoORWilL3/RldJLxWAhUqbc5P+JjL1XGbNCTyFeZ7veQrzRo
      yyqFarMjkTjkw+MwUag00RkNRyGQIAjI7RaJrRWGzl2lnEtRSB5QKxU6n29jiXazzuRLbxEc
      nsTq8mL3+I+FQAaLjfTeKiabE73BiMFkITByBrPDQ2TyBVyhQcx2NwJg8wTRG0y0Wq1jIdBI
      2MNQyIModG78aLrAa+eGWd5JUm+1mRz0c/vxLmGfA50osh0/HgJpgN0kYTcbOv5cFokhvx2P
      zchmooTRoCNTatCSVcbDDlLFBsXa8YrYUq3F7KCXZKF+JM0+M+ihUGuSKTUYCdqJ5Wo02jIR
      t5WNeBENjvMIGoyGHKzHirisBjw2Iz67iViuxsyAm3KjjU4UiLgt37806Eq8xP9xfaenMRqN
      NkoP/lyqqhKP9uasEgh5GRzuLQuUTBaQf0u/9NehXC4zf+9BT3OI9Pfj8/eYBeoRgiB0OW9+
      UzzPAj3HDxrfOx6gUqmx+Gi9pzH+qeUWs1L06w/8CjRUHf/5wSs9zWHMD0bliAAAIABJREFU
      o/Km73Rh4BPYEn+B2Mp8/YFfgZjopDj2o57mUCmX2drojZg0mU9fzgHg9bkYO1Qx+bb43i2A
      dlumUOjWtv828LHFpOn0i6im6qnXT1d78gR6pUHIdHp9UoCQto1BjX39gV8BkxDG7ji9OABA
      qVikUu6tLkrVdD3JXSqKgsVyOpvU5yHQc/yg0bUD7C7OoQZH2Hg4zzvvvPVM0q/Fxkac4X4P
      dx9t8MrV3mQ9vguMhFyMhF3MbyTJleuMRdwM+B3sJIu4bCY8NhP31+NMD/hoKwpz64lj56uq
      xnurZSSdwE8mOqXHH2+UqbRUXhm0cmuvRsCmwyKJRItt3GYdl4ddx8Zw2828eGaQ7XiOtf00
      fpeVC+MRkrkysqoxGHAxt3ZAoVLjH71yll98sfSdX4d6W+X9xTxem8QbEw4qTYVPVoroRIFX
      xuz8fD7Hf/JqgM1Ug+VEnT883y2SFXSZGfbb2UqWSJcaBF1mhvx2opkKTqsBl9VIPF/D5zAh
      APe3usOvmZEOaTW31pEpuTzVj8du4drCFq+fH6FSb7G2n+bFMwNsHmRZjx4fw2KUeHV2gFim
      zOPdNHazgRfP9B2el+X8WJCNgxxmo0TYa+P+6vFkhKZpJLaWyR7sMHrxVSwOF6mdNVK76wyd
      u8re0n2MZit90xdYvfVx9w5Qzib48Fc/xzcyzfvvf0Bud4FbS2v8+Z/9W379wfv8xZ//jFi6
      SKX63ZFZvSDotvL5wh4joc5N6bGZSBdqeOwmtuL5TrrMayfis3MCD0a+rhC067EbRSpNFUkn
      cDZo6vQGVGW8Fh35usoLfWaG3AZGvd2FW+P9Pj6Z28Dv7sT0w2EPt5Z26fM7CbptfDy3wYXx
      MOfHIjRa8negbt2NjVSdF0fsHRdJVcNm1DEVMtNSNEQBPNbOs87vkL5SGzvoNHN3I03I3SG4
      3NaOg0tTVlmOFshXm+QrzSOLJOmExpaDdBHToXKdKAgYJD2PtuNcPTPI5kGWlqxwcSLCh3fX
      CJxQHj/Z7+H6oz3sFgMCYDUbqDXaWE0GLk2Gj7iHC2NBVFU7UUyiWsgw9dLbpHbXAPANjGFx
      uqnms0hGE61GDUEUsTjdJ4VAAiajRKPRJJvL0q5XKFZqNAUbv//THzE2OknEayWXL3Sf+veA
      Zy07dTqRUq2JpNPRlhUqtRZ2i4HteB5ZUbGbn97ADw7q7BfaaNpxiW2LJGLQCZ0FYNWBpqFo
      kCi3iThOfm0SBI5IsqXtBBcn+rCZjazupXl5ZhCjpGc04mUk4iHs7b0v4gk0TeP6RolsRUbV
      tA5JfHg97KZOp5xRL6I7vEiO3ybL2PkQR1g9KHBvM81YyIFOFDDoOuPVWzL1lozxBCa32jhe
      2SYIHLaiaoiiwJfXzEkLUeO4B5nFKFGsNgCt4zm2csBI2E2p1uTRVorxPs+J1+TL2f3swTau
      QB96gwGz3YUgikhGc8c/7dmTXcE+fjz7OpsL95kYCLJ8UCQ03I9TGEcQbPQF9MTzDYYH+r76
      Qv4OcZAt8/rsIHPrcUJuK5lijZGwi/1UifMjQUxGPQ83k5wd9KFoGpV6Ew6rd1/oM6NqGr9Z
      q/DkuzwotpmP1dE0mPIbeXBQx2PRU2oonAmYOl/MM8zJ6l6KH10cY+MgQ8hjpyUrSHod91b2
      sRgljJKeTx9sUm20mBjwEUuXOD/QWwboCQRB4PVxBy1Z5b2lAgG7RKYi05JVHuxVsRhEovkW
      8WKL29udl9V4scVWpoH4zL0Ty1a5MuZnI17EazdhlET6PFZiuSpeu4n1eIGWrB75MldPMBm5
      emaQsNeB32XrVJvWW0wPBbj2cJvXzw1Trre4txLlnSuTrO2nu85f2cvw+rlB9lMl/C4ruXKd
      i+MhKvU2GwdZ3jg3xHY8j6TXcWkyzNxaHKvr+Iu80xdm/e6njF16nULygELqAFVRCI2eIbW3
      gcFkoZA8oJSJf/+IsJuPo/zJ//JhT2P8165f8maPWaCfrP1HPc3hDy5H+Bc/He9pjNDd/x5D
      9fRZoB01zH/b+s96msPB/j7ZzOlTsQAWm6unsDAc8XPx0plTnfs8C/QcP2h873iAUX2a/9Lx
      668/8LdgRxjkUXv21Odroo5/8vuXe5qDQa/nV2u9qcv9U6sPs+X0Y+haPuitsQ29ZMBoOr08
      I3SkeHoJQ3IZHavL26c693u3ALxihZ+Ylnsa49/Is9xWT28OpxdE/vmZ0zGPT7CTrLG8X/n6
      A38LWgErOsPpiSyx3vt7iKjTo5d6a2lsNmo9nV+rVkknT6dx+jwEeo4fNLoWwMHqIvu5r+8T
      zew9Znk3+7XH/V1jJdXg3aUixUPD6IexOr9YKrKXb/HReplfr5Qo1BV+uVzik83KiapqF0YD
      vDDWMc7WiwKXxoO8fWEQl83IS9NhJvvdmAx6Xp/pPzHvXCmVuPHhr4lud3y7GvUatz56n+3V
      ZfKZNLc/+ZBsMs7O2jJ3P/uIdqu7CXbAa+XyiOeYaNQLwx6MepERv43ZARc6UWCm38Ww/6Ra
      fpWf39zj1kons6JpGr+6EyWW7Txd76xmWNkvshEr8fObe+Qr3cK8XruRFycCuK2dJ7rPbuLF
      iQARt4WJsJOr4wFsJolzQx7ODXWnHwEujod4bXbgSKHv8mSYty4OYzLouTIZ5tJEGKOk40cX
      hhgJu7rOF0WB37s6idXUSdVJepG3L40zOxrC57LyD16aIuixc3Y4yE8uj5/YVDMUcPDmuQHM
      xk6AM9Xv4aeXhnHZjFyeCDEz5CPktvLGbH93CJRPRFGsEYLGBp9cu4fZFcBnqHOQLeKNTFKI
      rlJr1Jk+ewZZqPHuzz5BlAy8/NIL3Lm/hCCZCds0ii09L7/xOubvpu/lK7FbaPPOuI2H8Qav
      DVs5EzQhCrCdb6ETBfxmHaWGwtV+M7f3a13ShiZDp8lDVlVsZolKvc3cRpIrEyEcZiPbiSL9
      PjuSTqTZlk9siNlZfczlN95i8d4t+kfG2F1fZfbqy6wuPOBgZxOz1Yqo07G68IBg/yCCIAJP
      y5gFwGHW8zhaZNhvYzNZJuwyY5J02EwdP6xksU7EbcZq1FOodd+8q/tFLo17WdotoKoasqLS
      57VQqLQwGXQkC3UaLYWNeImw29xpR33mWvR5bdzfTHN2wE2+2iTo6qSJK402fV4rqWKd4YCd
      WkPu1P6bJb6cyNSJAga9jmi6RMhjI54t47AYKVQaHYY+4GQtmuXyZBhZVmmdUMptlPTkynWM
      Bj3VRouhkIfHO0nG+324bGY+uLPGa+eGEQR4uBFnLOJlO3m8FingtnJ7JcbUgJeFrRSr0RwO
      qxGbyYDXaWY7XiDis6FqvyUEij6+y26+TavRYG5lh6szA0RXFsmobuxCg0IhT7ZYodrWYTfI
      3P7sc8ZffINSOoEk6SmXil1+XN8lMlWZG7vVjr7jlx7LLVml3FIx6Dqky0K8AQLkagqaBs90
      ASJwSJyoT4ksp9VIqdYEoVMqoWkalUbrqPnkWXQaMp6SN2hax4P3kDM49+KrrMzPYXM4iQyN
      sLux2j2G1pFbefJJJkIO7GaJiNtModai3GgTcVvYzVTw201fOk/j2mKSdLGBThSOroVB0mG3
      dBjZTx4mKFXbPNrJY5R0vHkuyPWl7rffDoH09Oel/TwPtjKc6XejAWaj7tDfWDs216fXsiOH
      qGqHDK1wqOKhFzEbJbYTBYwGPW67mQcbCcYi3btIvdmm2X7KL4hCR65Se0LyHZJcT67XSVty
      h9h8+kEEIFuqoxMFtuIF3HYTj7bT3Fo+6F4ANo+LzYV74BnDZ1Rwe9xMDwW5/WAJnbsPayvF
      ViyL2e7C47ARDgfw+ILMXrnM6p1rFBttJKMJUWvRlv/uKAafVc+rQ1YCNj3vrZaZ9BvZy7dY
      SjbJVhUcJh2yCn1OCaNOYDPXQtIJ6J65Xo2WjM1swG030ZYVnIfmeluJIolchal+D21FJeS2
      EfJYGY+4uq75wOg4dz/9DW6fn3QiRmR4lIe3rmNzOBk5c5Z7n39M/8gYTo+XjcUFQv3HX6A7
      ZnsK5wfd7OequK0GPl9JsrCXZyNZRlE1gk4zi/sF+jwWml9qXRQEgTdmg7x8xs/N5TQGSSRT
      apDM17m9kubhdp4/eqmfP351kDfPBZnqc/DevRhnB7vDj3SxwdVxP8lCHa/dRMRj4dKoj1Sx
      TrOtYDdJJPI13DYjHpuRUv14W6asquhEgdGwm1ypjtdhoSWr2MxGtmJ5XDYTZoOem0tRXp0d
      IF/uNgjxOCxMDviZHQkR9jqIpgu8MNEpIdmJ5/gHL02znypQbbS4MtXPbqL75bdYbfDqTD87
      iQIBlwWXzUQ8W+EgWyHssYEGEa+dV872fTMibHP5Idv7Sc5deZGd5UXKLYG3fvzasZupnEvw
      YGEZi7efK+cmvm7IU0PeuEb9L3ojb/6N/B9yW+shC6QT+ed/dL6nOXwXWaD/KvCXDBhO/x62
      Xffw3+z8o57mkE5nKRV7K4eulk9vVgJgMplxuU+n8/SN0qBjZy4wdki0Bb9C5tDuCfHmj3vT
      unyO5/hd43vHA+zJHv6y0JvW6I41hGQ4vZyfKMD1ud4kBfPlFqlCbx5hf1Hpx67zff2BX4Eq
      1p5EaQFCYT+Rvt56gtdXNtF6sGrSNI1S6XTFmd+7BZCQ7fys0lsfQsDiwyZJX3/gV0BTNeZX
      El9/4G9Buy3Tare//sDfgvfKwSNDjNNAL+nxB3tbAD6fE6erN0ItHk19ZYLhm6Ber1EpPCfC
      nuM5vjW6doDk9mPmNuIEQgMY1BpnL1zk7ziV3xOCbitTAz7ur8WoNtqEvTYm+70s72bwuyy4
      7Wbm1uO8MB6i2Va4v9ZdPTnV16lGXIl2Xsb6vTb8ThOPdrLMDHnJV5pomkbAaabWlHm8d/xp
      YzboeWE8yGa8QDJfJeCyMBZxo2mQK9fxOszkyw0Mkg6LUc/cRpJ2+3gp8XDIRb/fzs2lKIqq
      MRp20+ezM7+Z4OyQH1EQ2I7nGe/3oBNFPnt4PAQTBLg0HqJUa7J+kMds1HNhNIBR0nNnNcbM
      kI90sY7FqMdlM5Ep1thOHX95dZglxsMO1mMlyo02bquBsZCDg1wNk6TDZTWwHi/ishqRFZXE
      CSHcwdoCzVqFkfMvgyAQ31iknE0xfP4ldhfvYbRY6Z+6yOaD64xffrNLzkSvE7k6GWI/Uyaa
      LuO2mZga8CDpRO6tJTg/GmAnWcRjN+G0Gnm0nab+zDScNhOTA37uLu8f3iM2Rvu83Hm8x8sz
      Q2SLNQ4yRa6eGejeAdJ7e0SmL7I8f4dH92/y+UfvsX6Q5YtPPuCjz26wv3yfj67d5LNb86wv
      zfGbDz/kIB7lg/c/ZGX7dG7dvWCi38u91RjTg504dLzPy8PNJJMDXkIeO5liDZ/Twr3VGHaL
      EUl//IIbJR36QxUxq1GPXicy1eei2VYJuCwkCzW8dhPRTIWtZIl6q7sGfqLfw8OtFCOhjjFg
      qlDj7mqctqKwFs0RTZcp11uMhl0UKs0uAkigk5Zb2k4zPdiJ6YdCHdJoos/LSNhNplgjka9y
      cylK44Q5hD02UoUabpsJURCoN2VuLceoNduMhTtMdqMls7yXJZGrUDxBV304YGdxL89woMM0
      93ttaBrkK00G/TbqLZlaS6GtqPjs3U3oqiJTK+WxOr0U051WRW/fCM5AH8mdNfQGI/VykVq5
      gNxqoqrdRNhkn4el3Sx9h01D+UqDu6tx6i2FC2MBBKGTuh4Lu6nUW9Sa3WGkQa/DaX1qZDg5
      GKBQaXB5eoBYpoTPZeWFyT6uL2x/VQik8vobbyKZHZwbD7K0cJtY1YaunGBtcw3PyBlimxvc
      e7jM669epd1sM9AfZn//9FIjp8WTtrgnEnmNZpvJfi/1poymaXjsZiSdyES/l1qjhXRCzPwk
      EazRuRlbskq10T5qDdQOia1Bv529dHfq8gkp9OUw9vyIn8XtNDpRIOSxEsuWee/uFnqdSMTb
      Xcrw5G88iYVbbYXhkItmW+bda8v4nBbcNhPnR4MsbqdO/AzP9uqMhV3sJIoYJB2bsTyT/R70
      OhGvw0yq0F2AdiQYfDjIWrzAo70cF4Y93F5Lka+2GAvayZWbX1m92WG5O8QgQHJnDclkxu4J
      ILc6O6nRbMXwFVIoT0i0L0senhn0sbKfwSjpebybYXbYz0fzO1QbbcYj3b3N6UIVWXm6uJ58
      rifXVtM6/xYFoXsBBIbGCTptDA8Pcnb2HBZniLMzl5kIaBhD48zOXCRkNzF77iyvXj7H7ftL
      GIwGctkckcjvPg26fpDl0kSY1b0MIY+NWLaMUdJxkCmRKlQRhA4L6LKakBWN+jNdTM22csRY
      y4qK2ahnL13GbTOysJMh4DSTLTfQ6wSimcqJWpQbBzlmRwLsJAr4XRZ0okAyX6XZVrCYJNai
      OdBgvM+NxagnmT9ea6UBB5ky04M+1g9yBFxWErkKep1IPFdhZiSArKgUq00yxRrVRvdTL5Gv
      4HWYyZXr2MwSJoOepqyQLtZY2EoxEHCwlypiM0us7J3MHeykK8wMuNlJl/HajdhMEjMDbjYT
      JcJuC2GXmViuxtl+Fw6zhOkZTX5Rp8ficB/tAuVciloxS2Z/E8loRBAELA4XtVKeWinHwepC
      V23WRizH9ICXWKaM32lBFAXylQaVepu7q3HODvnYiOUYCjoJuKzspbolcmZGgtgsRoZCbsJe
      B6t7KRwWIw/WooQ8dlKFMvPrB7wyO/z96wi7sbjHv/zT93oaIxDwYbOdvoZdUzWy2d7Im+8i
      C2Q2mb6DLFBvKczvIgt04/O5nrNAxedZoOd4jm+P7x0PAB058l4wPhpgsD9w6vNVTWNjp7dS
      cKtVwnXCi+S3QbZQR/4KyfVvBEFAFHu7BWRZIZPuTanvv3jHg044/Xe6krDyN4/MX3/gCfje
      LYDvIl6zWoy4eti2FVXFauuNxXU5TAR61AZtqyKt9ukXgKZpKM+Wx35LNJst2j0oVAOM+iWk
      HmKRYhNMp5SZfB4CPccPGl07wPbDm8xFi1jNDn7/7VcBuHbtGm+88cbRMTvrKwRHp//Om12+
      CSb6vQwFnTzcTJIuVJka8NHns7OXKhJ0W7EYDdxejiLpRa5O9fHe3eNKxqqqsnD9N2iaxoXX
      30EQRRZvfkqjVmHq0iuszd3C4nDi8PhI7G7hiwwwMHW8ob5ayBBdvo8rNEhw5Ay1Ypb4+iN0
      kgGT1UEpm8DbN4rcatColhg69/Kx8zVNY/PhXfKpOOdefweTxUo6usPe6iIv/PgfsnznGvVK
      iclLr7A+fxuHx8/ECy8dG0NuN9m89zkGs5XhC6+gKjLbD75AkduMX/0xqZ0V5FYLUdRRK+UI
      jc9icx9/Ac7FtknvrhMYmcYdGqSQ3Cezt4HZ4UZV2lTyaTzhYarFLO1GnbHLP+JZeauZficG
      vY6FvTyKqqEXBV6Z9HNjLc3ZPidNWWEvU+PKqJcba6muBqVcvsgXt+4zOBDhwuw0hUKJ67fu
      0xcJEgr4uX1vnj/+w59y7cZdKtU6b795/FoCjEfchNxWFrZTlGotgm4rQwEHy3tZLowGaLRk
      UsUaYbe1eweoFoqMn79Ccn+DX/3VX/CL9z4gWyjy6MYHvP/Jp/z8vc/56G9+xq35FW58+gF/
      +zc/Z37+Nn/2Z3/OJ795n7/65QfsJnrLkHwb+BxmPp3fYSjYIaHsFgPlWhOHxYjJINGWFcxG
      iTODfuqt7qxLs17F5vTg9oeolYs06zVMFiv942dYvX+TsfOXqRTyVIp5rA4n9XJ3vJs72Gbs
      ylvUS51MhNnhxuL0oKlKx3fM6qBRLeIKDaAq3Vu1pqm0mg3Ov/EO0bWObqjDG0AyGBF1OoKD
      oyAIJPe2mHzhZVqN7vCrmDogNDaDoBNRFQWdXsIdGQQ0GpUizVqF9uEC1DQNnb67FqqUiTPx
      4k8opjqEpsMXxmCxoqkK/WeuYHP5cUeGGb7wKjpJ6iKydKKArGoc5Gq4rZ1iw5GAjVpTxnPo
      1CIKnaaZfLV5ohbQ8tomv//OmxSLZTRNY2N7l7feeIlSuYLTacdmsx6amwjMnBnnIN7d2GM3
      S9xejTHo7wgGzAx6EQCzUY+iqhglHfupEnvp0kkhkMz8vTu8+c4/pFxp8NOfvkO1UqLeqDN6
      5jyVfIq+wTHOzY5z/94DLDYHQruKf+Q8L14+j0Gpksr+7mQTRVE41kdrMujZTRaxmCTQNA6y
      Jc4M+nBYjZwZ9GM1Hf/iBUFAVWQURUYQRARBQFFk5HaLoTPniW9vUC3madZqBAfHaDVPiP0F
      0FQFTX0aj7tCAzTrVeR2E3d4iFa9hmT8qhc1AU1VUNryUXWm0Wzp/F7TsLu9WO1OapUSiiKf
      yKAKgoiqyGiK0iHENA2bO4Col4iuPKBRKZHeWWXo/MuMXXqDg9X5rjE0VUPT1KdMmCDgCQ9T
      LxcOfdTaSAYTW3Of0zf1AoZn5FA0TUMndL4PTessiKDTTMhlxmMzcpCrISudXeHZ5LssK1y/
      eZ9ms4WsyCiH11IQRGS5Y3JoNhmfTAtFVZFlBfGEatYn98STP9FoyWwni5wZ8JIq1FDUjkxj
      xGvr9giT2zIjZy8wFHDRarXo6++n2WgQ8HuxewLoNI3JsQgbezkmhwPUFR2hUACH049JaJIv
      VfEEwvjd353+5Zexnyry3p2nYYyqarwwEebRVgq33dyhyfs87CUL6HRipwxiLcbSTppCpUEy
      X2VsJIzncH46vUT6YA+51cIXGaBZr1ErFynns0RGJkjubTE4NYvd7SW6/hh//xA2t5dM/ulC
      MFkd7D66iadvlHaz0bFo3VzC4vRgdXrJHmzhiQyT2V+nkktidflwOB1YLZ2npCAINOs19lcf
      MXHpZYqZFKm9LTKxPXSSRHRjmXarxdSll9l6dB9XIIzTF6BcaaIcxhBGq534+iOMVjsGk4VW
      vUZ05QGiqGP00pv4+scw212Us0nim4v0TV1AMlmO3Yh6ycj+0h2Co2dpVEpUCxky++s4fWEU
      WcbTN4KqyGT2N2iUC9i9ITSestca4LAYsJslYvkaVqOe9USZcqPNfrZG0GVCEKApq/R7rRj0
      IrlKi1f7ZCSdyOBAhKDfy6fX7jA63E+j2aS/L8SN23MMDkTIZHNs7x5gkPSIokAyleHc2SmS
      FY2HB093d1EUmO738ngvi9tmJFtqMBZ2s7CdZjjopNZskys3UFT1+0eEfbG4x7/8096EsX7v
      7UuMjUZOfb6iqqxs9pYG/S6yQAeJ0v8vskB/crXeUxbo/n6L/+vO6Rzvn2eBnuMHje8dD+Bw
      2Lhw8XRCqE8gGkxkeujGUjWNWq27mvLbwGjU0ejxyWm1GjH3sIHXa03W1/Z7msOzCgynwf3a
      UE8lHXGxgTdwOjLue7cADAaJQOB0DdBPIOhE6q3T33yqqiHLvd28sqzSq2qMZNB/pdnFN0Gr
      2aJSPl3o8ASCIJz4IvptkJSt6LTTj1FBh8XynAh7juf41ujKAqX2Vvni7gI1WSDo7daO+ftG
      ttJifr949HMmusXu4h0sDjcGk4VMdJPo8gNUVSEb3SK+sYTZ7mJ34Ra52A7u0CA6vQ7xMHWq
      aRqbc9fJxnbwhAZB09h+eIvY2iJWp4eNe59TzqZwhfrZWbiDqiqYbU7KX9K0sRr1XBjq1KWX
      G50nUchlJuzqKLlNhOyomsaw38Z4yE653kbQ67DZTEdz2F9ZYPvRPbyRQXR6PflkjM35W/j6
      hli5/Smp3Q08oQFW7nxGvVzE6e+Unj/ZARS5zdIXH1HOp3EHO+Yl63M3kNst5HaTtXvXkeU2
      mqqydvcaweEJms02sYOn2v5Bl4WLYx2iqNaUGfDbOTPgJey1YTHqmR7wUq63mB32c3bQSyxX
      RVG1Y/n8c8M+hgIOErkqGjASdDLR56ZQaXB1KozfaSGRqzIeceG0GilUmoyMhI++j2a9xsLn
      79NuNXF4A6iKwsNPf43d7SOfirHx4DaiTk9sc4X9lUfYvX409JQrzaNrmY1uEFt9gNXlR2/o
      2Dyt33ofuy/M3qOblNIxJIOJ3YUb3TvA9toKZk8f02ODrCzc491/9y77m4/4v/+fv+L2vfu8
      98GHfH7rAXM3P+Nv/+YXpCu9WX32imLqgImrb5He66RG3aFBHP4wjUqRwPA0BrOVdrPB6KU3
      4DDn/2W06lUMJgtmu5t6pQSCwPC5FzE7XBTTcYxWO41qmWohQ62Up1XvDhn6vRYe7ubw2Dp5
      akkn4rEasBj1OC0GksUGLouBpWiBUq1NuX58DpqmUS8XmX7px0TXFgEwWawIgkilkMPq8mC2
      O1m/f51GpXSiK3o2tkdkbBpVllEVBTQNb3iAerlIcmeD6Zd+THpvC4PJfCIJBtDns3NrOUa/
      r0Mg7afLbCWKpIs1nFYTC1spgi4r99YSFKvNrs60J8p0sWwFv9OMIMD0gAdF1TAZ9MiygkGv
      w2Y24LGbsBq75xFdW2TmlbeoFrKHKnAqTl+QdqtBPhFDFEVMFhvVYh6by3NiM3w1n2bowutk
      9jseYaV0FE3TkIxmvIMTyK0Gmb01xq/+pHsBXP3xHxAxN/jZu79idy9KNXPAQTKDwT+OobBH
      pq4gaHVu3JrDZDLQaHbrVP59QxB1yK0maBo6SaLdrLE1d53w2Cx6w8lS3l+OpXcX7+L0hzGY
      LEfS37uL92jWKiS3VzmpJO/LvxkJ2LAa9Qx4rUcknSAIWI16Gm3lxKaaZ2G2d5htm9tHu9kk
      sb2KpmkMTF+gkI5/7YunIIqYrB2uY2DqHBsPbtKoVTDbHDxbvvBVnwNgMOBgP1XmyzW4IbeV
      RP7kdwftmTHK9RbbiSLT/Z7Dz65yfsSPSdIzHHR0Kxsendz5D71kwGDqEIhTV15j5tW32Vq4
      C3Q4HPkEoeEnkoxw6Bq5/ohCYpdKPgUaaKraIfw4IQTaW3/MbjyWm3Q+AAAgAElEQVSDPzSI
      1ixjNNuIDPRjc/qZHu/jYC9GIDJExGOiKZoZ6OvHYvzdvUs/GwKpssz+8hyR8RnqpQLFdJxS
      OobN7ScX26VZK2N1ecnHd2m3Gjh8EfTS0xBIp5dI723QbtbxRAapFrIkt1dpNWo4vEFysV0k
      k5mpl3+CK9CHze3HZHUcC4GaLYXZATfpUhO9TiCWq3GQ78gJNmUVr91IttzEZNARz9dRNQ2z
      2XAUAgHUSgX2VxcYvfAilXya9P42qb0NjBYbtXIRi8PF+Asvs/3oPiabHW+kI6/45P4xWe1s
      LdzDYDJhtjlotxpszt+mlE1hc3spZVMMTp+nkIqR2FnDYLIgme3HQiBVgwujfrYTRawmibai
      oBMFCtUmVpOBsbCL1WgOn8PCTrLzHRxpoNLJCAXdVjx2E7upEnazAUEQGPDbWY3miHhtKKrG
      ndUEsVyFSqNNsdo6FgJZnS6Wbn6Myx9C01RURWbz4R0qhSyqorC9OEdwaBy53aJaKhAaGgOd
      8SgEApCbDRIbjwiNn6dRyhOZvoTBbMVsd5HaeoxOkvANTrL36Nb3jwhbTZT5tzf2ehpDL4k9
      pd1UVSN2cLoOpCdwu62EDpvoe0EvWaBSqcq9O72ZjXwXWaC33n6hp++jVGoQSxS//sAT8DwL
      9Bw/aHzveICgluQfyz/raYxfREdYqp4+w6Vp0Gr2xgMY9AEMfb1l2S6m38Umn34nSjStPLb1
      JvL7im2DM+bTO1UCRKqbPblEPszauLlzug6/790CcFDgqnanpzH+Oq2ylz59LRCA8Stepr8p
      gn47+h62fYDx6j28zdOHg1YljNH0Yk9zmHHmecex1dMYtDa+/pjfglglRCZ9ulv5eQj0HD9o
      dC2AfGKXjz7+hKWNHe7fmwNAkYvcur10eIRGPB7/Xc7xt2ItXuHdOwlKh7n1x9Ey795JsJ+t
      8+lSll/cS1JvKbw/nyZdOrl+5/JkmKtTT3eEq1MRfnRhCKtJ4kcXhjgz6MdlM/GTSyP4T+gl
      tpokfnR+kH5fJ+1oNxt489wg04NeBvwO3jg3SMRr4+JYkDfODSDpu5870fVl5j/9NYrcKest
      ZdM8vv0ZqqLw+PbnPPz8A2rlInMf/4rtxbmu89uKyq8eZrl/6AbfaHd+/vhxnscHVX45n+U3
      S3nubpV4936GTLm7OchlNXBlzIfzsEzbYzNyZcxH+FAg7NKIF0kv8sKIl3ODbsQTopbPF1N8
      OJ9APXRyWdgpML+VR9M0PniQ4NZqlq1Ehb++GeUg2y3OVW3I/LsbUVajndqetqzy89sH1Joy
      d9dy/PzWAbdXs8iKyl/diB6Vg38ZgwEnP74whNnQ2RWGQy5+dGEIk0HP2y8Mc2EsiNmo541z
      g90L4PGDu7j7p5gaifDw7m1+87e/4CDXpiXXufbJ+/ztB+/xf/7v/xtL6zvdn/7vARvxGm/P
      enm407lgowELr0y62U7WeHnChdcmkSw0cVj0FKrdpJ3ZqEfToNFWcFiMSHoRi0mi2Va4OB5m
      YStJ2GtjZtjPp/M7TPR12/pM9nu5vRJjINDJ6kR8dvbSRUJuG4l8hQcbCQYDTpxWI+VaC5ft
      uBqEqqoU0wkmLr3C7vJC55eCgNxsIogiY+evIIgi6egutVIRh7dby2c1Xme2z0q63EbVNPQi
      /HTGTbWpMhEyc3XEjtui5/yAjWG/if1co2uMQZ+N+e0sg4dl2hF3p1+gVGvR57FgNUmYJR0B
      p5lSvd3Vzlhrysiqhs9hJJ7rpIltJj3Zcovl/RLpYgOrUcfj/RJ/cCXM3fXu95c7azl+/1KI
      zUQVTdNotlUMepFmW+XqpIexsI2g28TttRzVpnIiH9Lvt3NnJcbUocxkv99BsyUT8dnxOixk
      S3UuT4Q7jTHPnvzyO3+EkN/k3fc+xezwMBG2sBvPEYsn2dzc4cdv/R5DY2PMTAx3/eHfJdKl
      JtdXcohiR1D1yWU4yDV4tFfitWkP97eK2M16hvxm3NaT2U9REGgrne4iQej8rBPFw7a5IudG
      ggTdtiM5vZNILEEARVGPGkNkRSXgtKKoKh67mdlhP3Pr8Q4ZZpLQncD+iDodesnQYXEBh8d3
      1KFWyqZR5TbuYJjX/r1/xtbC/adnahrX14qkyi0MegG9TjiUSRT4YDHP5WEbkk5kbrfMxSEb
      5YZCptw+0ezvib/Xk4+4uJ9nfifL7KCbmQE3TosBn8PE+/NR7GYJu/npNV3cLbISLWPQixj0
      IqramUPQ1VnslYbM5TEP+5kawwEL788lqDaePpBkReU380mqTRlJLx4RiDaz/ujvqKrGXrpG
      wGk82kn20t27iHJoEvjkMrdlBUmvo1xr8pefPWZqwIvFJDG3Fut+Cd7fWqNYa+Pz+pANeow2
      Jw7BTMvnQXAZMEoiExEfC2u7nJ8c6vrjvyv4HUb8DiN3Nwv88n6SN8962U3XmNsuYZJEtlM1
      FvbKDHhNeGwSdzYKmCSRYf/xtsRas43bZkIQBHaSBZxWExodt8JGS0YQYHEnRa5U450rY6xH
      uxthdpNF3jw/SDRTJuCy0mzJmE0SzZbM1IAXVdUIezv1QEaDnnpL5ssMgCCISEYjC9c+ZPbV
      t8gnY5RyadIHOxxsrpCLR5FlmVq5xNaj+1gczi+dK/D6pJNqU+G9hRxuq55spU2uIpOrtFmJ
      13CY9QSdBkQBlg6qVBoKg97ul/hsucmVMT+7mQpeuxGjXkfEYyFdanB7Pc2A10qh2uKFES+S
      TqTWlOGwK3J2yImmafzybox0sclPLgRJ5Ovc38izk6zyH7zaz6ePUrisEga9DllRef3s051M
      rxN552KQdLHJX92IMhqysp+pI+kEFneLlGptrky4GQ936pL+5I+nuL2WZdBvZfMZqdRyrcmb
      F4a4vxoj5LF1/M0sRgz6jj1rsyWzfpDjtXOD3z8iTI3fQ/38X/c0xr9avMLHf89ZoKnJfq5e
      meppjD/e/Fc9ZYF2lDD/Xf0/7WkO/7H3Gu84lr7+wN8Grbe68A/jIf71woVTnfs8C/QcP2h8
      73gATbLSck/2NMbbk3rG+07vbKggclftbQ5ngjrO6Hor6XhkfhVVd/HU52dbZtrF3jrbrsU9
      bCbGehrDH/CeZPf7jbEpW3A6T5Zb/zp87xaAqrfQdvVmw/ojWxGddnqL0pamp9AY/PoDfwsm
      jEmmdb35Kfy5+SWy+tNpYgI0hCZKu7c53Mi7qVR6CwfPmCZ7qidqK22cztO1uD4PgZ7jB42u
      cuhyLsGtO/dpCxLx/X0CwQDl1A57eRWvw4ymaRQKBczm0z95eoHaKNLOrh/9vJ/IcevhJpGA
      C0mv4yCV58bcBuGAi9sLW6xux/G6bHx2d5VCqUrY70KvNRHppBs1TePmo30S2TKRQyLr9lKU
      aKqEqmpcm99l6yCPqsGNhX3MRgmbzcId+dzRHFqNGuv3rqE3mjBZ7TTrVbbmb9Ks12jWKuwu
      zWG0WEntbZLcXsUV7CNgqNNveNrIvbYVZWFlm6G+AIIgsLFzwMPHW4T8bm7ce8xBPI3VYuL6
      3UXabRmfx8li1UNd7aQINVVl99FtmrUKNrcPVZHZeniDciaB1elh68ENdJJErZRnf/kBDl8I
      TRMo5p/OwW6WODfso1xr0ZJVJJ3I+REfqgZ+h5mxsJNitclIyIHX0TEOqTeatL6kuDc50JGq
      TOQ6O+z0oI+JPg/JfIXpAR9hr51sqc7V6Qg6UaRYbR6GQIfl6aLA7EDHX63WlNHrBC4MebAZ
      9TRklZl+F5Vmm4jbwqDfSqHWotVWUOSnKVWfw8RUv5tsuYGqdqyvzg56yJTqjIddtNoKZoOe
      2SFv9w7w4MZn+EbPMRB082hhkeWH96lUq+RyWa598hEff/oZf/qn/zM78d50cb4rLK4fcGVm
      mIer+2iaxqO1KK9cHOP+0g6L6wf0Bd3YLEbevDLJXiLXxRwWKw0UVaNSb1Ott8mXG8iKSqXW
      wuey8pOroxgkHQ/X49itBoLebib4YG2RwZlLxDc6pcWCIDJy4WWysV2cgQj9U+eJbTzudJhZ
      7JRz6WPny4rCXizF6ECI1a1O99LWXoLJ0X7Wtg546YVpsoUyRoPEa1dmWDvBi62QjGJ1eSll
      k6iKgiCIDM5coVEpsff4Hn1TF0jtrJHZ32Jo9iq7i3e7xhgPu1jczTIW7hTpnR30IADNlsxB
      rkKyUGMs7EIndvL0z6rsiaKAz2GhXG8RcFsRBOjz2ilUGkz0eZns91BrtrkwFkSvE6mf4O81
      5Lexm64QcXcesA6zhMNiIF1uMBqw8/igwEjAzkGuRqHaOtGrbNDvYCNWYPSw3Hx2yEuzrSAK
      AhajHqtJYizsZGE7070AXv3pH5Jfu8sH1+5SSm7yYDuPWa2SSGV5vJPmzTfeYGxsjOFwb8oM
      vSKTL3NzfgNJr8NqNqIeSiwY9HpsFhOqqvEv/skb5ApV4pkic4930YviU9k/YG41xkY0h91i
      wGqSkBWVttzJGdstRtqywoPVOBcnw/z7Pz7LzEiA39zpLvxSVQWj2Yru0HtY1OlYu/MZI+eu
      orRb7C/PY7LaURWFYjp+zJx6L5Zi4fEWJqMBl9NGvXHoo2WQsFnNyIrC6uY+sqIgCAJ35lew
      mLtjbkVuYzDbkAwmNE1FEEUyexsochtN1Y5aIa0uD7uLd2ifoC+qqBot+WnHmtUksXZQYKrf
      g9Uo0ee1oaoatWabWrPd5bcmCkKnn7jRRnrStil0mHGTQU80U8brMBPx2lncTjEz0l3BqRcF
      ai2ZttLxXctVWnyxmuRMnwsNjZasomoaNpOegMNM+wR/BFlRqbfkI8LRIOmot2SCbguZUudz
      Jws1Loz4uhdAdGcLWZQwShL9ExcZsDTINETsVjODg4PodSI2g8ZuoreGkF7hc9t55eI4NrOR
      X372kOE+H/uJHDarib/+zX2G+3x8dGuZeKZAW1bIl2vIinqsXe/SVISLk2HW9rIcHJo8CMBG
      NMdesoDFJKGoKm67ifm1ONfmd+kPOLrm4o0Msfj5exjNVgqpGPGNx7QaNTIHO2Si2wBHDG/H
      DO/pZR+MBHhhdpxWW+bDz+8zPhQhke7Uznz8xQNCfjfxVA5V1YjG0zRb7RMlWZz+CNHlOVqN
      Ks1ahUohQymTRNNU3KEBVm99hGQ0oZdMyK0mA2cvd41RrDV5eSpModLA5zCzGS9yYdRPud6i
      79DYr9JoEfHYiHhsFJ/RRpIVFbvFwJkhP/lKHZ+jw5IJgkA8W8bntGAxSsytx3npTB+Venc7
      bSxf48qoD1XVcFkNOC0S5wc9tGSVfKXJi+M+itXWUX3SSWXULVnhpckQ8XwVn8NMNFNhwGen
      2VKY6nMzGXGhqBo6Ufz+EWHtwi61tV/1NIZBLqLTTp/+a2l6/qfGP+tpDmeMSV629pgFSo6T
      bfeQBao32d3qbQ65fIlKpbsc4dvgzEyPWaB2m+azZsHfEM+zQM/xg8b3jgfINSVuxHrrpTWJ
      VnRCD6Kygg6Pq0dRWdHCcvP0PmUAlaZAswenyVar3eVY/21hsZgxW3rLCF6JgE48/feRb+jZ
      LpxOjfx7twDiNQN/udXbjWO2mJGkk6tDvwl0Ivxef09TIN+0c6/e20IuNIq0e1gAjUb7WArz
      NHB73dgdvUnh/3Ss0ZM69GbZQMXY/W72TfA8BHqOHzS6FkCjnOfG9evsxDLUa/VjWROlXmRr
      P/XsKX+vsJkkzg15jlJybpuRy2N+/E4zEY+VmQEPOlFgIuxkLHTyU6LfY2HAe9ztZCxoOyRl
      XIwFbTjMErMDLpzm7p2j3Woxf+s6xVyHG1FkmYXbN8imkjTqdR7cuEYxl2Vj6REPb3+BLHeH
      HflkjI25G6iHzijFdJyVW5/QqFUoZVPk4h2eI765fKJFkqZpxNcfko/vHv1OkdskNh6hqSrJ
      7ceoqkK1kGFn/jrNanctlNmg5/JEENNhJ9WA38FL02Gm+j34nRYuT4QwSjoEAc4OnpwGDzlN
      jPiP1+WMBmyIQsc/bDJsx6gXOdvnxGvrTue2ZZnrN++RzuSOfr5x6z7JVIZCscTnX9yh0Wiy
      srbJ3Pzi0fX6Mir5DNsPbx511xWSUXYWbiG3W+wt3SOx9ZhqIcPGvc+6F8Cdzz7AMzKD2yry
      v/6P/wN3lzfZeDzPZ9dvUcknmVveYX1xjms379LuVd74O8BkxMVOqsxYuBNODPnt5MoNcuUG
      gz4b1WabsNtCsljHbjZgeKYdUdKJOMwSFoMek9TJXQ/5rPS5LViNnd/FCx2Rq81EmWF/d9HV
      +tICQ+NTrC50bIe215YJDw6zvrjAwp0bWGx29JKByNAwksFINpk4dr6mqcQ2lvCEB4hvPO78
      UhDpnzpHdPURpUyS9P4WrUad+NYqzRPkGcuZOHrJSD6+c2ShFFubp5CK0qxVyOyuHaZiNcKT
      F4lvLHSNMTPsY3U/d3Rz76dLPN7NIooCqqqymywyEnIyM+Qj7Om+DoIAAacJVdNwWToPirDL
      zIDXilHS4bIYiOfr6HUiG8ly10MH4OHCMpPjIzx8tIymaSyvbDA02M/C4gr3Hywye3aS2/ce
      Ek+kEQSB2DMeYZ0HwQK+gTHiGx2ZSbPddXiNEvgGximmYuj0BgbOXjpBGvFH73Dw6Aa3F7YY
      HBpj9kyYO/PbjLsVbi/tg9bib9/7iNTOFulKb5WE3wXaikq10T4iPVaieWotmQvDnS8x4rFS
      a8qE3RbylSatZ4iTJ8RLrdWh3U2SjumIA4dZQicKbCbLzPa7ULX/r70zeY7jTNP7L/fMytoL
      VajCThAEQVKkKFF7t7pjesYR4/HF4ZP/AB988MV3H8YOX+yI8UzYvvhiR0yMHdG2I3o63D3q
      bqlbVGuhFkriDhJcQOxAAah9yT19SKAAsEAtQG+K1nMgkVmZX335Vb6Z3/c+7/u8MDOcpOP0
      P7091yWRzqBoUS6t67jEUyk0XafdaJDKZpm9dpV6tcL68iKafpC9jIiqGMlcAbuzd3Mvzl5j
      4tzzFE9MIwgimhFjYGTiUDEs17EwkhlUwyQMAhpba2wt3KO+sYQgCiRyO2K6osTy7FVGzrzQ
      14bvh7Rt90DW22QpzcPVGqIocqKYYrthMT2SZTBjktjJHd6FKAh0HZ+WtZfV9ex4BkOVSBoK
      t5frTJeS+EHI2eEUj8p7AYlRjbCr1BsNcrkM+s5Y2rZNLptG1zVURSadSiKKAq7r8uDRAp1u
      f2qnrOrEkhl8N+IZwjCkub2BZibYmJ8lN3wCRdOZv/5hfyzQyuOHNLoOra5HznDZdgyCxgrL
      my1OTY1R7YjEgjqF0SnGJ0bQ5N9trdT1Wof37+49QbNxjalSmrVqG12RyMZ1hnImLcslYai9
      NL/Tw2ks12e7aSHJMtIOU+mHIdPFJAldYa1moUgCd1ebKLJItWVzohBHEKJidYYa1abaalqc
      LO09vYIg4NqV9zATSURJJBZPcO3Ke6iaTq5QZGX+Icl0lur2Jr7rksrmkM00HW/nVhYEyosP
      Wb57g7GzF+k268xe+RWaYaJoOkt3b7D28A6JbIEHn12h26xTGD9Ju+300jBlRWXhZvTaN9N5
      VD1G6dRFfNdGN1Ms3PyAMPDZeHQHRdWRNR1ZM2nU96ZCiZjKufE8W/XoKe35PrmEwVqlxQ8u
      jtF1PLabFtcfltEUifn1OkbMQNOiqUwYwol8nFwiKohnKBKzKw0kUaDSspksROmZqZgSpbGG
      UO+4vLqvRpiqqlz+9YeYZgxZlkgmErzz/kfEDAPDMPj02i0mJ8bwPA/X9Xju2XM0A43H7b3p
      VH1zldW5GxQmTmO3WzQ2V7HaDXzXYWvpPrKi4bkOdrv1zSPCrs1v8R9/9Pmx2viNeIGeO14o
      SNUW2Owezwexvl4/Vn0uy7JZXuiPK/o6+E14gf71i8f1Amm8vfGtF+hbfIuvjW8cD+B5HvX6
      0epB7SIKNlO//MCnQBEDCsvHy4NtOAOs28fLS7btoE+a5OvA8/xj8wDtVqc3DTsqTGsDRTx6
      G2aQI6b3y9V8FXzjDMC2bFZX17/8wC+A6ziYx2Av9dDm3OZfHasPC95L3PL//FhtDA4Noh7D
      kG3bpd3pX0R+HViW01tPHRUD9Y/RpKN7FBvSGfKZo2mcfjsF+hZ/1OgzgMdzN7l8+TKf375/
      YL9nt1ktR+RErbxKrb1Xk+kwMuJ3BUOVuTQ91BNSiukKL82MIEsiiixSykULtHMTBYZyhy/W
      hrJxRnJ7fu1UTOX8RKQqNjqQYKKQZCyf4MVTRSYOCYd2/ZB359t0nL1xKLc81psufhDyqOJE
      daq2bD5e6hyqZpYyNc7sI5fOjQ/wypkhCunI2zRZSiNLAi+cKjIzevgCfGzAJGPuvREEAYYz
      MUQBzgynSOgKpiZzbiR1iDgXKLLIpelST7RXlUVePjNM3IjaPFFMI0siU8NZxg4ZB4iqx5wc
      yvS2S9k4z5zIIwAnhzIUMyaGJvPymSEy8f5kliAI+fWNVWr7an7NrzWiPIUg5P5yDYCu7bG4
      cbiwQafZ4P7nH/X4kDAIqG+VCcOA+dufszZ/nzAMqZbX+g1gYvo86ytrXDgXJZ43tlZ59/0P
      KG8s8Ytf/JIPrt6gvrnC+sYGs3duceW9y/yHv/qbp5bM+W3jpTOjLJbrPHsy8nO/eHqYueUt
      Xj07yvTIAGfHC4wVUtiuz5nxPOoTbltFFillTQZSMXRVRhIFLpwosF7tkEvoDGZM6h2bxc0m
      s0vbPZZ0Pz5c6jA1oPLOfDQGXhDywWKHO2WbuS2bj5Y6BGGU7md5Idudfs/NufEBWl2HiZ0s
      ptsLWyxvNlEkkVPDGc6O5cgmDBw/4NFare/8jKkiCQIT+XiPJ5gaTDKeNzlVSrJW7TAznGRm
      OMXCZpuzI/1xSC9MD/Fotcql6VI0tjPDzC5s8sLpErmkwavnRhjNJ9EUifHBNMYTlYEEAU6N
      ZDFUmWxyp0bYWA7PCzgzPkAypjI5lEFXZa492ODZqcG+Pnx8d4OxQpzL11YIw5B62+HnVxdp
      d10ertZ553okxf7Z/U2uPdzqOz8MQ+Y++4DMYKknM1lefszj2Ws4VpdMocT6wgNc2+LOh4cw
      wbsIfIePP/yQ27du0rY9XNcnli4wP3eTbnObjbUl3v54ltMzM0xNz1DM9KcK/i5gux7bjQ7y
      zjy03ra5MFkkYWrMLmxiOx7VZpeTQ1nyabPfACSRRsem3rZ3ZP0kdFVivJBgejiDAFw4kUcQ
      4EQxxfzGXiUSxwt460GLrhsyGJdR5ejWu/yojS4LrNRdZvIaaV1CFAQcL6qzlY0d7IMoCHRs
      l/VKm4Sx9wQfGohTa9ucGs6i7KipdSyX18/3R+LpqkS149CxPURRIBVTGEzrxDQZ2w2YLqVw
      vADb9Tk7kqLe6V/8+kFArW31FrWVpsVLM8O0uy7fuzBOq+ugqTLFbJx8Okpu2Q9ZFGl0HLYa
      HQw10lwVRYGJYgpZElmrtKi3LRzX5+Uzw7T3JcR4fsCbny5RrnUZLSR66ZbpuMYzO6TmqZE0
      gzupki+eLqAqh689VD1GplDqhYwMjk2iakZURXRlkVxplDsf/RrdTDzdAERJ5aVXXmF8YgK3
      /JBbjzcjwmPfq3NkYpJ0Mklre5Vy7ffzBgiCkD97/iSVZodiNk6l0UGWReaWtrg4VeTsRIF4
      TKNtOZRrbdpPFPWzXJ/hXILxQhLPD1AVCdv1MTSFpa0WiZhKGIKuRE87e5/fXZVF/mwqTikh
      86PbDRRRYLnu8sKwwUxeI6GJXF+z+Hy1y52yxU/uNbC9ANs7OAUKwhBDU3j9/ChrlRYDSYNi
      xmSj2sZyPD6cXaHVdVBkiYGUwWHMTb3tMDOUIhVT0RUJzw+5tVijY3tosojrB6iyhCZL2F6A
      ofXfPJbj8ScXJ+jYLoWMSdxQsBwPQ5N55/oC9bZNvWXR7Ng02jbV1sEFtOsH5NMxLkwO0uo6
      DCQNVFnC8SK2/vmpIsVMnFzS6KWe7kKWRP7RpVHOjGX432/fx/MDljfbrFfaXLmzzge317k1
      v83VuU1uP67wzo1VPrlbplztT8YJAp9Pf/VT0vkilfUVVh7eY/7ONRZmr/N49jrdVoOpiy+R
      Hxk/nAgLgiinVGBvji+KOwK04cG6sMLOD7i/WNpvE+/fXOBf/eefHNgnCkLUB6Iig7vbYq94
      W9S/XYo/P5A94AXa7fX+gRCEiNk87DM9tPlvwb/rbYdhSBCCKETH7R+FINztU9ReCEgCvOG/
      zP94wgu0+51fBFGg5/p80gu0e/2HYX/bu393uxaPHjx+ov3Dx/JpfZBEsc8LdOC7dv6JBHv3
      9u9v9+d/secFCneYe1EQetcSBFF/hH2/axhGb1NJFHgon+VX+j/tfX8YhoQ79zA7x+3et7u3
      +25e9qFu0P3paYIg9C5Q2L26J4//Hdz4X4TdgQyf2N7/w30R4X3YJ7uHfxXvtCAISLtRDU98
      Ju3f8SXD9FU4+S9yuX/R6fvb/qLvedpYftU+9H3Xvsb2739aqdhoLHdKy+7sE/cNotjb+/TB
      FAQBoZeUf1AH+8mzvnE8gCTLxBNHk8HbRdbaJNE9eiCfKvqsjh9NjHUXLXsMrXM8RbVkZR6N
      o2d0qYGEGe+PyPw6GDAlUvrxvOmWVsQ/RkZYzTJY2jwaN/SNMwDTNDh16nhalDPv/VfyS/26
      OF8VoWrws392vMT8ra0mA4d4c74OTr/xN8RrS0c+v5WdwPsn//5YffjTSYHnSsczgDKjxzr/
      xp0yf//jt4907rdE2Lf4o0afAawtPeLatWvMze89WbrNKs2dGlzV8ibHix75zUKWBEZzZm9p
      ElMlpooJUjEVU5MppqPFbj6pk4odHgEqGzEUc29aZRZKxPKRLzx9YholZiLKCtlTZw+IWu0i
      CAJW7t85kKnV2C4T+D4bCw94dOMTKmvLLNy5xqMbnxyI+f6VxJ8AAA4/SURBVN+FoUoMZfam
      I6mYwlQxQUyTScdUcoloujSUiWGoh7v/tFQGUdlbFCdHTqClMiCI5KbPIcoKSswkM3m4srUo
      CIzlzAO1v0xNxlAlJFFgIm8iiwJxXWY4e7yp028TAhyo5abKEsP5iPeYKGZIx3VEQWBmvNBv
      AJmBQa59+jnFQo5Hszf47NYcK3eu8NPLV1hY2+ajN9+i7jtc++RDNqotVh7d5drt+8cKyjoO
      zo2k8YOAyULE8o4NxKm0In/4zHCKhKEwko1RShtMFhI9xrgHQWD4pddJT0TEn2zEyJycIX/m
      AtmpM0iqRun51xh64Tv4jk3hmef7+rB09waCKDJ39X0Aus06n775Y1zHIp0vYaay1DbXyY+e
      wGo38dx+Qagzw2k0RewZ7PhAnHI98slPFOKMZGOMDZgYqsTZkf76wpKmM/H9P0fPRD7z2MAg
      sYECxWdfonjxJdxul6EXvkPp+dcQJJnMZH9xjpnhJJbnM11K7g4NF8czFNMGz4ykaXRcFFnk
      VDEZVYf5A8XJ4RzfvTDZ23753BinRgaYGhmgkInzwswoL54ZxXK8fgPQDRNd1zFjGtV6nXd/
      8VO2uy6lsUk+fPuXeMCdKz/n+vwGb/zsLd7/4EMkIcT/PRmA54es17q9VMftpsVoLmI/u47P
      erVDMRNjtdqh1nEOpETmps9hFobYuHGVcIc2V4wY7Y1V2uU1zMIQtfk5PKtDEPjUFx4hHVIZ
      xul2GByfQt5xSRqJFCPT5wAB1YhRWVti/NxFNCOGKErEkgdvYEGAruOxtNXuvaW2WzanSkmm
      igmqLZv1WpdCUmet1sVyDjLJgxdeRNYNNu9c6+3TswNU5+ewahVk3aC58pgw8HG7HaqP7qGn
      +6MnwxA261bPnX26lKTScoipErmExtiAyalikoShcHooian9YS4hH6xsU23u8QO+H3Jvsczk
      UI5HqxXqbQtNlXm8Vnn6IjjwXG7dvU8hlyFAZHt9EUE3EbsNYvEUiRQ8O3MSu7bCe79+m7HJ
      qWN7A44EIXp6Ni2XhC6jyhId20NVRHRF4lQpxcJmi5ODCYIQFjb3ph/bc7cRRInS869g5Ao0
      luYJg4DU+ElEWWHr7g1Kl15DEEU8q8vQC6/htPrjT8xUhvufvk8YBrRqFURJorz4CNWIMTA0
      jm7GkSSZpXs3KU6e7uNLwjBicp8ZzbBcaRPX5V4NLs8PKaSisIKFzTbTpWSf23njxifIukF6
      Ygq7UcPrdrAqWxQvvoQgiLTLaxSfe4XA95F1g+EXX6ex/LjvOvwg5PRQEtcLiOsy5YZFIamj
      yTLVtkPX8XH9AEOVsFz/y7y6vzeMFtKMDWbIp008P9ISvXR6lGv3V3huehgBKFdbvHLuKURY
      t9tF13XazTqBoKCrMu1OG8NMgu+i6BrNWg1FN8G3cAOJVCJ+rCofXxU3Fyv89U/v9LYFIZqn
      tiwPVRbxd+Swm5aLJAqokkTH8dAViSCMxFUPeIEEASMTBb7ZzTqEIeJOtpjX7aAl07idFmEQ
      oCZS2I0aoaLT+Ms9L1AYhrTrVYx4Et9zEQSRTrOOKEnEEkkEQUSUJFzHRlZUBEFga6vJ6j4v
      kCRG+cht2+spXOiKRNNyUWUxEp51fUxNxnZ9vCDkuTf+Tc8LJEgyeipDGIa47SaB56LETHzH
      wXds9FQWq1FDlESUWBy7UaOVneDmPi+QAJh6NJaKFLHHAlE4QxiGxPaNsyRG+b+/CS/QcfHu
      nTJ//ePZ3nYipqEpMh3L2fnNfQxVoW05JGIatuvhuD6ZhHH4G2BX+z++71Wtaruv/uiUdGb3
      FXo8X/ZxEYZRCU6gl/De6EbLdM8P8fzoM+tpqYNhSPcJufLA21vm2429m9SuVw9tQhAE4jtT
      CkmOxiel9Yt3KV9QWM8PQto78+pdtY3d//cn8refMvcOfa/vOva/rax6FMkbeMGBazrQBntj
      ufvd4U7foH+c/1DR7Ng0OcjztC2n99kuqs3uN48HCIMQ7xhqaAB10QTlaBlEAIKskdnul0n/
      Omi0BYLgeE9OQ4aYcvTFl69wLFFagEAQscPjvfptT/hKjPvTIOFz0qh/+YGH4BtnAK7rUt0+
      njT7XfMSnaGZI5+vhw5/+3/+xbH68HHhB9wb/efHauN0PqB4jHz0rZTI/dTx3JltSWLZO15G
      2M1tmfAYK4ppaZYfnn/zSOd+S4R9iz9q9BlAbbvMwsIC65u/3wIYXxWSKJBPGQdCpPKpGJoi
      EdPkXtZRJq4fiLXfD0UWDyS6xA2V7E5xh3zaxNAUBEFgKJfs5xEABAElNwTi3pNQzgwiGnHE
      WAK1OIGgGkiJDFI8038+UWh1Zp9UYGyHxDNUicGUwWDaQBIFMqbWp27XG4t0AUHbe6KLZhop
      OQCCiDwwgqDoCFoMOVM89Pwg8KmXV3qZVJ5jU11fxHUswjCk06gSBAFOt01ja+3QAMN2s0l1
      e698VrfTprJZJgxDNlaW2VhdwXUcVpcWsA7R9A/DkPrmGq5t7W1vrdNp1Ah8j8rqIq5jU1lb
      YnN5HqfbHw7ddQOWq06vf7WOx3oj2l6q2tS7Hm3b5+Gm1W8AYRjy0//3E7zAp1zeYHVtg8rG
      Mg8WVuk2KzS7LuVymcb2BrfvPsT3Pebu3KLWtqPjV9fYWJ7n4eLqoYP8m8bFyQIDqVgvDW96
      JEvK1DBUmeenikwPZ5gYTHFmLMfFk4W+sj6CAN85f4ILJyOFBkkUefWZCS6dHmG8mOHM+CDf
      vXCC56eHye+QKE9CP3EBOVfCPPcaANrwFEp+BFE3iU2/AKKEaJjEpl/EPP9dBK0/If/CeI7h
      rEkhFX12eiiFKAgICAgCnB5OU8rEGBkwe6p3+yFnimijM5gXvg+AaCQwTl1CNEzkXAnRiBO7
      8H1iz7yOMnQSdWiqr42l21dp17ZYuRvpLnVbdTzHZv7z93G6bT7/+Q+xmjUe37iCY3X6wkrD
      IODqB+9y7+Z1GrUaYRjy6fvv8WD2Dlsb69y5fi1SaavXcGybT957p68PW8vzbC494v7VdwnD
      ELvTorG1wdwn71BdX8Hutrl/9T3CMKS88IDGdr804luzdebKXe5vRkZUbrlcnmuwWHUoNz3e
      nK1Tbrq0bP9wJjibyVLKJfnh//qfbG+v88blzyjf/Zi3L7/F7HKDX771Fm//4md0OhbX3/8H
      Ll+9yf/98Rv86Id/x1qlws/+4U0sp5/t/G0gCEPuLVWI7ZAyIwMJsgmdiWIKVRYxdoqipU0N
      TZH6iuSFIXw2t4y7U8JI12Q2Kk1uz68zM1bg1vw6jY6FoSlcf7CKtD9UXFIwz7+OnEjTnfus
      d0OopUnkRBZj8gJefQt99DRqfgTRTCDFU0jmwXTEXSLs7nK1Jxhb6ziM5ePkkhqbDYtaK8pY
      e7Te6PNo6dMvogxNYT++hd+ugyCiDI4jGnH0k8/j1cpIiSzu2kMESUZUDeR8vyEHgU9p6nxP
      VDaWzFBemEM3EyzducrQ9AXa9W1a1S3WH9zC7hystex6HtncABOnpmnWawRBQDyZ5NS5Z6hu
      baHpOrc/u0o8mWLx4QNisf4swsZ2mRPnX0LRY5F8TSyOJCuk8kNkSiM0K1sUxk+SLY0gyQq5
      4fHeuWt1h48et4ipIq+eSFBuRl6rtCFTaXsMp1TCMGQsq5FPKHy21P7iNUC2NM756QmE0Md2
      fXRdp1Jeo9V1uPTqa8x+9BZbXYnJ08/yF3/6XeK5IS6dnea111/jlz//xTECdb86JFFkspTG
      cjx0VWar0WWz1kEUBG4tbFHvOHh+wMp2i7bloj8RRyMAhUyCgZSJpsgQQiETZ2a8wNzSJjNj
      BZIxHdvxODNeOJhj4Lu0b76L326gn3gGRBFBi+Fur+HVNqPEDNfGXp9HkFU6dz/Bq2zgNw+6
      U8MwSu6fKqWoth00RcTzAtarXQxV5mQxycP1Bs2uy1g+3hPx3YU19wnu2kPU0RkkM4UgK3jV
      DQK7Q9BpEDvzKoHVxqtvYT34jKBTx1192DeWgiBSXriHKEo43Q6t6hbD0xdo1yuoRpytxfs4
      3Q56PEk8O4jvHXzIybJMtbLN0vxDYvE4rm3TajZ4dO8uhmlSGhlFUVW2NtY5de48rWajbxqV
      yAywePcajtXBtbvUyqtU1pbIDY3x8LMrmKkMsUSaytoy6cLQgXprpZTKyxNxOk7Ap0ttBkyZ
      puVT63iMZjQ+fNxiq+UxllUpN12+N5U8nAirVauk0ilq9QaZdJpGZZOmI1AaSLK4vEY8kUQV
      XLaaDhOjJZYXFzAzBcTAJZNOU15fwRF0RooDX3L7fn18en+dv/y79/cGXRIopE3WtlvEDbVX
      xK1c65A0NcIwpNK0GEzHdgqtWWxsbNBpR4ywIAicHM4hCgIrm/WdNkU0VaZcbTGUS9LoWHQs
      l7HBNEvlOopv8bf8971OCQLq4ATO5hKSbuK3G6iDY7i1TQRJRk4N4KzPo+RHCDot/FaVjws/
      4M19XiBNkUjGFDbrFqYmExKpU6xVOxiqRHcn/CGf1Gl2XSzX51/e/bcUrb0aX3JumKBT7xme
      lMjCznxeSuUJ2nVC34sMZHuVrdRJ/v57/6l3fuD7VNcXyRTHsDtNJFmhvrlKKj+MasRwrA6y
      qmG3m7hWl2S+xKm8xHB6zyAb9RqOZZEZGMDqRHP8VrNBoTTE2tIisXgc3YixvrxEvlTCjCcO
      eIHCMKSytkgim8dzHURJprq2hKSo6GaCdm2bWCqDFoujGSaCIDBd/4B/vPxfen1oOz4bdZcT
      AxqVjo/nh1huQDomsVBxiKkiOVNmteZ887RBnzSAo2C/ARwFeugcNIAj4EkDOAqeNICviycN
      4Ch40gCOgmO7QZ8wgK+D/w+MXD0P89HRzQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Customers who require attention' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29Z5hc53mmeZ9Uuaq7qjpnNNDIoUmQAEmRFMUkiVawLNkSrZVkyx6vk8Y7
      a4/t3ZldzzXB472u2b1mvZIsj3Zk2dLYkgOt7BElBlEkSBCRyKETOqJDha5cp8453/woIhEN
      dDfqVOhG3X/Arqo+38vq85wvvd/7SEIIQZ06dylytQOoU6ea1AVQ566mLoA6dzV1AdS5q6kL
      oM5dTV0Ade5q6gKoc1dTF0Cdu5q6AOrc1dQFUOeuRq12ALWIEIJCQUfP5zF0HUsIJCQUVUFz
      OHC6XMiyUu0w69hAXQAUb/h0Kkl0fo7YwjyJeAw9n8cSAt6RKiVJEoqi4PUHaAyFCTW30Bhu
      QlXrX+VaRLqbk+EMw2BmYpzp8TGSi3Hu9KtwOF00t7XR078Jrz+AJEk2R1qnXNyVAjBNk6lL
      o4wNXSCfzdp2XUmSaG5rp3/rdnx1IawJ7ioBCCGILcxz5vhRspl02dqRJInuDRvZuG07qqqV
      rZ06pXPXCMA0TUbOneHS8MU7HuqsFp8/wI577yPQGKxIe3VWz10hAD2f59TRQ0TmZivetqqq
      bBu8l7bO7oq3XWd51r0AdD3P0QOvklyMVy0GSZLYPngvHT19VYuhztKs642wgq5z7PXXqnrz
      Q3HucfrYEWYmxqsaR52bWbcCsEyTU0cPkYjHqh3KVc68dZTo/Fy1w6hzHetSAEIIRi+eZ2H2
      crVDuQHLNDl17DD5nH1Lr3VKY10KYDEaZfTC+WqHsST5bJZzJ45XO4w6b7PuBGBZFudOHkcI
      q9qh3JK5mWnmZqarHUYd1qEAZibHqz7pXQlDZ09hmma1w7jrWVcCME2TsYu1OfR5J+lkst4L
      1ADrSgCRuVkyqVS1w1gx4xXcla6zNOtGAEIIpi6NVjuMVZFcjJNKLFY7jLuadSMAPZ8ntrBQ
      7TBWhRCiPgyqMutGAIuxKKZpVDuMVTM3M1UfBlWRdSOA2MJ8tUO4IzKpFHo+X+0w7lrWjQDs
      SnnQdZ3DR49z5Njx2y5TxhftGbtblkU6lbTlWnVWz7o4yCqEIJO2Z/XH4XDQ0d6GJElcnptj
      5vIsHe1tTE5N09rSjKZpGIYJQtDY0GBLm5lUilBTsy3XqrM61oUACgUd07B//B9fXGQhEkFT
      VbZt2czk1DTpTASn00lB1+np7rKlnVw2Y8t16qyedSEA0zCLFRxswuv1IkmQSqdpbGigqSmM
      Q9MIh4I4nU6awiESSfuGLYWCbtu16qyOdSEAy7JuKl9SCg0BPwABv5+Bjf1XX29pbqbl7ZFK
      wO+3rT1h1m7e0npnXUyCZVmCNVyBQZLXxZ9hTbIuvnlZVmwvQSKE4NiJk7z2xpssJhI8/+LL
      AJw4dZqz5y/Y2la9qFb1WBcC0BwOFBtLFRYMg+mZy+RyOZCKS6PhUBDDMBgbn2AxkSwOu2zC
      5fbYdq06q2NdCECWZdxer33XkyR8Pi+93d2YholDc5BMpsjmcoSCjSiKjGFjKrOdsddZHeum
      7/X6/bZthimKQkMggGVa7N65HU1T6evtQdd1BnftQi/oODR7Cl5JsowvELDlWnVWz7oRQDDc
      bHvVhWCw8ep/9/VcP0yx74ntcrtxuty2Xa/O6lgXQyCAYFPzmlxNCbe01muIVpG1d8fcArfH
      Q8MaLEHY0t5Z7RDuataNACRJoq1rbZUf9Ph8BEPhaodxV7NuBADQ3tWDw+msdhgrprNnA7JS
      d5qpJutKAKqm0d2/qdphrAiH00lnb1+1w7jrWVcCAOjZsHFNrKps2LwVzeGodhh3PetOAKqm
      sXnnrmqHcVv8jY109fUv/8E6ZWfdCQCgtaOrZifEiqqyY3Av8hpcsl2PrMu/giRJbN01iNdf
      YzusksSWnXvwNzQu/9k6FWFdCgCKCXKD+x6sqVWhvk2b6ejprXYYda5j3QoAiuvs9zzwLjSt
      +pPNrr4NbNq2o77rW2OsHYskISCThYUozEcgnoB0BnJ5uJKZqangcoHfB+FGCIegKUgqn+P4
      wQNk0+VzhrwlkkT/5i1s2LKNy4kZhhYuMBoZZiYxRTQTIZVPYgkLVVbxOLw0eZtp9bcz0LyZ
      /vAALf5WZKn6z6lCTic+FSE2MU9iNk4mliKXzGIVit+9rCk4PE48QR/+5gaC3U0Eu5txel1V
      jvz21LYAhIC8DqPjMDJevPlXm4bs0KCjjXxHC6fmp4hGI+WJdQlUTSPQ08yYcYmD4weYSUxh
      WiuPX5EVuht72d/7EA9teJQmb3NFexAjX2D2whRTJ8dYGLlMIbu6s8uqU6OxM0z3YD9t27px
      eGpnOHqF2hVAKg2nz8PFUdALtlzS8vsYd8KIyFPOwuQCQUpOc14e5lzsLAWr9PidqpPBzr18
      ZPcv0N3YW1YhGLrB+OGLDB84SyZmU7kZj5Pe+wfY+NA2nL7a2aepPQFYFpw6D2+dhkJ5Sh1m
      VJlhn8asKmwvS6jLBQ6mDjFcGEFg/1crIfHU1mf46O6P43fZu8olhGDqxBhnfniU7GJ5houa
      28HWJ/bQt39LTSwF15YAYnF49VBxjF9mBJBuCXEp7GUuFsEolPaUDgSDTEuz/NPk90kVyl+i
      PeQJ82sP/Ta7O+6x5Xq5ZIYT33mTmTOVcbIM9bZwz0cfwheu7lJ1bQhACLg0Ca8dKo75K0lD
      gMLD9xM1deYvzxCPLpDPZpc986tqGv6GRoLhJkItLfxw9Ad878y3sCpozaTICh/d8wk+uOPn
      SjoTHZtc4PA3XrFtuLNSHF4X9/zcg7Rtrd6mZfUFIAScuQCH3ioOf6qBywlPPAKtTQghyOey
      ZDMZcpkMup5HWAJJKu7iOl1u3B4vLrcbVdPQjTxfOfjnvDL8YnViBx7b9CSffeDXUeXVH/Cb
      vTDFkW/+lEKuOsW5ZEVm8CMP0jXYX5Ul4uoK4MrNf/BY1UK4ikOD9z4GzSvPzzdMgy8d+FMO
      jL5SvrhWyMP9j/FrD/32qkQwNzTNwa+9hGVU2atMgns/+i6679lY8aarOwu5NFl88tcCegF+
      9ArEV1b1WQjBXx76ck3c/ACvjrzM3x3/6xV/Pj4d5fA3Xqn+zQ8g4Pg/vs7shamKN109AURi
      8Oqb1Rv2LEUuDy+/DvrthwNCCF66+CNeuPDDCgW2Mr5/+lu8Mfbqsp/Lp3Mc+dufrnpdv5xY
      psXRv3+NVCRR0XarIwDTgp8etG1931ai8WV7panFCb5++C8qFNDKsYTFf33jS0TStzYLEUJw
      +geHSc3XnjeZns5x/LkDthYdW47qCODk2eKNVqtcGIHp2SXfMiyDvzj45+SMbIWDWhlpPcVX
      3/zyLVejLp+bZOKtkQpHtXIiY3OMvn6uYu1VXgDJVFEAtYwQcOg4WDevDxweP8jZ2dNVCGrl
      HJ04xFtTR2963TRMzvzwCGXYn7OVCy+fJJ/OVaStygpAiGJ6Q5l2eG0lEitO0q/DtEz+4a1v
      VCmglSMQ/OOJv7sp72jy+Aip+cqOse8EPZNn+NUzFWmrsgLI5WForKJNlsTpczf4DhybPMzU
      4kQVA1o5wwsXOH355NWfLdNkpIJDi1K5dPgieqb85oGVFcDQWG1OfG/FXKTYE3Bt5WetIBC8
      MvTC1Z+j4/MkLttTO7US6Jl8RdIyKicAIWDkUsWas43hMQASuQQnZ2pkz2KFHJs6Qq5QnKxP
      Hh+tcjSrZ+rEWNnbqJwA0plisttaY3IGLIsT00cxbEhrriTZQoZTMyewTIv54Zlqh7NqouPz
      5JLlNRCsnAAuzy+5qlLzJFKQznB+rsZXrm7BqZm3SC0kyMQrm+hmB2bBID5Z3szgygnA5hTn
      VD7H0NzlJde7Ezkb1+iFwFyIcGG+9AmkhITPWTTXa3A13PD6nSSyrYSx6AjxqYWSlz5lRcYb
      DqwoYU1WFRRNQZJLT26LTtx6U88OKiMAIVacY7NSfnz6JJYlWMxmefHsaS4vxlnMZJhZjBOx
      0cIUID8/SzS9UPJ1nKqTB/seQZEV3jPwND6Hj60t2/E5fdzXvR+P5mFT02ZCnjBtgQ42NW0u
      uc3pxBSxmdJjb97UDghUl0aotwWH14nT58bpc+EKeAj3teBu8LJh/xZcfjfuRi+ugAdHiWeC
      k3Pl3bGunEFG2t6d0719/bw5MsRAWzvJXJY3R4fxu1yoskLOKLChucW2tlLRWTIFe8ai0cwC
      O9v2MBG7RH/TACORITaENhLLRukO9uJxeGn1t7OYjZEpZNAUBwXzznN2Uvkk0VzpAohNLBDq
      bSETS+FwOwj3tmLkCwhRPFW3OBMl0BokMRtHcxWrcLQMdDL2ZmmGguU6mXaFyvUAeXvXdC8v
      xnFoGolsFrfmIOT1ki8YDLS20WCz6Vwybk83bAmL6cVJHKqDSCZCPBtjc/NWFtLzLGbjGKaB
      jEymkCaei5PR07Yc2VyIzJV8DafPjWVaKJqCEAIjX0BxqDh9bmRFJtzbSjqSwOEtHnw3CwZz
      F6fxhnwltVvuHeHK9AACsDnt9v4Nt84db7O58lo+l7blUaGbOjOJaWYS01dfG4+NlX7hZUhn
      Ujgo7TtJzsVJzi29iucJ+q6eJps5be/avamXN2ug+qeS1wJrvJhVuesKVfoopZ1UpgeQKBat
      stFaFODM9BRjkXke3rSF14bO09fUTN4wSGQzPDKw1bYjdk6nB8qQOt8e6KTF38pE7BJdjd1E
      M1H8Tj+pfIqJuH2bhl6vH2xeTlccKk19rSRm4zj9LjSXg3Q0iTcUIJfMkJy1Z89Hddrjxnkr
      KtMDSBI47S9POBFdYHt7Jy+dO40qy0xEIyxmMgRcbuIZ+/7iDaE22651PSFPGNMyUGSVWCaG
      JSyS+SQ+Z2nj5huRaA7btyBwhYb2EAtjszS0B1mcjiLJMtl4mlwijW7juL3cleUqNwTy2/dH
      LZgGB4YusKm1jQNDF7CEoK0hSL5QoGAa5A0D2YY16Ct4Qq14HfbFLyGxuXkrDtVBLBPDrbnJ
      GVkWs3E0WbPV9T7gChBsbrLtegD+1kYysRSh7qIzZ7i3lfjUAsISOP1u8in7BOApcRK9HJXr
      ARrsq/+iKSoPbdoMAvpbWnjfzj1EUkl2dfXQ19SCpigEbHSJcbe00upvt+16AsGF+XOMxy4R
      cDUwk5jCMA3SenEsPZu8bFtbHYFOgh32CiA5G6eQzSOEKKZYSBBoDaJoCokZexPuAq3ldf6s
      3D5Ac8j2S25saWVjSysAj23dbvv1AZBlpHCY3lAfI5GLtl46kp6/enwxlo0CMBodtrWNgZat
      NLSFkCTJ1ip4ZsFkYaQo1Cv/XnndTkI9zbZe751UbgjU0gQ1UApv1QQbwONiR9vuakdyR+xo
      24037C/7UKIcaC4HDe32Pzivp3J3pM+7qpo7NUNnG0gSg5334lBqr7rx7fA5/Wxt3Y6syLRt
      q03LqNsR7mspe0Xpyj6SN64xdxRJgoGimZ1b8zDYeW+VA1od9/c8gEMprr517uorLkevITp3
      95W9jcoKYEN3WZZDy0ZrMwSKQwdJknhqy/uR1shdJEsy7xl46urPjR0hgl32TobLiavBQ9u2
      nrK3U1kBOJ2wdaCiTZbE7m037AJvb9tFf9PaMOLe0baLjeFr37Uky2x6eEcVI1od/Q9sRXWU
      f42m8rPS7QPFYrS1TntLcfx/HZIk8QuDn6wJy6LboUgKH93z7E074W3bu2noKO+k0g5cATd9
      +0pPBV8Jlf9Lul1wz86KN7sqFAXuH1wyB2hH+27u7dpXhaBWzkMbHmWgectNr8uyzK4P7LPl
      oEo52f70vVdTqstNdR5lWzZBm/3b87axays0Lf2klCWZT+/7FfzOGvMgfpuQJ8wv7v3MLfOg
      wr0t9D+4rcJRrZy2bd10DfZXrL3qCECW4NH94Kkdr6irtLfC7ttvqjV5m/nVB3+z5ibEmqzx
      6+/6HRrct0993vrEHho7a29J2hvys+fDD1TUJ6B6g1mfF979IKiV24xeFr8X3v0AqMvn4tzX
      vZ+fH/zFCgS1MmRJ5tm9n2Fn+/IbdqpT476PP4K70VuByFaG6tTY+/FHcPkr+1Cs7myuvQUe
      2VcbO8ReDzz17hX3SpIk8aFdH+WZbR8qc2AriAWJD+z4CE9vfWbFv+MNB9j/P72nYmPt2yFr
      Cvc/+2hVlmltd4gRlo6Vv4yZHcfMzyIKcYTIgxBIshNJCyI7WlA9vcjODiRZLdbg/Mnrtp8a
      WzF+Hzz1KDQGSOd0puaTzESSzMbSpDI6xtvluj1OjaDfRXvYT0eTn7aQD0tYfPPo1/nu6eeq
      ErqExMcGn+XDuz6GJARicRIrfgkrPo5ILyCunGWWNSRPENnXhhzsQw72ITl9xKejvPn1l8p+
      9vZWaC4H933iUVoGOjAKOovzMyQWZklE5slnUphGAQSoTicujw9fqIlgaxeBcDOyUvrowRYB
      WIU4hfhB9NgbGKmzCCMFyzrxykiqH9W3HUdwP1q+H/m1s8UCWhVEtDYxs3s3B4YXOD50mYuT
      UfK6sWwVEVWRCTe42bOxlf3bO5ktHOdvj3/VFk/gleLRvHxq8Fkecvgwhn+MOXEIkZoFa7lj
      hBI4vCgt21EHnkRv3MuRHwwRn6qciTiAN+xn+/t3k0pOMXryEPMTo+Sz6RvqsS6FJMs43V46
      BrbTsWkHG3bdh+MOz4HfsQCEEFi5CXKXn0OPHkCYJZYikd043ftwjnSgzGtln2AawHFXI99O
      qZydjFIwSjNlaGn00tmVZcJ6nqxVehWG5ehWXfxKoJ2OmRPFm74UVCe03MNI4j4uXXIjRJkn
      oRK4mxTwR7g8doZCvrTzAy6vn/49+9nxyNP4Q82rmkTfkQAsfYHM5F+iR14GYfehZRlHchOe
      6T3IBXurO1zhQl7iKxE4m7G/Up2smLibLyI1nEJI9h/odgqLZ3KLPJ5L4LC9t5GIi36GUo+S
      yJcnDdkQaXR5kmxhBmGzpayiaWy+7xHueepncftWtky9KgFYRoLc5e+Qn/1O6U/85RAOXMlB
      XGIf8myu9KrSXg+jqpvvjCV4KVIos0eEwOUpEO6YpKNT5/z8yZtq9a8GVVbZ3bKd3rmzvCs5
      jT9X3mJRApkF6T4Wg+9jdpqST3hpbgeBDh+z0ydJpEewzPIOE11ePzsffR9b9z+G03P7la4V
      C8BID5Ma/hOs3OTyH7YR2dGKr+f3UWNeGJ+E2YWiz8ByPlKKXFzZaW9F9HTyk9ksX/r+MbL5
      yppz3DPQxqee2cj5yFGOTx7hUmyUZP72D48rJRT7Qv0Mdu7l3lAfvlf+E9bUkQpF/TbOAOqj
      /5pFZRczZyeIjM2SjaexzNt/95Is4Qp4CPU0076tG0tN89o/foX0YrRCgRdpbO3k8U/+JsG2
      zlt+ZlkBCCEwkm+RuvgfEGZ1yl9Iihffpn+F1nBPsbJEJgvxBKTSRWf5K9UmVAXc7uJ6vt8P
      HhdCkvjbl07zzRdPY1apOG9PawP/+tOP0Br0kS1kWUjNMbU4STSzQEbPYAoTRVIIuBoIekK0
      +Npo8bXgdniwFifIPPfrCBurRKwKWcX57j9A2/MJhBDkEhnSkSTpaBI9ncd4u2dWNBWHx4m7
      0Yu/qQF3gwdJkRk9cYhX/+EvKNhZr3UVuLx+nvz052jdsHRu0bICKCweJzX07xFmdZbJriK7
      8A/8EVrD4Ip/RQjBN148zTdeOFXGwFZGW8jHv//V99C8is0na3GSzN//CiJRef/cG5BknI/9
      IY5VbvyNnniTl7/xX7CM6lpiOVxunvrlf0HbEiK47Q6UkRmpjZsfwMqRvPjvMFLnV/RxIQTP
      HxqpiZsf4HI0xZ/8t9dIrdCb10rNkf3Wb1T/5gcQFvmX/4TCue+v+Fcuj57nJ9/8ctVvfgA9
      l+WFr32e+Oz0Te/dUgBWYZHU0B/Xxs1/BStDaug/YBWWL7p0Zmye//r9m50Sq8nQVJTPP/cm
      5jLzF2EWyP3o/8SK1pCri7DIvfBvMVfgk5BejPLSX38Js1A7hiK5VIIXvv6Fm5ZclxSAEBaZ
      S1/CytXA0+cdWPo8mUt/dtsltGQmz+efO0Te5goFdvD66Un++8FbV34QQlA49nXMFTi+Vxw9
      Te75/wOh33qz0jJNXv37r5JZrD0/svjsFAe/+zc3VMdYUgCF2Bvo0Z9ULLDVokdfoRA7cMv3
      /+bHp5iOlHmZtgS+9vxbzMeX7lmt6Cj5179Q4YhWjjV/Dv3Ql2/5/sXDP2Xy/IkKRrQ6Lhz6
      KdND1yxYbxKAMDNkJr9CrbspZya+gjBvfhKNTMf4p4NDVYho5WTzBl9//uRNdXqEZaIf+H/B
      qIxJ9J2iH/0a1hJVrfOZFEef/1blA1oFQlgc+v7fXh2e3SSA/MKLNTn0eSdWfob8wo9veE0I
      wTdfPI1lb35fWfjpiUtcmr1xQ8uceQtj+OXqBLQajBz5g//lppfPHHiRTLL2jRAj05cYPfEm
      8A4BCGGRm61tBV9PbuY5xHXpAJPzSd48V/viBTAtwXdeO3+1FxBCUDj6lyBqb96yFMb5H2Bd
      53Ng6DpnXnu+ihGtjtOv/QhhWTcKoBA/tCae/lew9FkKi4ev/vzjw8NYa8iJ8sCpCeJvpxmI
      1CxGLU58b4VlUDjz7as/jp48RC69dnwCFiYvMTt28ZoAhBDo0ZerGNKdoUdeKsZeMHn9TGXT
      NEolmzc4eKb4wDFGfwKGvTZS5ca4+COEZSCEYPjY69UOZ5UIRk68eV0PIHQKi8erGNCdoccP
      gTAZmYkxG62hPYsVcuhccRghUuW1Ay0HVmQIK3aJQi7L7Ji9hYMrwaVTR69VhzYzYwij9icw
      N2HlMDMXOTlsb2ptpTg/vkDBMDGnj1U7lNUjLMzJN5l17sDQ11bvBZBJxK4JwEivLMWgFjFS
      57gwuXbK/l1PKqczNRcnPHdm+Q/XIObkERZctXO4frVc1wPYk234N9+bwuNWePS+EH6fRl43
      OXJqkT1bA7hdCpYlWIjpNAUdLCYNWsKOkstgGJlLTMyV7iW1pSeMIsucG18g6HMRS+ZwOooV
      InJ5A1WV8boc5HSDDe2NjM8u4nKoRBJ3nukoBIwPnye8TIr0SvjJxRR+l4JDkdjQ5ECRIJo2
      MYUglbfoCznIFiwUWcKpSqhvF8hSlTv//q34JWJiouTYATbsvp9sKoGh58kk4uQzabS3jU4K
      uSzN3RuIzU5h6DrW2+crxHJp8ctwVQCWXuKxurcpGBaKrDI2naU1bHF2OMl8VKe73U1yOks0
      roMEqYzBD34yx7Mf6KS9uTQfqExyisVU6eW/vU4NJImAx8mDO7sZnYnRFvKxEM9wYTLCtt5m
      WoNeDp+fJuh343FqFEyLaCJb0rbh9NgF7ikxdksI8oZATxkE3ArPn0nSE3IwuqCzq9PFbMJg
      PmmS1i2G5vPs7nTj1iR2dbhKEoBIL5BM35xkdifksxlkWcHh8qBqDgr+PLKs0NS1gfGzx3D7
      G3G4PBT0PInIHKqmsThfmpvO1UmwVbDnlFFXmxuvR0ECjpyKk86YeD0KhvG2GGLFbMjx6Sx9
      nR5y+dLH7snUPAWztKxDj1PD7dJwORQ2dYaYiSRxaiqjM3HSuQLb+5qRJYn5eIau5gBzsTTJ
      FWZ2LkciUrol0mzCQDcEsYwJAsI+FZcqoZuC+aTBllYnDlUimjHxuxQ2tzi4FC3gdpRWksbS
      M2Tjdjw8JSzTxO1veLs6xOWiqw2CRGSWYGsX6XiEXDqJJMu09G60xb726nmA+IlftWUPwLIE
      klTs2k1LoMjS1aejsAR53eLgiRiP7WvCEsX3Sx0CzaUb+N9f+BCmZU99IYniqabr9xRkWUJY
      4qbX7eBxzwk+6/1OSde4Pq1CUPx/EAJMAap87XVLFN8bXtDR5OJQqRRMFH4wt4usaUOJEkkG
      xE0pIpIs3zTUWeq1O+G6qO2pBHDFnVGSuNmpUZZQVZnHHygeuJZtq/xg7w0pKIr1eq7c9O98
      3a72SuX6h4h09bUbt/olilUpATa31F6F7ltl+C51o9tx88N1348k2/+FLCYLHDkdx7IEJy8k
      iC3qROI6p4eSthq2ORweZNm+EouSBM2N1ypSBLxONnYEkaTiRNntUNnQ3kiD157vzL3Mwe07
      IZI2eOl8ilPTOc7P5nl1OI1hCi5FdFu/e0VzITvs9fL1Ba+t6Ln9jYQ7+1A0B239W3C4PLh8
      AUId9phnXBOA2mDLBa/nyOlFwo0OXn4zgmUJjp5Z5PjZRXI5k1jCvsMSPl8TqmJfecWg383m
      7mvFY/dubse0BNt7m3FqKo3+4h98S7c9S6/B1i5brnM9Ya/Kg/0ekjmT4xNZOho0EjmT10cz
      tvaXksODq8G+St+ay017/9ar4/vm7g1oDgdOj5fozCQtvRvp3rrb/h5Acdnng2tZgjfeitHW
      5OTMUJLYYoFggwOXQ8HlUAg1Osjm7Nu48vg7Cdhkpra1p4nFVI5UpjjBlSWJfMEk4HUSDLgZ
      n12kNeij0eeiwWdPm6099rrOnL2cYz5pcGwix2C3mw/vCTAe1ZEkibaAvcWIJU+IQMutqy6s
      hnBnLwhBKn6tQp1lmTi9fizDINzeTSGfx9B1nB4vmrP0nuc6AdjnIijLEg/sCeJxKTgdMu99
      pJnzIykaAip+n8rQeJr2ZvuGXIq7iw3t9hgqnxtfoLnRSyjgprPZT3Ojh0gigyJLnBmdZ1Nn
      iOlIEsO0uDBReilBSYKu/q1goxP9tjYXYZ9Co0fGrckcm8iim4J03mJm0WBk3p7VKwA5PEBj
      qz0CiExdQlE1vA1Bgq2dNLZ2UshlsQwDh8uNrKoU8lkyiRiyrNiy+3z1caB4N5Z8sXfS1+Wh
      r6s4ln7qXeUzPFb9O9nYafKGTclwl6MpLkdTaIqMYVrMxq7lGEXPFze95mL25B353U66Wxox
      WrZhTh6y5ZpQ7Lm2tRWfkA/2X5tjPHv/7b0DVovSMUiT1mfb9XLpJENHDyBJEkrTpdkAABDH
      SURBVJIsY5nX0sMTkTnb2rnC1R5A9W5G0sprS18OJMWL6tnErn77HWcKplX2c3FbesI4NAWl
      o9StsGogoXTeR0vfJlTN3jLrQogbbv5y4Ak0Xr8K5EDzrz03dDUwCJJCf3vwhpWbtcKDO4oT
      YMlXw5ZRt0AO9SMHe3G6vbRvrF3bpVvRs23wxgMxjqYnqxXLHeNsegpJknA6VB7Ybv9qSjnx
      OFX2bukAQO17GNaYE7068BSSoiFJEv17ats48CYkiQ179t8oAK1hENlp32pQuZEdLWiBa5Xi
      3rtvI3IF/aVKZd+2Lhp9xXG63NBVFMFaQVbRdn7k6o99u+5bthBtLRFu76a9f8uNApAkFVfb
      R271OzWHq+3nkK57anY1B9i/3Z4ViXKjyBIffvhGK1Nt72egxj2Ir6BueT9y4Np3rTqc7Hj4
      6SpGtDp2Pvo+JFm+uSqEs+nJNdELyM42nM1P3fCaJEn8wnt23JyCUYM8vLuHDe03rsgoHYMo
      Gx6tUkSrQHXh3PfPbnp5+0NP4AnYu8pUDkLt3fTtug9YoiyKpLjxdP9yxYNaLe6uzyApN096
      +zuCPH2//Uu6duJxqnzyyV03JQFKkozz4X9RdGypYRyDzyKHbvbydXp83Pt0bY8gJEnm/mc+
      fnXVasn+Vgu+C0fo3RUNbDVowYdwhG79pPzkk7toC9m3sWQ3n3x6N623iE8Jb8Sx/zcqHNHK
      kUMbcez7n2/5/sDeh+nYdHuf5WoycN/DdG7ecfXnJQUgSTKe3t9AdnZULLCVIjua8fZ97u3U
      2aUJeJ187qP7cKzA77fSPLC9i/fvu33qg2PvZ1B6HqhQRKtA8+B63x8jOW/9cJEVhUc//s9q
      cijU2NLBAx/6xRt63lveRbLWgG/T/4ak1M6TVFJ8eDf+IbK2/Je7o6+Zz/7MYE15uW/sCPJb
      H7kfZZnEPUnRcL33j5GDGyoU2QqQFFxP/hFyy/JPd29DkMc/+ZsoaunHVO3C6fXx+Kd++6b8
      odv+JVTvJrwbfx/k6pspI7vw9v8emn9l3askSbxv3yY+/sTOmhBBR9jPH3zyXQRWmEIt+1pw
      fehPa2SDTML5rn+OtvVnVnx4qXXDZt79iV+rCRE43B6e/NTnCLbePKJZkUeYHj9Eevj/qppX
      gKR48W78lzga92MJQSKXYy6dIpbNkNZ1CpaJjISmKPicTsJuD2Gvl8Dbav/GC6f4xounlrOf
      LRudTX7+zWcfo6XRizAMCjOXMWYvYy5EsNJphGUhKQqy14va1ITS0oLW3oakqpjRUbLf/i1E
      fLw6wcsqzof/Fxx7f+mOfn3s5GFe/ps/LxpeVwGH28vTv/w7tPbdoUUSFPMyzMwQqaH/iJWf
      sT3I2yE7W5F7fo+LmQYuLswzHI2Q0vPLFsBVJImQx8tAuIltLW2MjS3yle8dJ6tX1rFkcFMb
      //yJARznTpM9cpT80BAim729GbQkIbndOLdsxn3vPbg2d1E4+CeYFTfJ8+N68o9QB957x8dW
      hRDMjl3kpf/2RTKJytadCjS18eRnPkfwNtmqq7NJLSySHvs8hdhrlLt8ukBi0bGbo+K9nI7q
      ZAqlpfCG3B4a8HL48BzzkfK70TtkeCZk8nRqDGvoIkK/8/glhwPnlo04m8eQ04eB8hfQldt2
      43r636KE7TmrkIpHee25rzJ5rvzeAcXUjP08+LOfss8m9QpCWBRir5MZ/3MsvTzl/OJmgDf0
      hzid68ewWWcqMnMTOgvjOpZZDhELBvQ4H46dpSe9YO/8QwKtycTVOobqLdNw1OHD+cCvo+15
      Fsnm/QjLMhk++jqH/unvyCbL43XsD7Ww/4OfoGfbIJK8/K76HTnFAwgrT272e+Rnv22bEISj
      jROFe3k51kPOpgoPt0IyJEREY3I8vWLjutteDxho9vDu8WPsvHwR2WYX9Hc25h5w4N6YQkTP
      2XNJdwh12wdx7P0lZF/5zm4AFPJ5zr7xIqdffd42K6WG5jZ2vfv9bLr3oVVNvO9YAFcQlk5h
      8Sh65EUKibcQRmJVvy+pDaj+HRiBR/nupMbp+dJPWa24bSTua+/Bl/fw+qlJLkwskFmFkbYs
      STQ3erh/awcPhhQa/+6vsC6XXuNnpWg93QQ/9jAk38IYewWRmGFVQ1PNg9J5L9rm96NuehzJ
      6S9brEthFHQmz51g+NjrzIycJ59ZXXl1T6CRjk3b2XTvQ7T1b7mjFaeSBXA9wkxjZC5hps9j
      Zi9h5mcRhUWEVTy6JskakhZEcbahuPtQvJtRPb3EdfiLI28ym6qOr9futnY+tnOQXM5geDrG
      0FSUiblF5uMZ0tkCBcMEqVg8q9HnojXko6+tgW29zbSFfJinThD5/Bex0pVfJZN9Ppp+93/F
      ObABKz6OOXUUKzqMFR9HZCKIfDEmSdGQ3EEkfytyqB+ldSdyyzZkT6jiMS+Fns0QmZlgfnyY
      +NwMqdgCuXQSo6AjAYrmwONvwBdqItTeQ7izl1BbV8nngm0VwJ0QzWT48qHXiWbLPzG9HZvC
      TXz6nvtxqis/NC6EIHvwTSJf+CKiipagkstF8+/9Lq6dO5b/cJ0bqGrubSyb4f8/XP2bH2Ao
      ssBfv3VkWQ/f68mdOkXki39W1ZsfQORyzP+n/5vcubVb4btaVE0ABdPkmyeOEclU/+a/wrn5
      OX5w/uyKCkcVZmaI/Oc/LWl5005ELkfkT/8/jPmFaoeypqiKAIQQ/PDiOUZj0Wo0f1teuzTC
      qdnbT2StfJ7IF/+sKmP+22FGo0S+8AVEmQ+TryeqIoDRWJRXx0ar0fSyCOC7506Ryt+65kzy
      B/+EfrE2vYjz586T/O8/rHYYa4aKC6Bgmnzn7ClEDRtxL+Zy/Gho6fF0YXqGxLe+veR7tcLi
      PzyHsVAfCq2Eigvg2MwUM8nV7RVUg0OT40suyy4+9xziNr1DLSAyGRLfLq3c+t1CRQVgWBY/
      HR2uZJN3jCkEr4wO3zAhLkxPkzn4ZhWjWjnpV1+rT4hXQEUFMBSZZ24NmSmfuDxN+rpVntSL
      L0GVlzxXishmSb/8crXDqHkqKoBj02vHhR5AN01OzhbTvy1dJ3PgQJUjWh2pV35qWxnx9UrF
      BJA3DM7P21/ctNycvDxddKIfGcGM2pO4VSnM+Xn0kZFqh1HTVEwAY7Eo2SqdCiqF6USCnGGQ
      PVzhwyg2kT97ttoh1DQVE8Dk4hp0oQeyRoHZVAJ9qDbX/Zcjd3plO9t3KxUTwLRNByDmRkYZ
      PXqMyPgEplFMXc7Ey3O44gqT8/MYs6VbgUqahvv++3ANDqK2td7e5lOSUIKll6svTE1BfR5w
      S+z1y7kFQgiiNuT8CCFIx+Js2HsPU2fOMnLoCMHODnKJBJfeOkFL/wbmR8fwBoPk0ymyyRS7
      nnqi5HbnFxbosUNkioLs8SAKBZRQGK27m8LEJFpPD6JQQPZ50S9cxLl5AGN+Hkf/RlIvvoDI
      3fm+gxmJIAoFJKX2aiTVAhXpASwhSNq0eWTk8+jZLLKi0L1rB2ahgKEXCDQ3oTmdqA4H8cuX
      0dxuXF57qhUvzs/d/hD7KtBHRxG6jtB18ufOo4SCYJmo4RD6yChKQwNmMonkcKJPjJd08wNg
      WViJ6pyzWAtUpAeA4pJiqUiSRN+9g8yNjBLu6cbhdhNsbyfQ0owsy2guF6lYjI6tW5g8fZrk
      gj2ny9IJe3auha4jezwUpqYx43GErqOPjKJ1dpK/WKwWYUYiqG1tGHNzqKEQktNZ8s6zlUkD
      5T3muFapmABMm87Iai4XnduvuZE4PO4b3u/YUqz/smHvvSs6FL0SLMOmUiqWRf4dOfvCNNGH
      b9wdL4yNFf+1KVW8nh16ayomAE1WMGyejOm5HJZhoLlcGHkd1elAVhQs00Rz2WferLndy39o
      tagqXC8sRSnWA3I4ELnctSe/Dd+ZZLN/13qiIgKQJHCoiu37AOlolOmz52nfsplcKkVmMYG/
      KUxqIcLG/ffb1o6/0d5Cr7LPh3v/PtIvvgRCoPV0ozY3IwoFrFQKY24eta0N2e8nd+yYDe2t
      HeeWSlORSbCERIPLvqeoaRhMnTlHQ2srvnCIYGcHhVwe1aHRurEfRbO3HmWwuQVsuqajvx9R
      KGBcvrasWhifQOR1jPkFlKYmJLer2AOUWAwMiueFFX9lqz2sJSojAEmixWtflWlFVencvpV0
      PE6gtYVcMollmlimycz5C0QmJijkcra11xxuQrVhTR5AHxlBcrvRujpR29tRwmG0DRtQWluQ
      XE4QAtnpQlJkJLn0pUu1qak4vKqzJBWbA3Q1NHJ4asLWa/rD4av/vWHvNZ/d9i1LF0K9UzpD
      IbSebow5e3KZrHic1A+fB1VFcjoxIxEKo8UTcoXRseK/k/aYfmu9vbYtBqxHKvbN9DYGa6JM
      +WppcLlo8vpwbiuDD65hIMp8rti1Y+3591aSigmg3R8gYOPKTKXYFGrCoSi496w9E3EUBdfu
      NRh3BamYACRJYrB9bViYXs+et2NWOzrQenqqHM3qcA5sKs4B6tySig4O72nvQllDRtZBt5uN
      oeI8Q5JlfI+/p8oRrQ7vex6rdgg1T0UF0B4IsCm8drbk93X1ol63guJ95GHkNbKkqITDePbt
      q3YYNU/Flwce3ziwJibDAaeTB3p6b3hN9nrxf+CZKkW0OgIf/AByOXaw1xkVF0BvY5Dd7bVn
      v/pOnti4Gc8SKQT+p55CaantXkzr6sL7WO36PNcSFReAJEn8zJYdeGzerbWTDcEQ93UtPeGV
      PR6Cn/7U7Q+zVBNJIvjZX0Jegytu1aAqOyQNLhc/u31XTQ6FXKrKR3fuQb3N5pF77158T5R+
      0KYcBD74gfLsWaxTqrZFuLutg0f6+qvV/JLIksTP7xykeZm0DUmSaPzUJ3H011b8rl07afj5
      j92xo+PdSNUEIEkSTw9sZXdbe7VCuAEJeGbLdna0tq3o87LTSdO//F3UjtqIX+vtJfzbv4VU
      w0PLWqSqSSKaovALu+5hZ2t1byIJeHpgK4/09a/q6akGgzT/we+jtq1MNOVC6+mh5Q9/H6Wh
      oapxrEWqbpEEYFoW3zl7ioMTlypeM9qhKHxo207u6+y+46GDGY8z///8Z/QLF2yObnmcO3fS
      9Dufq6c83yE1IQAoVnw4Mj3Jd8+eImfXEcRlaPJ4+djOPfQFQyWPmy1dJ/5XXyvWD61EGRJF
      wf/ep2n8xCeQHPVhz51SMwK4wlwqxbfOnGQ4Wr7KxrIksa+rh6cHtuB12GcGLYQgd+wYsa/+
      lW2p00uhtrcT+pVfxrljR33CWyI1JwAo3kin5y7z46ELtnoJSMC2llae2LiZrgZ7jzlej5XL
      kXrhRZLf/R5m3L6KeEooROBDH8T3xOP1ya5N1KQArmAJwVBknjfGL3EhMk/hDqsb+BxOdrS2
      8UB3L+3+QMWemlYuR/qVn5J57QD5oSG4k/hVFeemjXgfewzPgw8gO+3rserUuACuIN4urDUW
      jzIUWWByMU4smyFvmjfYmkqAqii4VJVmr4/uhkYGws30NAZX5f9re/yWhRmJkj16lPz5C+gj
      w5jJZLHo1fWiUBQkpxOlsQFHfz/OrVtx79mNEg7XT3WViTUhgKXIGwaZgo5umBiWCZKEQ1Fw
      qioeVbshi7PWEEIgMlmsdAormwXTAlVBdjqRfT5kmyra1VmeNSuAOnXsoN6v1rmrqQugzl1N
      XQB17mrqAqhzV1MXQJ27mroA6tzV1AVQ567mfwCE4Q3NkPcBpgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      z9KKd1P1AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Monthly Actual Sales' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Monthly Profit Analysis' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Monthly Target Sales' width='192'>
      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
      nW5NAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='More Contributing Category' width='192'>
      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
      /wcCstSHNAxSkgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='State based Profit Trend' width='192'>
      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
      5FTz/wGCfFtOefi8YQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Target Vs actual sales in category' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Top 10 Order ID based on Loss' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 Order ID based on Profit' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAZZElEQVR4nO2dSYwc59nff1W979M93bPvzeEmU5RMSpY/GdJnwDZgnwMY3yU5JocAyclA
      cnKQHHILkJuBL9cgQBIfEwM2REkOtAA0JUoiOVv3rL339PTeXdW15DCkJH9ij9VF1mz1/gCB
      nFH/63mKNf95l3qf95VM0zQRCByKfNYJCARniTCAwNEIAwgcjTCAwNEIAwgcjTCAwNHYagDD
      ME5dZ2VW1zTNM8lV6J6vs/IMrcaz1QBWXzFYvRnTNE89ptC9XN1pPz+3JdX3pNFR+CJTHlln
      GAayPLo3DdNAkiQkpNOLKXQvrHtlOUVqLDRyjJeBrQYoVFv8l//5iZ0hBJeA3/zD22dmADEI
      FjgaYQCBoxEGEDiaoQZ4NqPybFT+7a+/z38CwShomsZHH32Eoii8//77fPDBB1SrVf74xz9S
      q9Vsizt0EJzZeMLAkNBwc+vGKrVKgWK5SCCYIF+ssLS8hNKsoEpeJiJedktHROMTSMoR1VqP
      O2/dsS1pweXj448/5ubNm7z33nv86le/4t69e9y/f5+ZmRnGxsZsi3tCF8jE0FQ8HjeZTIZw
      NI6Eh2QqyfhYkMPDKtVqjX6rTq7U4pXbt0DtkojHGUslcdmWsuAykk6nuX//Pt1ul1KpxOTk
      JO+++y6hUIhPP/3UtrhDDSBLMpLLg6GbpNNpth5/gYaMovTBBCSZeDyKJLmIJ0I8evglst/P
      w4ePwNCx9lpC4FR8Ph+GYfDjH/+YarXK9evX2dvb48mTJywtLdkWV7KzIuxRtsS//8d7dl1e
      cEn4zT+8zdu35gHQdR1ZlpGk0V5mapqG2z36ay0xCyRwNMIAAkcjDCBwNMIAAkdj6yBY0zQM
      CyszdU3H5R59ItXQDSRZGnkAhQm6oeNyjR7Taq5C9w1uWUaWj5/ZaQ+CbV0NKkkSXgs/VBom
      biv/6NJxzFGX75qmiaxbi2k1V6E7H4gukMDRCAMIHI2tXSCjto368X8dXWeaDEbtx/O0nE4a
      vR7MPBZbimk1V6F7Pt9+hnLyKr6/+9cjX2MUbDWA2W+gZd6zpL1ISyms5ip0J+NSOy94hb+N
      6AIJHI0wgMDRCAMIHM3QMUDzqEKueMjswhLRkB+l12Jnr8hyeom9rQy+2DgTMT97hUMW5ybI
      bO2QnJnHR59aR2Npbvo070NwiXnw4AGRSITV1VXa7Tbvv/8+t27dIpfL0el0WFxcpFar8dZb
      b4187aEtQLXe5uqVJbaz2wAMNJP5qRDZjSwHhy1isQiPHz0CSaJRPqA5kIhGfDz6am30N7EC
      wQlMTExQr9cBWFtb491332V7e5s333wTRVGIx+O0Wi1L1x7aAhhql42tbYJBH5lMhngsQumo
      z7UbV7lq6Hz55SNw+Yh7dQahGe5OuXj05Am+YAK9WaU7NWXvFJPAMYTD4a//7nK5aDQa6LrO
      n/70J37605/i8/ksX3toCxAJRzBNE18gTDqdplE7xNQUDg8PWV9bJzo+wfREnGJDwat3WdvI
      kJpaJBFzo7gC+MXoQvASME2TL7/8kqOjIz766CNeeeUVdnd3uXv3Ll6vl/v37/PgwQMURbHU
      Cti6GE7d/wvK//oXdl1ecMlxzf+I4D/7b9/rs6IiTCCwgDCAwNEIAwgcjb31AP4oruV3RtaZ
      pmltKtUEC/U3T2OCpZAWcxW6YUK+foau1LXR9SNi6yBY161VWVkd0Oi6brkgRtd1SzGt5ip0
      z0dsiyIQnCLCAAJHY+/LWtPE1PXRdYZhWYckWdud+gViCt1L0EkSkoWjmF4UWw2gbG5S/Q//
      0c4QgktC8K0fkfy3/+bU44oukMDRCAMIHI0wgMDRCAMIHM3QQXDhYIejZpfwWJKFmQmOKgXy
      pQpTs/Psbe+SnJ7B7DUoV+ukr1+lsH/AxOwi/cM9iM4xl4qe5n0ILgGqqvL73/8en8/H2NgY
      jUaD27dvk8/n6Xa7/PznP3/pMYe2AJ1OB9M06Pf7KIpCbHySRCxAr9VBw0TXDRZWrhCNRWnk
      9lBMib6iMJ4Yo6eqLz1RweXHMAx0XadUKjEYDOh2u9Trdfr9vm0HLw5tAWRvkBtX5vjqqydU
      yjKmruKLTpIMuUmkUmxubNALy3ijKQJKFV9smnopz9RswpZEBZcfv9/P3Nwc7XabwWDA+Pg4
      9Xodr9dLJpOxJeZQA0zEI6xvbLG8ep1I0EulcEC1lMM7t0C9ss9S+gqGpLMQCyExxv7ONgvL
      y+zuZtBMFwM9aUvCgsvNW2+9hdvtRpKkv1qf9fbbb9sSb6gBwmNJbox980Ocmp4j9XSjh7HI
      lX/yaYmF5TQA6as3vv7u4OXlKXAIbrf768Vw317UaNdGC2IWSOBohAEEjkYYQOBobF0M556c
      IvGv/uXIOsMwRi5qgWdVSGClLMxqTKF7OTp3KjVyjJeBqAhDVISdJ52oCBMIThFhAIGjsXUM
      0FFVtuu1kXUvMgYAydLuDue9j3xZdRPhCNORs1s3ZqsBqp02//3hAztDCC44f798helrZ2cA
      0QUSOBphAIGjEQYQOBphAMGZY5omX3zxBY1Gg88++4wPPviATqfDgwcPUG2uLRk6CN5af4yq
      gyF7+cH1KxyW8xRLRYLhBLlChcXlRRqlfXqqwezMOPvFNivpJVqVA8q1HnffumNr4oLLw/b2
      NrIs8/777/PLX/6STz75hIcPHzI1NcWHH37Iz372M9tin9ACmJj6ALfbRSaTIRxLIMseEuPj
      JMaCHNWOnm5CZeD1Rwj5ZY6OmkSjEUxJQrbt/bLgsjExMcH+/j61Wg1d17+eQp2dncXj8dga
      e2gLIEkyksuDrhlcv57mqwefonvDqKqCZIJhGmCYeFwuen0VSTIxzQG1Wg+3ZDAQBhB8Tzwe
      Dx6PhzfeeINcLsfrr7+OYRj84Q9/4ObNm7bGtnUtULZa4Xf3P7Hr8oJLwN8vX+GX174pohJr
      gQSCU0QYQOBohAEEjkYYQOBobB0EDzQNw4JO0zXcLgvFFIaOLI0+gDIxMXTDWvGOxVyF7hiX
      LOGWv/l3P+1BsK2rQWVJwmPhh8oFFquJJOsVYVirCLOaq9CdD0QXSOBohAEEjsbWNqrQzPG/
      v/gfI+usn01r7azfF4spdC9Xd7rnNdtqgFa/xae7H9kZQiB4IUQXSOBohAEEjkYYQOBoho4B
      WkdVDopV5haXiQR9qP0OO3sFltNL7G5t4YuOE/PDYUtlbipBZmub8el51GaFru5mdWXhNO9D
      ILDE0BagUm9xdXWJbCYLgKJozE0G2VrPkD/qEh+LsLNXQOo32N/dpq25iUVC7O3vE4+PndoN
      CAQvwlADGGqX9c1tgkEfmUwGTVPZKfW4en2VH//wFbbWN3DLJo1On8T0CreuzrC+tsEbP/o7
      SjtZxClhgovA8BNiQmFqzQ4+f5iF2QmyG49Bl6jValRLJaKJcWS1TauvMeg1yJUrjE9Mkd3a
      RAqGsbeQTSB4OQw1wNTcIlPf+nrl6jelaankd8//SqUmj/8yIc4GE1wcxCyQwNEIAwgcjTCA
      wNHYuhYo6A1xa/q1kXVWFzbB8fboVjAxkSxoL84is4uhs/oMrcYTRyQhjkg6TzqxLYpAcIoI
      Awgcja1jAFPvMGhnR9bpho4pj951MkwDSZIs9eUNw8C0cBSQ1VyFDpDAEx19jPgysdUAem+X
      zvq/szOE4EIjkXjz/5xpBqILJHA0wgACRyMMIHA0wgCCM6fdbrO3twdALpejXq/T6XTIZrPY
      +JoKOGEQvL21Tk/VkT1Brq8uHR+RVC4RjaU4yBWZW1ygfVigo+ikVxbJ5wu4/VE8epvDpsoP
      757t6F5wcfjzn/9MMBgkn89TLpe5c+cO9+7d48qVK7bHHtoC6LqGqQ8Ak0wmQyQ+gVt2EQqF
      iIT9NBsNNE2Hfg9FDhAJeIlGI0SjEQa6IY5IEnxvotEo1WqVzz77jPHxcR48eECr1SKTydDt
      dm2NfUIXSMYfDKENNNLpNFtfPUBzBTAx8Hl9qOqAyYkUnnAYtbJLoaHgdpk0W318ko5iZVdc
      gSOJx+P4fD5+/etfk8/nSaVSzM/PI8syPp/P1thD1wIZus5A0/B4vMiyhKYN0HUDt8eDoWnI
      bjcYOiYysnS8E7TL5cY0dZBceNwulMaXdNZ/Y+sNCC4y330PcG52h5ZdLnzfWsjmdnt4dn2X
      1/v0Q980IN98dvS3hgLBWSFmgQSORhhA4GiEAQSOxtaCGG3QQ9IbI+usFtIYhoEkW1kNaqIb
      Bi4rqx4t5ip0gAQu39RffevcDIJfBpLsxeWZ+tsf/CeYmobLyvE6L1ARZuq6pZhWcxW684Ho
      AgkcjTCAwNHY2kZ1ai22P14bWWcaJpJscWcApNE3FTCfaq3EtJqr0D1fZ/EZWo1nqwGUdo+d
      TzfsDCEQvBCiCyRwNMIAAkcjDCBwNEPHAN1WnXy5xuz8AgGvG33QZz9XZn5xlvzOLu7wGDG/
      TLNvEPZCsVIjlkiB2sb0hJgYF6fECM4/Q1uAYqXG3MwEG+ubALRaHeIRic21DLlah0jQz/Ze
      gU41z8AVZDoVo97s4AuEKOzuoJ3aLQgE1hl+RNKgRza7SyBwfESSLEsclHukV1e4vjLD1laW
      oE/isNZgYEKheMjSwjRqr41mgikKYgQXgKEGCASCIEl4vAHS6TSlfA4JnXq9TiFfJBiJ4vf5
      CCVSJAIy/sgYHlmnVmvi8Xot7tEsEJwuti6Gq2wX+Ogf/2jX5QWCF0bMAgkcjTCAwNEIAwgc
      ja1rgVweD7GZxMg6y8frPBvNWJFekCOELrsO8+kRSaMuhhNHJIkjki6DThyRJBCcIsIAAkcj
      DCBwNPZWLVdq8N7/G1lmdW+5F3Gz1ZhCd4Luh7fguv07PL8I9hrAMKCvjCyzuozitHVnEfNC
      6bTzvyRSdIEEjkYYQOBohAEEjmboGKBSOKBy1GQsOcXMRIKjSoF8qcrc8iqHuR280SQevcth
      W2V5Lsnm1gHTC4vorRKEp5hKhE/zPgTnlHw+z1/+8heSySS9Xo9ms8kbb7zB559/zp07d5ia
      Gn3nwJfJ0Bag0Wrh83lptVoAxMYnmUqGKWQzFBs9dH1As6MyGfGSLxRRTZBlmVDAS6vXP7Ub
      EJxvms0moVCITCaDx+NhZWWFDz74AFmWKRaLZ53e8BZAcnmZmZ4kk90lk8kQ8LoxPBHmZ3y4
      ux66zQoSMupAIpyYZmHRz9r6NjcWx0E9zVsQnGcWFxdpNBpMT0/TbDap1+usrKxgGAbNZvOs
      0xtugPGxMDu7+0zPLzEeC1HY36F1VCE8v4SvlSeSmiEgq1RbA2b8MtnMNosri+zuZVEMF4Op
      pBhgCPB6vczNzTE5OYmqqvT7feLxOMVikWQyedbp2bwYLl/C9Yd7dl1ecN558zX4wfWRJGIx
      nEBwiggDCByNMIDA0di7FigchDuvjiwzDGPkohYAwzSQkEbuP5qYmIZpLabVXJ2gm0yNrDtt
      REUYoiLsPOnEIFggOEWEAQSOxtYxgNrv0SjnRtbpuoHLZaXfebwzwMibA5hP+6wWYlrN9TLr
      JhZXR45zVthqgKPiAf/3d//ZzhCCc8g//0+/Q7Jw5vJZILpAAkcjDCBwNMIAAkcjDCCwhX6/
      z87ODqZpsru7S7fbpV6vU6lUzjq1v2LoIHhna52uquPyBrl2ZYnDcp5iuUR0bIajWonExAz9
      eolmT2N+bopKqYQqBYh6BtSaA16/e/s070Nwzrh37x7j4+M8fvyYcDjM559/jtvtZjAY8Itf
      /IJgMHjWKQIntACarmHqAwzTJJPJEE1M4JFd6L0GPc3k6OgQXAFWppLgjxAPB1hOLxONRlB1
      Hdm298uCi4DP5yOXy5FIJCgWi/j9frxeL5VKhX7//FQMDu8CSS5CkSj6YEA6nWbrq88wPGFi
      iRhuWcY0DDSlzW6pQsAt01AlYn5odwb4ZQNFnBHmaLxeL8FgEMMwCAaD+Hw+4vE48/PzjI2d
      nxNEh3aBllfSKOqAeb8fgCs3X2Wg6Xh9fl6NjCHJbmTJZKCbeD1uVq+sABLTszNMz8/juxjT
      wAKb+MlPfmJpbc5pMzRDl9tD0O35+muP14fH++x/+r7+/rMfdNfT16++p4YRCC4CYhZI4GiE
      AQSORhhA4GhsLYhR+j36rfrIOquFNIZhPF0NOmJF2NPVoNZWS1rL9TLroslJdN24EAUxtg7T
      3R4vsdT0yDpREXbxdXAx5sFFF0jgaIQBBI7G1i5Qr9sht7M9ss76rhAmEljbFcI0kaULstvC
      ZdZ9a2ePYCjM/Ep65GuMgq0GUPp99rJbdoYQXGLiyZTtBhBdIIGjEQYQOBphAIGjGToG6LUb
      lKp1pmZm8Xvd6AOFfLHKzNwM7aMqhitA0AuNrkYqHqZQKDExPUOjWsT0BEnGY6d5H4JLzMbG
      Bj6fj8XFRfr9Ph9++CG3b99mf3+ffr9PMpmkVCrxzjvvjDwBMrQFyJeqpJJxNjY2AWi1WoT9
      GmuPt9jcK6IbOpnsLu3DAl89Xsfr97K+kcXl8XGQzXL+T4gVXCRKpRIAjx494u7duzx+/Jib
      N2/SbrfZ3t4mFotRrVZHvu5QA5han93dffx+P5lMBpfLRb7aZ3LMjS8YIXewh8fjJx6JEAqH
      KJXK9PsKmtJBQ7ooLwIFF4CJiYm/+s1umsfT1p9++imvvfYaXq/3BPXJDDWA3x8AScLt8ZFO
      pykc7CNh4AolMHsNAsEoPrfOXrVBKh4Dw2RhaZZarYXX40FURApeBqZp8vDhQ4rFIh9//DE3
      btzgwYMH3Lx5k36/z/r6OjMzMzSbTUtHLtm6GO6wUubBR3+26/KCS048meLu2+98/fWzH9Xn
      9fPP5WI4geBlMuoA9/sgpkEFjkYYQOBobO0CuVwuwpHoyDoTE4nRm7tngxkrDaVpWWc1V6F7
      vu4YCQgEQyPrR0UckYQoiDlPuktVEQbfjNxPS3cWMYXu4upsNYBpmhjG6G/EXkT37T9PK6bQ
      vVzdt/+0O56tBpBl2VJRhJVuDLxIUbxpOabQvVyd1WdoOU87xwACwXnH9dvf/va3dgZo1yus
      b+4QjY/jOWHbkW6zxnauQjzs48mTJ5juAPVKjkKlwXh8bOjBd81ama3sNm5/mIPsOt0BDDpH
      ZPeKJJOJob9Jeq0jNreyaJKHWmmfaqOHF+V75do8LFGsd+g3DtkrHjIW8vDo0Tq+cAy/d1ij
      arL+6AuafR3UDls7OcbGImyuPUGXfYSDz99S0jRNdrbW6agm/dYh27kyiYifR4/XcAciBH2e
      5+oMTWVzY4OdXJmQx2Qzu0dsLEZm/Qmq6SYSCgy9v73sJrlSjXDAzZMnGwRicXI7GzS6GmOx
      yFBdKbfL9kGJRCzE+pM1TE+AevmAwmFz6DNsHVU4KNeJBd08efwE2RfmsLBLud4hIA14srlN
      5DnPQ+k22dzOkUzEeLy+RWo8wfbWOo3uANQOm9t7JJLJr7fsfEancchu4ZBYwMXaxqb97wEK
      lSNurC6QL5ZP/JzkCWAoPQ7LeaaWr1OvFukoGjGvRvOErabDY0lmJhIc5TeQ48v0OnVqrS7p
      lJeDujpUF4hECfq8dBoVVDmIS++xV/zbuRq6Sr7apN86otlTmA7D/bUDXnn1B5QLB8Nv0FCp
      N/rIkkyl3uLq3BiP19ZIzl+jeTQ8ntrMs1ftohs69U6fpTGZ+2v7rN54hcPS8BM4ZbeX1aur
      hAM+yrUG15em2Fz7kvD0Ku3GyasmG60WWr/F1m6JH7z6CvmNzzACE6j91gkqk8NGh/mYxGdP
      MsysXKdeKdAZmETdGm31+c/Q7Q+j9pqU9nMs3rhFrbxNf+DFO1DIlmvcurFIbr/03WiSBwwF
      U9eRTBV90AJ3DL3XpnDU5Hp6koNc7bv/Lt4gmtJG9gZJL86fwosww0BRFKS/0T8LBI5/A8qy
      zEBVMJ5OTQ4GGiftV1Wv5GmoLpbmp9HUPrquo+s6iqrhcQ3vRw4GOuMTSTqdLrqmoWkakmmg
      qOqJubZqZXp9hVyxiqbpqKqGzwWKomCeMO9tmi5u33md5lEFQ9dR1AEet/v4XvXhvVBJcpGa
      nKXTPELXdfqqhs8toagKhnlyP7mS3yM5M49hHN+X2+1FUxV0/eTBoolM2O9loA2O78vlRR+o
      6Lp+gkpiOpVga7dIwOdBVRUMw0TXdAaahjwk1UDguCVyuSRURUE3JHR9wEDXkQ0DRVHhOSdO
      +p/qZLcHSZKRJBlNGxznaOgofQX5OVPwz+Lp/SZbBxX7p0EX5mfZzZVZXlk58XOl/D6qquAK
      zdIo5ZmeW0Tr1GgPZELe4T+QA92g26zRCC8QNAr4J2cJSAMKtQ5XZp7fPQDQlB65fIn55VW0
      do2BnCIZ9bF7UGI5PTzXWGqO15KzNBoN0BVqHY3XbiTZ3No5uYBbguLBLuOTM8SDLg7KDW5c
      u8bedpapuYWhMk9kkmgtizs1RVDWqDQVbl+fILO1zfzi8vB4gDecYCzsIzQ3zV7hkNVrNznY
      yTI5MzwewGQyQVuFWyspstk9lq+9Sq24hxyZOlFnmAaJuTRLs5NsZ7PMzC8xaNfoaC6Cz32G
      JoX9XVRVJTC3QDm3y/ziVXr1En18LI4FyO4XWXnO8zgs51FVlVK5gqaqlOsqYb+OHJgk5pPY
      Lx2RTs98R1fKHcerHrUxdVUMggXO5v8DmZnJzzVfk8wAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Trend Analysis (2018 - 2019)' width='192'>
      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
      gM6+5v8HF9aVzxz7hPcAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
